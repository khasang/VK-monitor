<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VkNet</name>
    </assembly>
    <members>
        <member name="T:VkNet.Categories.AccountCategory">
            <summary>
            Методы этого класса позволяют производить действия с аккаунтом пользователя.
            </summary>
            <summary>
            Методы этого класса позволяют производить действия с аккаунтом пользователя.
            </summary>
        </member>
        <member name="M:VkNet.Categories.AccountCategory.RegisterDevice(System.String,System.String,System.String,System.Nullable{System.Boolean},VkNet.Enums.Filters.SubscribeFilter)">
            <summary>
            Подписывает устройство на базе iOS, Android или Windows Phone на получение Push-уведомлений.
            </summary>
            <param name="token">Идентификатор устройства, используемый для отправки уведомлений. (для mpns идентификатор должен представлять из себя URL для отправки уведомлений)</param>
            <param name="deviceModel">Строковое название модели устройства.</param>
            <param name="systemVersion">Строковая версия операционной системы устройства.</param>
            <param name="noText">Не передавать текст сообщения в push уведомлении. (по умолчанию текст передается)</param>
            <param name="subscribe">Список типов уведомлений, которые следует присылать. По умолчанию присылаются: <see cref="F:VkNet.Enums.Filters.SubscribeFilter.Message"/>, <see cref="F:VkNet.Enums.Filters.SubscribeFilter.Friend"/>.</param>
            <returns>Возвращает результат выполнения метода.</returns>
            <remarks>
            Страница документации ВКонтакте <seealso cref="!:https://vk.com/dev/account.registerDevice" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AccountCategory.SaveProfileInfo(System.String,System.String,System.String,System.Nullable{VkNet.Enums.Sex},System.Nullable{VkNet.Enums.RelationType},System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{VkNet.Enums.BirthdayVisibility},System.String,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
             Редактирует информацию текущего профиля.
            </summary>
            <param name="firstName">Имя пользователя</param>
            <param name="lastName">Фамилия пользователя</param>
            <param name="maidenName">Девичья фамилия пользователя</param>
            <param name="sex">Пол пользователя</param>
            <param name="relation">Семейное положение пользователя</param>
            <param name="relationPartnerId">Идентификатор пользователя, с которым связано семейное положение</param>
            <param name="birthDate">Дата рождения пользователя</param>
            <param name="birthDateVisibility">Видимость даты рождения</param>
            <param name="homeTown">Родной город пользователя</param>
            <param name="countryId">Идентификатор страны пользователя</param>
            <param name="cityId">Идентификатор города пользователя</param>
            <returns>Результат выполнения операции.</returns>
            <remarks> Если передаются <paramref name="firstName"/> или <paramref name="lastName"/>, рекомендуется
            использовать перегрузку с соотвествующим out параметром типа <see cref="T:VkNet.Model.ChangeNameRequest"/> для получения объекта заявки на смену имени.</remarks>
        </member>
        <member name="M:VkNet.Categories.AccountCategory.SaveProfileInfo(VkNet.Model.ChangeNameRequest@,System.String,System.String,System.String,System.Nullable{VkNet.Enums.Sex},System.Nullable{VkNet.Enums.RelationType},System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{VkNet.Enums.BirthdayVisibility},System.String,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
             Редактирует информацию текущего профиля.
            </summary>
            <param name="changeNameRequest">Если в параметрах передавалось имя или фамилия пользователя,
            в этом параметре будет возвращен объект типа <see cref="T:VkNet.Model.ChangeNameRequest"/>, содержащий информацию о заявке на смену имени.</param>
            <param name="firstName">Имя пользователя</param>
            <param name="lastName">Фамилия пользователя</param>
            <param name="maidenName">Девичья фамилия пользователя</param>
            <param name="sex">Пол пользователя</param>
            <param name="relation">Семейное положение пользователя</param>
            <param name="relationPartnerId">Идентификатор пользователя, с которым связано семейное положение</param>
            <param name="birthDate">Дата рождения пользователя</param>
            <param name="birthDateVisibility">Видимость даты рождения</param>
            <param name="homeTown">Родной город пользователя</param>
            <param name="countryId">Идентификатор страны пользователя</param>
            <param name="cityId">Идентификатор города пользователя</param>
            <returns>Результат выполнения операции.</returns>
        </member>
        <member name="F:VkNet.Categories.AccountCategory._vk">
            <summary>
            API.
            </summary>
        </member>
        <member name="M:VkNet.Categories.AccountCategory.#ctor(VkNet.VkApi)">
            <summary>
            Методы для работы с аккаунтом пользователя.
            </summary>
            <param name="vk">API.</param>
        </member>
        <member name="M:VkNet.Categories.AccountCategory.GetCounters(VkNet.Enums.Filters.CountersFilter)">
            <summary>
            Возвращает ненулевые значения счетчиков пользователя.
            </summary>
            <param name="filter">Счетчики, информацию о которых нужно вернуть (friends, messages, photos, videos, notes, gifts, events, groups, notifications, sdk, app_requests). 
            sdk - возвращает количество запросов в приложениях. 
            app_requests - возвращает количество непрочитанных запросов в приложениях. список слов, разделенных через запятую (Список слов, разделенных через запятую).</param>
            <returns>
            Возвращает объект, который может содержать поля friends, messages, photos, videos, notes, gifts, events, groups, notifications, sdk, app_requests.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/account.getCounters" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AccountCategory.SetNameInMenu(System.String,System.Nullable{System.Int64})">
            <summary>
            Устанавливает короткое название приложения (до 17 символов), которое выводится пользователю в левом меню.
            </summary>
            <param name="userId">Идентификатор пользователя. положительное число, по умолчанию идентификатор текущего пользователя, обязательный параметр (Положительное число, по умолчанию идентификатор текущего пользователя, обязательный параметр).</param>
            <param name="name">Короткое название приложения. строка (Строка).</param>
            <returns>
            Возвращает 1 в случае успешной установки короткого названия. 
            Если пользователь не установил приложение в левое меню, метод вернет ошибку 148 (Access to the menu of the user denied). Избежать этой ошибки можно с помощью метода account.getAppPermissions.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/account.setNameInMenu" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AccountCategory.SetOnline(System.Nullable{System.Boolean})">
            <summary>
            Помечает текущего пользователя как online на 15 минут.
            </summary>
            <param name="voip">Возможны ли видеозвонки для данного устройства флаг, может принимать значения 1 или 0 (Флаг, может принимать значения 1 или 0).</param>
            <returns>
            В случае успешного выполнения метода будет возвращён код 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/account.setOnline" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AccountCategory.SetOffline">
            <summary>
            Помечает текущего пользователя как offline.
            </summary>
            <returns>
            В случае успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/account.setOffline" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AccountCategory.LookupContacts(System.Collections.Generic.List{System.String},VkNet.Enums.SafetyEnums.Services,System.String,System.Nullable{System.Boolean},VkNet.Enums.Filters.UsersFields)">
            <summary>
            Позволяет искать пользователей ВКонтакте, используя телефонные номера, email-адреса, и идентификаторы пользователей в других сервисах. Найденные пользователи могут быть также в дальнейшем получены методом friends.getSuggestions.
            </summary>
            <param name="contacts">Список контактов, разделенных через запятую. список слов, разделенных через запятую (Список слов, разделенных через запятую).</param>
            <param name="service">Строковой идентификатор сервиса, по контактам которого производится поиск. Может принимать следующие значения: (email, phone, twitter, facebook, odnoklassniki, instagram, google) строка, обязательный параметр (Строка, обязательный параметр).</param>
            <param name="mycontact">Контакт текущего пользователя в заданном сервисе. строка (Строка).</param>
            <param name="returnAll">1 – возвращать также контакты, найденные ранее с использованием этого сервиса, 0 – возвращать только контакты, найденные с использованием поля contacts. флаг, может принимать значения 1 или 0 (Флаг, может принимать значения 1 или 0).</param>
            <param name="fields">Список дополнительных полей, которые необходимо вернуть. 
            Доступные значения: nickname, domain, sex, bdate, city, country, timezone, photo_50, photo_100, photo_200_orig, has_mobile, contacts, education, online, relation, last_seen, status, can_write_private_message, can_see_all_posts, can_post, universities список слов, разделенных через запятую (Список слов, разделенных через запятую).</param>
            <returns>
            В качестве результата метод возвращает два списка: 
            found – список объектов пользователей, расширенных полями contact – контакт, по которому был найден пользователь (не приходит если пользователь был найден при предыдущем использовании метода), request_sent – запрос на добавление в друзья уже был выслан, либо пользователь уже является другом, common_count если этот контакт также был импортирован друзьями или контактами текущего пользователя. Метод также возвращает найденные ранее контакты. 
            other – список контактов, которые не были найдены. Объект содержит поля contact и common_count если этот контакт также был импортирован друзьями или контактами текущего пользователя.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/account.lookupContacts" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AccountCategory.RegisterDevice(VkNet.Model.RequestParams.AccountRegisterDeviceParams)">
            <summary>
            Подписывает устройство на базе iOS, Android или Windows Phone на получение Push-уведомлений.
            </summary>
            <param name="params">Параметры запроса.</param>
            <returns>
            Возвращает 1 в случае успешного выполнения метода. 
            На iOS и Windows Phone push-уведомления будут отображены без какой либо обработки. 
            На Android будут приходить события в следующем формате.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/account.registerDevice" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AccountCategory.UnregisterDevice(System.String,System.Nullable{System.Boolean})">
            <summary>
            Отписывает устройство от Push уведомлений.
            </summary>
            <param name="deviceId">Уникальный идентификатор устройства. строка, доступен начиная с версии 5.31 (Строка, доступен начиная с версии 5.31).</param>
            <param name="sandbox">Флаг предназначен для iOS устройств. 1 — отписать устройство, использующего sandbox сервер для отправки push-уведомлений, 0 — отписать устройство, не использующее sandbox сервер флаг, может принимать значения 1 или 0, по умолчанию 0 (Флаг, может принимать значения 1 или 0, по умолчанию 0).</param>
            <returns>
            Возвращает <c>true</c> в случае успешного выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/account.unregisterDevice" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AccountCategory.SetSilenceMode(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Отключает push-уведомления на заданный промежуток времени.
            </summary>
            <param name="deviceId">Идентификатор устройства для сервиса push уведомлений.</param>
            <param name="time">Время в секундах на которое требуется отключить уведомления. (-1 - отключить навсегда)</param>
            <param name="chatId">Идентификатор чата, для которого следует отключить уведомления.</param>
            <param name="userId">Идентификатор пользователя, для которого следует отключить уведомления.</param>
            <param name="sound">Включить звук в данном диалоге. (параметр работает только если указан <paramref name="userId" /> или <paramref name="chatId" /> )</param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте <seealso cref="!:https://vk.com/dev/account.setSilenceMode" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AccountCategory.GetPushSettings(System.String)">
            <summary>
            Позволяет получать настройки Push уведомлений.
            </summary>
            <param name="deviceId">Уникальный идентификатор устройства. строка, доступен начиная с версии 5.31 (Строка, доступен начиная с версии 5.31).</param>
            <returns>
            Возвращает объект, содержащий поля:  
            disabled — отключены ли уведомления. 
            disabled_until — unixtime-значение времени, до которого временно отключены уведомления. 
            conversations — список, содержащий настройки конкретных диалогов, и их количество первым элементом. 
            settings — объект с настройками Push-уведомлений в специальном формате.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/account.getPushSettings" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AccountCategory.SetPushSettings(System.String,VkNet.Model.PushSettings,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Изменяет настройку Push-уведомлений.
            </summary>
            <param name="deviceId">Уникальный идентификатор устройства. строка, обязательный параметр (Строка, обязательный параметр).</param>
            <param name="settings">Сериализованный JSON-объект, описывающий настройки уведомлений в специальном формате данные в формате JSON (Данные в формате JSON).</param>
            <param name="key">Ключ уведомления. строка (Строка).</param>
            <param name="value">Новое значение уведомления в специальном формате. список слов, разделенных через запятую (Список слов, разделенных через запятую).</param>
            <returns>
            Возвращает 1 в случае успешного выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/account.setPushSettings" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AccountCategory.GetAppPermissions(System.Int64)">
            <summary>
            Получает настройки текущего пользователя в данном приложении.
            </summary>
            <param name="userId">Идентификатор пользователя, информацию о настройках которого необходимо получить. По умолчанию — текущий пользователь. положительное число, по умолчанию идентификатор текущего пользователя, обязательный параметр (Положительное число, по умолчанию идентификатор текущего пользователя, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает битовую маску настроек текущего пользователя в данном приложении. 
            
            Пример Если Вы хотите получить права на Доступ к друзьям и Доступ к статусам пользователя, то Ваша битовая маска будет равна: 2   1024 = 1026. 
            Если, имея битовую маску 1026, Вы хотите проверить, имеет ли она доступ к друзьям — Вы можете сделать 1026 &amp; 2. Например alert(1026 &amp; 2); 
            см. Список возможных настроек прав доступа.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/account.getAppPermissions" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AccountCategory.GetActiveOffers(System.Nullable{System.UInt64},System.Nullable{System.UInt64})">
            <summary>
            Возвращает список активных рекламных предложений (офферов), выполнив которые пользователь сможет получить соответствующее количество голосов на свой счёт внутри приложения.
            </summary>
            <param name="offset">Смещение, необходимое для выборки определенного подмножества офферов. положительное число, по умолчанию 0 (Положительное число, по умолчанию 0).</param>
            <param name="count">Количество офферов, которое необходимо получить положительное число, по умолчанию 100, максимальное значение 100 (Положительное число, по умолчанию 100, максимальное значение 100).</param>
            <returns>
            Возвращает массив, состоящий из общего количества старгетированных на текущего пользователя специальных предложений (первый элемент), и списка объектов с информацией о предложениях. 
            В случае, если на пользователя не старгетировано ни одного специального предложения, массив будет содержать элемент 0 (количество специальных предложений).
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/account.getActiveOffers" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AccountCategory.BanUser(System.Int64)">
            <summary>
            Добавляет пользователя в черный список.
            </summary>
            <param name="userId">Идентификатор пользователя, которого нужно добавить в черный список. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <returns>
            В случае успеха метод вернет <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/account.banUser" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AccountCategory.UnbanUser(System.Int64)">
            <summary>
            Убирает пользователя из черного списка.
            </summary>
            <param name="userId">Идентификатор пользователя, которого нужно убрать из черного списка. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <returns>
            В случае успеха метод вернет <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/account.unbanUser" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AccountCategory.GetBanned(System.Int32@,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает список пользователей, находящихся в черном списке.
            </summary>
            <param name="total">Возвращает общее количество находящихся в черном списке пользователей.</param>
            <param name="offset">Смещение необходимое для выборки определенного подмножества черного списка. положительное число (Положительное число).</param>
            <param name="count">Количество записей, которое необходимо вернуть. положительное число, по умолчанию 20, максимальное значение 200 (Положительное число, по умолчанию 20, максимальное значение 200).</param>
            <returns>
            Возвращает набор объектов пользователей, находящихся в черном списке.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/account.getBanned" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AccountCategory.GetInfo(VkNet.Enums.Filters.AccountFields)">
            <summary>
            Возвращает информацию о текущем аккаунте.
            </summary>
            <param name="fields">Список полей, которые необходимо вернуть. Возможные значения: (country, https_required, own_posts_default, no_wall_replies, intro, lang, По умолчанию будут возвращены все поля. список слов, разделенных через запятую (Список слов, разделенных через запятую).</param>
            <returns>
            Метод возвращает объект, содержащий следующие поля: 
            country – строковой код страны, определенный по IP адресу, с которого сделан запрос; 
            https_required – 1 - пользователь установил на сайте настройку "Всегда использовать безопасное соединение"; 0 - безопасное соединение не требуется; 
            own_posts_default – 1 - на стене пользователя по-умолчанию должны отображаться только собственные записи. Соответствует настройке на сайте "Показывать только мои записи", 0 - на стене пользователя должны отображаться все записи; 
            no_wall_replies – 1 - пользователь отключил комментирование записей на стене, 0 - комментирование записей разрешено; 
            intro – битовая маска отвечающая за прохождение обучения использованию приложения; 
            lang – числовой идентификатор текущего языка пользователя.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/account.getInfo" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AccountCategory.SetInfo(System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            Позволяет редактировать информацию о текущем аккаунте.
            </summary>
            <param name="intro">Битовая маска, отвечающая за прохождение обучения в мобильных клиентах. положительное число (Положительное число).</param>
            <param name="ownPostsDefault">1 – на стене пользователя по-умолчанию должны отображаться только собственные записи; 
            0 – на стене пользователя должны отображаться все записи. флаг, может принимать значения 1 или 0 (Флаг, может принимать значения 1 или 0).</param>
            <param name="noWallReplies">1 – отключить комментирование записей на стене; 
            0 – разрешить комментирование. флаг, может принимать значения 1 или 0 (Флаг, может принимать значения 1 или 0).</param>
            <returns>
            В результате успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/account.setInfo" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AccountCategory.ChangePassword(System.String,System.String,System.String,System.String)">
            <summary>
            Позволяет сменить пароль пользователя после успешного восстановления доступа к аккаунту через СМС, используя метод auth.restore.
            </summary>
            <param name="restoreSid">Идентификатор сессии, полученный при восстановлении доступа используя метод auth.restore. (В случае если пароль меняется сразу после восстановления доступа) строка (Строка).</param>
            <param name="changePasswordHash">Хэш, полученный при успешной OAuth авторизации по коду полученному по СМС (В случае если пароль меняется сразу после восстановления доступа) строка (Строка).</param>
            <param name="oldPassword">Текущий пароль пользователя. строка (Строка).</param>
            <param name="newPassword">Новый пароль, который будет установлен в качестве текущего. строка, минимальная длина 6, обязательный параметр (Строка, минимальная длина 6, обязательный параметр).</param>
            <returns>
            В результате выполнения этого метода будет возвращен объект с полем token, содержащим новый токен, и полем secret в случае, если токен был nohttps.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/account.changePassword" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AccountCategory.GetProfileInfo">
            <summary>
            Возвращает информацию о текущем профиле.
            </summary>
            <returns>Информация о текущем профиле в виде <see cref="T:VkNet.Model.User"/></returns>
            <remarks>
            Страница документации ВКонтакте <seealso cref="!:https://vk.com/dev/account.getProfileInfo" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AccountCategory.SaveProfileInfo(System.Int32)">
            <summary>
            Редактирует информацию текущего профиля.
            </summary>
            <param name="cancelRequestId">Идентификатор заявки на смену имени, которую необходимо отменить.</param>
            <returns>Результат отмены заявки.</returns>
            <remarks>Метод вынесен как отдельный, потому что если в запросе передан параметр <paramref name="cancelRequestId"/>, все остальные параметры игнорируются.</remarks>
            <remarks>
            Страница документации ВКонтакте <seealso cref="!:https://vk.com/dev/account.saveProfileInfo" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AccountCategory.SaveProfileInfo(VkNet.Model.ChangeNameRequest@,VkNet.Model.RequestParams.AccountSaveProfileInfoParams)">
            <summary>
            Редактирует информацию текущего профиля.
            </summary>
            <param name="changeNameRequest">Если в параметрах передавалось имя или фамилия пользователя,
            в этом параметре будет возвращен объект типа <see cref="T:VkNet.Model.ChangeNameRequest" />, содержащий информацию о заявке на смену имени.</param>
            <param name="params">The parameters.</param>
            <returns>
            Результат отмены заявки.
            </returns>
            <remarks>
            Страница документации ВКонтакте <seealso cref="!:https://vk.com/dev/account.saveProfileInfo" />.
            </remarks>
        </member>
        <member name="T:VkNet.Categories.AudioCategory">
            <summary>
            Методы для работы с аудиозаписями.
            </summary>
            <summary>
            Методы для работы с аудиозаписями.
            </summary>
        </member>
        <member name="M:VkNet.Categories.AudioCategory.GetFromGroup(System.Int64,System.Nullable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64},System.Nullable{System.UInt32},System.Nullable{System.UInt32})">
            <summary>
            Возвращает список аудиозаписей группы.
            </summary>
            <param name="gid">Идентификатор группы, у которой необходимо получить аудиозаписи.</param>
            <param name="albumId">Идентификатор альбома, аудиозаписи которого необходимо вернуть (по умолчанию возвращаются аудиозаписи из всех альбомов).</param>
            <param name="aids">
            Список идентификаторов аудиозаписей группы, по которым необходимо получить информацию.
            Если список не указан (null), то ограничение на идентификаторы аудиозаписей на накладываются.
            </param>
            <param name="count">Требуемое количество аудиозаписей.</param>
            <param name="offset">Смещение относительно первой найденной аудиозаписи (для выборки определенного подмножества аудиозаписей).</param>
            <returns>
            В случае успеха возвращает затребованный список аудиозаписей группы.
            </returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Audio"/>.
            Страница документации ВКонтакте <see href="http://vk.com/dev/audio.get"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AudioCategory.Get(System.Int64,VkNet.Model.User@,System.Nullable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64},System.Nullable{System.UInt32},System.Nullable{System.UInt32})">
            <summary>
            Возвращает список аудиозаписей пользователя и краткую информацию о нем.
            </summary>
            <param name="uid">Идентификатор пользователя, у которого необходимо получить аудиозаписи.</param>
            <param name="user">Базовая информация о владельце аудиозаписей - пользователе с идентификатором <paramref name="uid"/> (идентификатор, имя, фотография).</param>
            <param name="albumId">Идентификатор альбома пользователя, аудиозаписи которого необходимо получить (по умолчанию возвращаются аудиозаписи из всех альбомов).</param>
            <param name="aids">Список идентификаторов аудиозаписей пользователя, по которым необходимо получить информацию.</param>
            <param name="count">Требуемое количество аудиозаписей.</param>
            <param name="offset">Смещение относительно первой найденной аудиозаписи (для выборки определенного подмножества).</param>
            <returns>
            В случае успеха возвращает затребованный список аудиозаписей пользователя.
            </returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Audio"/>.
            Страница документации ВКонтакте <see href="http://vk.com/dev/audio.get"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AudioCategory.Get(System.Int64,System.Nullable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64},System.Nullable{System.UInt32},System.Nullable{System.UInt32})">
            <summary>
            Возвращает список аудиозаписей пользователя.
            </summary>
            <param name="uid">Идентификатор пользователя, у которого необходимо получить аудиозаписи.</param>
            <param name="albumId">Идентификатор альбома пользователя, аудиозаписи которого необходимо получить (по умолчанию возвращаются аудиозаписи из всех альбомов).</param>
            <param name="aids">Список идентификаторов аудиозаписей пользователя, по которым необходимо получить информацию.</param>
            <param name="count">Требуемое количество аудиозаписей.</param>
            <param name="offset">Смещение относительно первой найденной аудиозаписи (для выборки определенного подмножества).</param>
            <returns>В случае успеха возвращает затребованный список аудиозаписей пользователя.</returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Audio"/>.
            Страница документации ВКонтакте <see href="http://vk.com/dev/audio.get"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AudioCategory.InternalGet(System.String,System.Int64,VkNet.Model.User@,System.Nullable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64},System.Nullable{System.Boolean},System.Nullable{System.UInt32},System.Nullable{System.UInt32})">
            <summary>
            Возвращает список аудиозаписей пользователя или сообщества.
            </summary>
            <param name="paramId">Идентификатор параметра.</param>
            <param name="id">Идентификатор пользователя или сообщества, у которого необходимо получить аудиозаписи.</param>
            <param name="user">Данные о пользователе.</param>
            <param name="albumId">Идентификатор альбома пользователя, аудиозаписи которого необходимо получить (по умолчанию возвращаются аудиозаписи из всех альбомов).</param>
            <param name="aids">Список идентификаторов аудиозаписей пользователя, по которым необходимо получить информацию.</param>
            <param name="needUser"><c>true</c> — возвращать информацию о пользователях, загрузивших аудиозапись.</param>
            <param name="count">Требуемое количество аудиозаписей.</param>
            <param name="offset">Смещение относительно первой найденной аудиозаписи (для выборки определенного подмножества).</param>
            <returns></returns>
        </member>
        <member name="M:VkNet.Categories.AudioCategory.Search(System.String,System.Int64@,System.Nullable{System.Boolean},System.Nullable{VkNet.Enums.AudioSort},System.Nullable{System.Boolean},System.Nullable{System.UInt32},System.Nullable{System.UInt32})">
            <summary>
            Возвращает список аудиозаписей в соответствии с заданным критерием поиска.
            </summary>
            <param name="query">Cтрока поискового запроса</param>
            <param name="totalCount">Общее количество аудиозаписей удовлетворяющих запросу</param>
            <param name="autoComplete">Если этот параметр равен <c>true</c>, возможные ошибки в поисковом запросе будут исправлены. Например, при поисковом запросе <strong>Иуфдуы</strong> поиск будет осуществляться по строке <strong>Beatles</strong></param>
            <param name="sort">Вид сортировки</param>
            <param name="findLyrics">Будет ли производиться только по тем аудиозаписям, которые содержат тексты.</param>
            <param name="count">Количество возвращаемых аудиозаписей (максимум 200).</param>
            <param name="offset">Смещение относительно первой найденной аудиозаписи для выборки определенного подмножества.</param>
            <returns>Список объектов класса Audio.</returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Audio"/>.
            Страница документации ВКонтакте <see href="http://vk.com/dev/audio.search"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AudioCategory.Edit(System.Int64,System.Int64,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{VkNet.Enums.AudioGenre})">
            <summary>
            Редактирует данные аудиозаписи на странице пользователя или группы.
            </summary>
            <param name="audioId">Идентификатор аудиозаписи</param>
            <param name="ownerId">Идентификатор владельца аудиозаписи. Если редактируемая аудиозапись находится на странице группы, в этом параметре должно стоять значение, равное -id группы.</param>
            <param name="artist">Название исполнителя аудиозаписи.</param>
            <param name="title">Название аудиозаписи.</param>
            <param name="text">Текст аудиозаписи, если введен.</param>
            <param name="noSearch"><c>true</c> - скрывает аудиозапись из поиска по аудиозаписям, <c>false</c> (по умолчанию) - не скрывает.</param>
            <param name="genreId">Идентификатор жанра из списка аудио жанров.</param>
            <returns>
            Идентификатор текста, введенного пользователем
            </returns>
            <exception cref="T:System.ArgumentNullException">
            Artist parameter can not be <see langword="null"/>.
            or
            Title parameter can not be <see langword="null"/>.
            or
            Text parameter can not be <see langword="null"/>.
            </exception>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Audio" />.
            Страница документации ВКонтакте <see href="http://vk.com/dev/audio.edit" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AudioCategory.#ctor(VkNet.VkApi)">
            <summary>
            Методы для работы с аудиозаписями.
            </summary>
            <param name="vk">Api vk.com</param>
        </member>
        <member name="M:VkNet.Categories.AudioCategory.GetCount(System.Int64)">
            <summary>
            Возвращает количество аудиозаписей пользователя или сообщества.
            </summary>
            <param name="ownerId">Идентификатор владельца аудиозаписей (пользователь или сообщество). Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, обязательный параметр (Целое число, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает число, равное количеству аудиозаписей на странице пользователя или сообщества.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/audio.getCount" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AudioCategory.GetLyrics(System.Int64)">
            <summary>
            Возвращает текст аудиозаписи.
            </summary>
            <param name="lyricsId">Идентификатор текста аудиозаписи, информацию о котором необходимо вернуть. целое число, обязательный параметр (Целое число, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает объект lyrics c полями lyrics_id — идентификатор текста и text — текст аудиозаписи. 
            В качестве переводов строк в тексте используется /n.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/audio.getLyrics" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AudioCategory.GetById(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Возвращает информацию об аудиозаписях.
            </summary>
            <param name="audios">Идентификаторы аудиозаписей, информацию о которых необходимо вернуть, в виде {owner_id}_{audio_id}. список строк, разделенных через запятую, обязательный параметр (Список строк, разделенных через запятую, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает массив объектов audio. Обратите внимание, что ссылки на аудиозаписи привязаны к ip адресу.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/audio.getById" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AudioCategory.GetById(System.String[])">
            <summary>
            Возвращает информацию об аудиозаписях.
            </summary>
            <param name="audios">Идентификаторы аудиозаписей, информацию о которых необходимо вернуть, в виде {owner_id}_{audio_id}. список строк, разделенных через запятую, обязательный параметр (Список строк, разделенных через запятую, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает массив объектов audio. Обратите внимание, что ссылки на аудиозаписи привязаны к ip адресу.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/audio.getById" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AudioCategory.Get(VkNet.Model.User@,VkNet.Model.RequestParams.AudioGetParams)">
            <summary>
            Возвращает список аудиозаписей пользователя или сообщества.
            </summary>
            <param name="user">Данные о пользователе.</param>
            <param name="params">Параметры запроса.</param>
            <returns>
            После успешного выполнения возвращает список объектов audio.
            Если был задан параметр need_user=1, дополнительно возвращается объект user, содержащий поля:
            id — идентификатор пользователя;
            photo — url фотографии профиля;
            name — имя и фамилия пользователя;
            name_gen — имя пользователя в родительном падеже.
            Обратите внимание, что ссылки на mp3 привязаны к ip-адресу.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/audio.get" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AudioCategory.GetUploadServer">
            <summary>
            Возвращает адрес сервера для загрузки аудиозаписей.
            </summary>
            <returns>
            После успешного выполнения возвращает объект с единственным полем upload_url.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/audio.getUploadServer" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AudioCategory.Search(VkNet.Model.RequestParams.AudioSearchParams,System.Int64@)">
            <summary>
            Возвращает список аудиозаписей в соответствии с заданным критерием поиска.
            </summary>
            <param name="params">Критерии поиска</param>
            <param name="totalCount">Общее кол-во аудиозаписей, найденных по этим критериям</param>
            <returns>Список объектов класса Audio.</returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Audio"/>.
            Страница документации ВКонтакте <see href="http://vk.com/dev/audio.search"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AudioCategory.Add(System.Int64,System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Копирует аудиозапись на страницу пользователя или группы.
            </summary>
            <param name="audioId">Идентификатор аудиозаписи. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <param name="ownerId">Идентификатор владельца аудиозаписи (пользователь или сообщество). целое число, обязательный параметр (Целое число, обязательный параметр).</param>
            <param name="groupId">Идентификатор сообщества (если аудиозапись необходимо скопировать в список сообщества). целое число (Целое число).</param>
            <param name="albumId">Идентификатор альбома, в который нужно переместить аудиозапись. положительное число (Положительное число).</param>
            <returns>
            После успешного выполнения  возвращает идентификатор созданной аудиозаписи.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/audio.add" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AudioCategory.Delete(System.Int64,System.Int64)">
            <summary>
            Удаляет аудиозапись со страницы пользователя или сообщества.
            </summary>
            <param name="audioId">Идентификатор аудиозаписи. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <param name="ownerId">Идентификатор владельца аудиозаписи (пользователь или сообщество). целое число, обязательный параметр (Целое число, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/audio.delete" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AudioCategory.Edit(VkNet.Model.RequestParams.AudioEditParams)">
            <summary>
            Редактирует данные аудиозаписи на странице пользователя или сообщества.
            </summary>
            <param name="params">Параметры запроса.</param>
            <returns>
            После успешного выполнения возвращает id текста, введенного пользователем (lyrics_id), если текст не был введен, вернет 0.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/audio.edit" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AudioCategory.Restore(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Восстанавливает аудиозапись после удаления.
            </summary>
            <param name="audioId">Идентификатор аудиозаписи. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <param name="ownerId">Идентификатор владельца аудиозаписи (пользователь или сообщество). По умолчанию — идентификатор текущего пользователя. целое число, по умолчанию идентификатор текущего пользователя (Целое число, по умолчанию идентификатор текущего пользователя).</param>
            <returns>
            В случае успешного восстановления аудиозаписи возвращает объект аудиозаписи. 
            Если время хранения удаленной аудиозаписи истекло (обычно это 20 минут), сервер вернет ошибку 202 (Cache expired).
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/audio.restore" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AudioCategory.Reorder(System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Изменяет порядок аудиозаписи, перенося ее между аудиозаписями, идентификаторы которых переданы параметрами after и before.
            </summary>
            <param name="audioId">Идентификатор аудиозаписи, которую нужно переместить. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <param name="ownerId">Идентификатор владельца аудиозаписи (пользователь или сообщество). По умолчанию — идентификатор текущего пользователя. целое число, по умолчанию идентификатор текущего пользователя (Целое число, по умолчанию идентификатор текущего пользователя).</param>
            <param name="before">Идентификатор аудиозаписи, перед которой нужно поместить композицию aid. целое число (Целое число).</param>
            <param name="after">Идентификатор аудиозаписи, после  которой нужно поместить композицию aid. целое число (Целое число).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/audio.reorder" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AudioCategory.AddAlbum(System.String,System.Nullable{System.Int64})">
            <summary>
            Создает пустой альбом аудиозаписей.
            </summary>
            <param name="groupId">Идентификатор сообщества (если альбом нужно создать в сообществе). положительное число (Положительное число).</param>
            <param name="title">Название альбома. строка, обязательный параметр (Строка, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает идентификатор (album_id) созданного альбома.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/audio.addAlbum" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AudioCategory.EditAlbum(System.String,System.Int64,System.Nullable{System.Int64})">
            <summary>
            Редактирует название альбома аудиозаписей.
            </summary>
            <param name="groupId">Идентификатор сообщества, которому принадлежит альбом. положительное число (Положительное число).</param>
            <param name="albumId">Идентификатор альбома. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <param name="title">Новое название для альбома. строка, обязательный параметр (Строка, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/audio.editAlbum" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AudioCategory.DeleteAlbum(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Удаляет альбом аудиозаписей.
            </summary>
            <param name="groupId">Идентификатор сообщества, которому принадлежит альбом. положительное число (Положительное число).</param>
            <param name="albumId">Идентификатор альбома. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/audio.deleteAlbum" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AudioCategory.GetPopular(System.Boolean,System.Nullable{VkNet.Enums.AudioGenre},System.Nullable{System.UInt32},System.Nullable{System.UInt32})">
            <summary>
            Возвращает список аудиозаписей из раздела "Популярное".
            </summary>
            <param name="onlyEng">1 – возвращать только зарубежные аудиозаписи. 0 – возвращать все аудиозаписи. (по умолчанию) флаг, может принимать значения 1 или 0 (Флаг, может принимать значения 1 или 0).</param>
            <param name="genreId">Идентификатор жанра из списка жанров. положительное число (Положительное число).</param>
            <param name="offset">Смещение, необходимое для выборки определенного подмножества аудиозаписей. положительное число (Положительное число).</param>
            <param name="count">Количество возвращаемых аудиозаписей. положительное число, максимальное значение 1000, по умолчанию 100 (Положительное число, максимальное значение 1000, по умолчанию 100).</param>
            <returns>
            После успешного выполнения возвращает список объектов audio. Обратите внимание, что ссылки на аудиозаписи привязаны к ip адресу.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/audio.getPopular" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AudioCategory.GetAlbums(System.Int64,System.Nullable{System.UInt32},System.Nullable{System.UInt32})">
            <summary>
            Возвращает список альбомов аудиозаписей пользователя или группы.
            </summary>
            <param name="ownerId">Идентификатор пользователя или сообщества, у которого необходимо получить список альбомов с аудио. целое число, по умолчанию идентификатор текущего пользователя (Целое число, по умолчанию идентификатор текущего пользователя).</param>
            <param name="offset">Смещение, необходимое для выборки определенного подмножества альбомов. положительное число (Положительное число).</param>
            <param name="count">Количество альбомов, которое необходимо вернуть. положительное число, по умолчанию 50, максимальное значение 100 (Положительное число, по умолчанию 50, максимальное значение 100).</param>
            <returns>
            После успешного выполнения возвращает общее количество альбомов с аудиозаписями и массив объектов album, каждый из которых содержит следующие поля: 
            
            id — идентификатор альбома; 
            owner_id — идентификатор владельца альбома; 
            title — название альбома.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/audio.getAlbums" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AudioCategory.MoveToAlbum(System.Int64,System.Collections.Generic.IEnumerable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Перемещает аудиозаписи в альбом.
            </summary>
            <param name="groupId">Идентификатор сообщества, в котором размещены аудиозаписи. Если параметр не указан, работа ведется с аудиозаписями текущего пользователя. положительное число (Положительное число).</param>
            <param name="albumId">Идентификатор альбома, в который нужно переместить аудиозаписи. положительное число (Положительное число).</param>
            <param name="audioIds">Идентификаторы аудиозаписей, которые требуется переместить. список положительных чисел, разделенных запятыми, обязательный параметр (Список положительных чисел, разделенных запятыми, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>. 
            Обратите внимание, в одном альбоме не может быть более 1000 аудиозаписей.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/audio.moveToAlbum" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AudioCategory.GetRecommendations(System.Nullable{System.Int64},System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.Boolean,System.String)">
            <summary>
            Возвращает список рекомендуемых аудиозаписей на основе списка воспроизведения заданного пользователя или на основе одной выбранной аудиозаписи.
            </summary>
            <param name="targetAudio">Идентификатор аудиозаписи, на основе которой будет строиться список рекомендаций. Используется вместо параметра uid. Идентификатор представляет из себя разделённые знаком подчеркивания id пользователя, которому принадлежит аудиозапись, и id самой аудиозаписи. Если аудиозапись принадлежит сообществу, то в качестве первого параметра используется -id сообщества. строка (Строка).</param>
            <param name="userId">Идентификатор пользователя для получения списка рекомендаций на основе его набора аудиозаписей (по умолчанию — идентификатор текущего пользователя). положительное число (Положительное число).</param>
            <param name="offset">Смещение относительно первой найденной аудиозаписи для выборки определенного подмножества. положительное число (Положительное число).</param>
            <param name="count">Количество возвращаемых аудиозаписей. положительное число, максимальное значение 1000, по умолчанию 100 (Положительное число, максимальное значение 1000, по умолчанию 100).</param>
            <param name="shuffle">1 — включен случайный порядок. флаг, может принимать значения 1 или 0 (Флаг, может принимать значения 1 или 0).</param>
            <returns>
            После успешного выполнения возвращает список объектов audio. Обратите внимание, что ссылки на аудиозаписи привязаны к ip адресу.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/audio.getRecommendations" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AudioCategory.SetBroadcast(System.String,System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Транслирует аудиозапись в статус пользователю или сообществу.
            </summary>
            <param name="audio">Идентификатор аудиозаписи, которая будет отображаться в статусе, в формате owner_id_audio_id. Например, 1_190442705. Если параметр не указан, аудиостатус указанных сообществ и пользователя будет удален. строка (Строка).</param>
            <param name="targetIds">Перечисленные через запятую идентификаторы сообществ и пользователя, которым будет транслироваться аудиозапись. Идентификаторы сообществ должны быть заданы в формате "-gid", где gid - идентификатор сообщества. Например, 1,-34384434. По умолчанию аудиозапись транслируется текущему пользователю. список целых чисел, разделенных запятыми, количество элементов должно составлять не более 20 (Список целых чисел, разделенных запятыми, количество элементов должно составлять не более 20).</param>
            <returns>
            В случае успешного выполнения возвращает массив идентификаторов сообществ и пользователя, которым был установлен или удален аудиостатус.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/audio.setBroadcast" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AudioCategory.Save(System.String,System.String,System.String)">
            <summary>
            Сохраняет аудиозаписи после успешной загрузки.
            </summary>
            <param name="response">Параметр, возвращаемый в результате загрузки аудиофайла на сервер.</param>
            <param name="artist">Автор композиции. По умолчанию берется из ID3 тегов.</param>
            <param name="title">Название композиции. По умолчанию берется из ID3 тегов. </param>
            <returns>Возвращает массив из объектов с загруженными аудиозаписями.</returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/audio.save"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AudioCategory.GetBroadcastListFriends(System.Boolean)">
            <summary>
            Возвращает список друзей, которые транслируют музыку в статус.
            </summary>
            <param name="active"><c>true</c> — будут возвращены только друзья и сообщества, которые транслируют музыку в данный момент. По умолчанию возвращаются все.</param>
            <returns>
            После успешного выполнения возвращает список объектов друзей с дополнительным полем status_audio — объект аудиозаписи,
            установленной в статус (если аудиозапись транслируется в текущей момент).
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/audio.getBroadcastList"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AudioCategory.GetBroadcastList(System.String,System.Nullable{System.Boolean})">
            <summary>
            Возвращает список друзей и сообществ пользователя, которые транслируют музыку в статус.
            </summary>
            <param name="filter">Определяет, какие типы объектов необходимо получить. Возможны следующие значения параметра:
            
            friends — только друзья;
            groups — только сообщества;
            all — друзья и сообщества. строка, по умолчанию all (Строка, по умолчанию all).</param>
            <param name="active">1 — будут возвращены только друзья и сообщества, которые транслируют музыку в данный момент. По умолчанию возвращаются все. флаг, может принимать значения 1 или 0 (Флаг, может принимать значения 1 или 0).</param>
            <returns>
            После успешного выполнения возвращает список объектов друзей и сообществ с дополнительным полем status_audio — объект аудиозаписи, установленной в статус (если аудиозапись транслируется в текущей момент).
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/audio.getBroadcastList" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AudioCategory.GetBroadcastListGroup(System.Boolean)">
            <summary>
            Возвращает список сообществ пользователя, которые транслируют музыку в статус.
            </summary>
            <param name="active"><c>true</c> — будут возвращены только друзья и сообщества, которые транслируют музыку в данный момент. По умолчанию возвращаются все.</param>
            <returns>
            После успешного выполнения возвращает список объектов сообществ с дополнительным полем status_audio — объект аудиозаписи,
            установленной в статус (если аудиозапись транслируется в текущей момент).
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/audio.getBroadcastList"/>.
            </remarks>
        </member>
        <member name="T:VkNet.Categories.FriendsCategory">
            <summary>
            Методы для работы с друзьями.
            </summary>
            <summary>
            Методы для работы с друзьями.
            </summary>
        </member>
        <member name="M:VkNet.Categories.FriendsCategory.Get(System.Int64,VkNet.Enums.Filters.ProfileFields,System.Nullable{System.Int32},System.Nullable{System.Int32},VkNet.Enums.SafetyEnums.FriendsOrder,VkNet.Enums.SafetyEnums.NameCase,System.Nullable{System.Int32})">
            <summary>
            Возвращает список идентификаторов друзей пользователя или расширенную информацию о друзьях пользователя (при использовании параметра fields).
            </summary>
            <param name="uid">Идентификатор пользователя, для которого необходимо получить список друзей.</param>
            <param name="fields">Поля анкеты (профиля), которые необходимо получить.</param>
            <param name="count">Количество друзей, которое нужно вернуть. (по умолчанию – все друзья).</param>
            <param name="offset">Смещение, необходимое для выборки определенного подмножества друзей.</param>
            <param name="order">Порядок, в котором нужно вернуть список друзей.</param>
            <param name="nameCase">Падеж для склонения имени и фамилии пользователя.</param>
            <param name="listId">Идентификатор списка друзей, полученный методом <see cref="M:VkNet.Categories.FriendsCategory.GetLists(System.Nullable{System.Int64},System.Nullable{System.Boolean})"/>, друзей из которого необходимо получить. Данный параметр учитывается, только когда параметр uid равен идентификатору текущего пользователя.</param>
            <returns>Список друзей пользователя с заполненными полями (указанными в параметре <paramref name="fields"/>).
            Если значение поля <paramref name="fields"/> не указано, то у возвращаемых друзей заполняется только поле Id.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/friends.get"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.FriendsCategory.GetOnline(System.Int64)">
            <summary>
            Возвращает список идентификаторов друзей пользователя, которые сейчас находятся на сайте (online).
            </summary>
            <param name="uid">
            Идентификатор пользователя, для которого необходимо получить список друзей, находящихся на сайте.
            </param>
            <returns>
            В случае успеха список идентификаторов друзей пользователя, которые сейчас находятся на сайте.
            </returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Friends"/>.
            Страница документации ВКонтакте <see href="http://vk.com/dev/friends.getOnline"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.FriendsCategory.GetMutual(System.Int64,System.Int64)">
            <summary>
            Возвращает список идентификаторов общих друзей между парой пользователей.
            </summary>
            <param name="targetUid">Идентификатор пользователя, с которым необходимо искать общих друзей.</param>
            <param name="sourceUid">Идентификатор пользователя, чьи друзья пересекаются с друзьями пользователя с идентификатором <paramref name="targetUid"/>.</param>
            <returns>
            В случае успеха возвращает список идентификаторов (id) общих друзей между пользователями с идентификаторами <paramref name="targetUid"/> и <paramref name="sourceUid"/>.
            </returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Friends"/>.
            Страница документации ВКонтакте <see href="http://vk.com/dev/friends.getMutual"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.FriendsCategory.Add(System.Int64,System.String,System.Nullable{System.Int64},System.String)">
            <summary>
            Одобряет или создает заявку на добавление в друзья.
            </summary>
            <param name="userId">Идентификатор пользователя, которому необходимо отправить заявку, либо заявку от которого необходимо одобрить.</param>
            <param name="text">Текст сопроводительного сообщения для заявки на добавление в друзья. Максимальная длина сообщения — 500 символов.</param>
            <param name="captchaSid">Id капчи (только если для вызова метода необходимо ввести капчу)</param>
            <param name="captchaKey">Текст капчи (только если для вызова метода необходимо ввести капчу)</param>
            <returns>
            После успешного выполнения возвращает одно из следующих значений:
            1 — заявка на добавление данного пользователя в друзья отправлена;
            2 — заявка на добавление в друзья от данного пользователя одобрена;
            4 — повторная отправка заявки.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/friends.add"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.FriendsCategory.GetRequests(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Возвращает информацию о полученных или отправленных заявках на добавление в друзья для текущего пользователя
            </summary>
            <param name="count">Максимальное количество заявок на добавление в друзья, которые необходимо получить (не более 1000)</param>
            <param name="offset">Смещение, необходимое для выборки определенного подмножества заявок на добавление в друзья</param>
            <param name="extended">Определяет, требуется ли возвращать в ответе сообщения от пользователей, подавших заявку на добавление
            в друзья. И отправителя рекомендации при <c>suggested</c>=<c>true</c>.</param>
            <param name="needMutual">Определяет, требуется ли возвращать в ответе список общих друзей, если они есть. Обратите внимание,
            что при использовании need_mutual будет возвращено не более 20 заявок.</param>
            <param name="out"><c>false</c> — возвращать полученные заявки в друзья (по умолчанию), <c>true</c> — возвращать отправленные пользователем
            заявки.</param>
            <param name="sort"><c>false</c> — сортировать по дате добавления, <c>true</c> — сортировать по количеству общих друзей. (Если <c>out</c> = <c>true</c>,
            данный параметр не учитывается).</param>
            <param name="suggested"><c>true</c> — возвращать рекомендованных другими пользователями друзей, <c>false</c> — возвращать заявки в друзья
            (по умолчанию).</param>
            <returns>
            - Если не установлен параметр need_mutual, то в случае успеха возвращает отсортированный в антихронологическом порядке по
            времени подачи заявки список идентификаторов (id) пользователей (кому или от кого пришла заявка).
            - Если установлен параметр need_mutual, то в случае успеха возвращает отсортированный в антихронологическом порядке по
            времени подачи заявки массив объектов, содержащих информацию о заявках на добавление в друзья. Каждый из объектов содержит
            поле uid, являющийся идентификатором пользователя. При наличии общих друзей, в объекте будет содержаться поле mutual, в
            котором будет находиться список идентификаторов общих друзей.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/friends.getRequests"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.FriendsCategory.Get(VkNet.Model.RequestParams.FriendsGetParams)">
            <summary>
            Возвращает список идентификаторов друзей пользователя или расширенную информацию о друзьях пользователя (при использовании параметра fields).
            </summary>
            <param name="params">Входные параметры выборки.</param>
            <returns>
            После успешного выполнения возвращает список идентификаторов (id) друзей пользователя, если параметр fields не использовался. 
            При использовании параметра fields  возвращает список объектов пользователей, но не более 5000.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/friends.get" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.FriendsCategory.GetAppUsers">
            <summary>
            Возвращает список идентификаторов друзей текущего пользователя, которые установили данное приложение.
            </summary>
            <returns>
            После успешного выполнения возвращает список идентификаторов (id) друзей текущего пользователя, установивших приложение.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/friends.getAppUsers" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.FriendsCategory.GetOnline(VkNet.Model.RequestParams.FriendsGetOnlineParams)">
            <summary>
            Возвращает список идентификаторов друзей пользователя, находящихся на сайте.
            </summary>
            <param name="params">Входные параметры выборки.</param>
            <returns>
            После успешного выполнения возвращает список идентификаторов (id) друзей, находящихся сейчас на сайте, у пользователя с идентификатором uid и входящих в список с идентификатором lid. 
            При использовании параметра online_mobile=1 также возвращается поле online_mobile, содержащее список идентификатор друзей, находящихся на сайте с мобильного устройства.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/friends.getOnline" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.FriendsCategory.GetOnlineEx(VkNet.Model.RequestParams.FriendsGetOnlineParams)">
            <summary>
            Возвращает список идентификаторов друзей пользователя, находящихся на сайте.
            </summary>
            <param name="params">Входные параметры выборки.</param>
            <returns>
            После успешного выполнения возвращает список идентификаторов (id) друзей, находящихся сейчас на сайте, у пользователя с идентификатором uid и входящих в список с идентификатором lid. 
            При использовании параметра online_mobile=1 также возвращается поле online_mobile, содержащее список идентификатор друзей, находящихся на сайте с мобильного устройства.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/friends.getOnline" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.FriendsCategory.GetMutual(VkNet.Model.RequestParams.FriendsGetMutualParams)">
            <summary>
            Возвращает список идентификаторов общих друзей между парой пользователей.
            </summary>
            <param name="params">Входные параметры выборки.</param>
            <returns>
            После успешного выполнения возвращает список идентификаторов (id) общих друзей между пользователями с идентификаторами source_uid и target_uid.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/friends.getMutual" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.FriendsCategory.AreFriends(System.Collections.Generic.IEnumerable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Возвращает информацию о том, добавлен ли текущий пользователь в друзья у указанных пользователей.
            </summary>
            <param name="userIds">Идентификаторы пользователей, статус дружбы с которыми нужно проверить. список целых чисел, разделенных запятыми, обязательный параметр (Список целых чисел, разделенных запятыми, обязательный параметр).</param>
            <param name="needSign">1 – необходимо вернуть поле sign которое равно: 
            md5("{id}_{user_id}_{friends_status}_{application_secret}"), где id - это идентификатор пользователя, для которого выполняется запрос. 
            и позволяет на сервере убедиться что данные не были подделаны на клиенте. 
            0 – поле sign возвращать не нужно. флаг, может принимать значения 1 или 0 (Флаг, может принимать значения 1 или 0).</param>
            <returns>
            После успешного выполнения возвращает массив объектов status, каждый из которых содержит следующие поля: 
            
            user_id — идентификатор пользователя (из числа переданных в параметре user_ids); 
            friend_status — статус дружбы с пользователем: 
            
            0 – пользователь не является другом, 
            1 – отправлена заявка/подписка пользователю, 
            2 – имеется входящая заявка/подписка от пользователя, 
            3 – пользователь является другом; 
            
            request_message — текст сообщения, прикрепленного к заявке в друзья (если есть). 
            read_state — статус заявки (0 — не просмотрена, 1 — просмотрена), возвращается только если friend_status = 2;.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/friends.areFriends" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.FriendsCategory.AddList(System.String)">
            <summary>
            Создает новый список друзей у текущего пользователя.
            </summary>
            <param name="name">Название создаваемого списка друзей.</param>
            <returns>После успешного выполнения возвращает идентификатор созданного списка друзей.</returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Friends"/>.
             Страница документации ВКонтакте <see href="http://vk.com/dev/friends.addList"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.FriendsCategory.AddList(System.String,System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Создает новый список друзей у текущего пользователя.
            </summary>
            <param name="name">Название создаваемого списка друзей. строка, обязательный параметр (Строка, обязательный параметр).</param>
            <param name="userIds">Идентификаторы пользователей, которых необходимо поместить в созданный список. список положительных чисел, разделенных запятыми (Список положительных чисел, разделенных запятыми).</param>
            <returns>
            После успешного выполнения возвращает идентификатор (list_id) созданного списка друзей.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/friends.addList" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.FriendsCategory.DeleteList(System.Int64)">
            <summary>
            Удаляет существующий список друзей текущего пользователя.
            </summary>
            <param name="listId">Идентификатор списка друзей, который необходимо удалить. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/friends.deleteList" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.FriendsCategory.GetLists(System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Возвращает список меток друзей текущего пользователя.
            </summary>
            <param name="userId">Идентификатор пользователя. положительное число, по умолчанию идентификатор текущего пользователя (Положительное число, по умолчанию идентификатор текущего пользователя).</param>
            <param name="returnSystem">Возвращать ли системный список публичных меток друзей пользователя. флаг, может принимать значения 1 или 0 (Флаг, может принимать значения 1 или 0).</param>
            <returns>
            После успешного выполнения возвращает список объектов, каждый из которых содержит следующие поля: 
            
            name — название списка друзей; 
            id — идентификатор списка друзей.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/friends.getLists" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.FriendsCategory.EditList(System.Int64,System.String,System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Редактирует существующий список друзей текущего пользователя.
            </summary>
            <param name="name">Название списка друзей. строка (Строка).</param>
            <param name="listId">Идентификатор списка друзей. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <param name="userIds">Идентификаторы пользователей, включенных в список. список положительных чисел, разделенных запятыми (Список положительных чисел, разделенных запятыми).</param>
            <param name="addUserIds">Идентификаторы пользователей, которых необходимо добавить в список. (в случае если не передан user_ids) список положительных чисел, разделенных запятыми (Список положительных чисел, разделенных запятыми).</param>
            <param name="deleteUserIds">Идентификаторы пользователей, которых необходимо изъять из списка. (в случае если не передан user_ids) список положительных чисел, разделенных запятыми (Список положительных чисел, разделенных запятыми).</param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/friends.editList" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.FriendsCategory.DeleteAllRequests">
            <summary>
            Отмечает все входящие заявки на добавление в друзья как просмотренные.
            </summary>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/friends.deleteAllRequests" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.FriendsCategory.Add(System.Int64,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.String)">
            <summary>
            Одобряет или создает заявку на добавление в друзья.
            </summary>
            <param name="userId">Идентификатор пользователя, которому необходимо отправить заявку, либо заявку от которого необходимо одобрить. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <param name="text">Текст сопроводительного сообщения для заявки на добавление в друзья. Максимальная длина сообщения — 500 символов. строка (Строка).</param>
            <param name="follow">Флаг, может принимать значения 1 или 0 (Флаг, может принимать значения 1 или 0).</param>
            <param name="captchaSid">Id капчи (только если для вызова метода необходимо ввести капчу)</param>
            <param name="captchaKey">Текст капчи (только если для вызова метода необходимо ввести капчу)</param>
            <returns>
            После успешного выполнения возвращает одно из следующих значений: 
            
            1 — заявка на добавление данного пользователя в друзья отправлена; 
            2 — заявка на добавление в друзья от данного пользователя одобрена; 
            4 — повторная отправка заявки.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/friends.add" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.FriendsCategory.Delete(System.Int64)">
            <summary>
            Удаляет пользователя из списка друзей или отклоняет заявку в друзья.
            </summary>
            <param name="userId">Идентификатор пользователя, которого необходимо удалить из списка друзей, либо заявку от которого необходимо отклонить. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <returns>
            После успешного выполнения начиная с версии 5.28 возвращается объект с полями: 
            
            success — удалось успешно удалить друга 
            friend_deleted — был удален друг 
            out_request_deleted  — отменена исходящая заявка 
            in_request_deleted  — отклонена входящая заявка 
            suggestion_deleted  — отклонена рекомендация друга 
            
            Для версии 5.27 и более старых возвращает одно из следующих значений: 
            
            1 — пользователь удален из списка друзей; 
            2 — заявка на добавление в друзья данного пользователя отклонена (входящая или исходящая); 
            3 — рекомендация добавить в друзья данного пользователя удалена.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/friends.delete" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.FriendsCategory.Edit(System.Int64,System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Редактирует списки друзей для выбранного друга.
            </summary>
            <param name="userId">Идентификатор пользователя (из числа друзей), для которого необходимо отредактировать списки друзей. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <param name="listIds">Идентификаторы списков друзей, в которые нужно добавить пользователя. список положительных чисел, разделенных запятыми (Список положительных чисел, разделенных запятыми).</param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/friends.edit" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.FriendsCategory.GetRecent(System.Nullable{System.Int64})">
            <summary>
            Возвращает список идентификаторов недавно добавленных друзей текущего пользователя.
            </summary>
            <param name="count">Максимальное количество недавно добавленных друзей, которое необходимо получить. положительное число, по умолчанию 100, максимальное значение 1000 (Положительное число, по умолчанию 100, максимальное значение 1000).</param>
            <returns>
            После успешного выполнения возвращает отсортированный в антихронологическом порядке список идентификаторов (id) недавно добавленных друзей текущего пользователя.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/friends.getRecent" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.FriendsCategory.GetRequests(VkNet.Model.RequestParams.FriendsGetRequestsParams)">
            <summary>
            Возвращает информацию о полученных или отправленных заявках на добавление в друзья для текущего пользователя.
            </summary>
            <param name="params">Входные параметры выборки.</param>
            <returns>
            Если не установлен параметр need_mutual, то в случае успеха возвращает отсортированный в антихронологическом порядке по времени подачи заявки список идентификаторов (id) пользователей (кому или от кого пришла заявка). 
            Если установлен параметр need_mutual, то в случае успеха возвращает отсортированный в антихронологическом порядке по времени подачи заявки массив объектов, содержащих информацию о заявках на добавление в друзья.
            Каждый из объектов содержит поле uid, являющийся идентификатором пользователя.
            При наличии общих друзей, в объекте будет содержаться поле mutual, в котором будет находиться список идентификаторов общих друзей.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/friends.getRequests" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.FriendsCategory.GetSuggestions(VkNet.Enums.SafetyEnums.FriendsFilter,System.Nullable{System.Int64},System.Nullable{System.Int64},VkNet.Enums.Filters.UsersFields,VkNet.Enums.SafetyEnums.NameCase)">
            <summary>
            Возвращает список профилей пользователей, которые могут быть друзьями текущего пользователя.
            </summary>
            <param name="filter">Типы предлагаемых друзей, которые нужно вернуть, перечисленные через запятую.</param>
            <param name="count">Количество рекомендаций, которое необходимо вернуть. положительное число, максимальное значение 500, по умолчанию 500 (положительное число, максимальное значение 500, по умолчанию 500).</param>
            <param name="offset">Смещение, необходимое для выбора определённого подмножества списка. положительное число (положительное число).</param>
            <param name="fields">Список дополнительных полей, которые необходимо вернуть. Доступные значения: nickname, screen_name, sex, bdate, city, country, timezone, photo_50, photo_100, photo_200_orig, has_mobile, contacts, education, online, counters, relation, last_seen, status, can_write_private_message, can_see_all_posts, can_post, universities список строк, разделенных через запятую(список строк, разделенных через запятую).</param>
            <param name="nameCase">Падеж для склонения имени и фамилии пользователя. Возможные значения: именительный – nom, родительный – gen, дательный – dat, винительный – acc, творительный – ins, предложный – abl. По умолчанию nom. строка (строка).</param>
            <returns>
            После успешного выполнения возвращает список объектов пользователей с дополнительным полем found_with для пользователей, найденных через импорт контактов. Для некоторых пользователей, которые были найдены давно поле found_with может отсутствовать.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/friends.getSuggestions" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.FriendsCategory.GetByPhones(System.Collections.Generic.IEnumerable{System.String},VkNet.Enums.Filters.ProfileFields)">
            <summary>
            Возвращает список друзей пользователя, у которых завалидированные или указанные в профиле телефонные номера входят в заданный список.
            </summary>
            <param name="phones">Список телефонных номеров в формате MSISDN, разделеннных запятыми. Например
            +79219876543,+79111234567
            Максимальное количество номеров в списке — 1000. список строк, разделенных через запятую (Список строк, разделенных через запятую).</param>
            <param name="fields">Список дополнительных полей, которые необходимо вернуть. 
            Доступные значения: nickname, screen_name, sex, bdate, city, country, timezone, photo_50, photo_100, photo_200_orig, has_mobile, contacts, education, online, counters, relation, last_seen, status, can_write_private_message, can_see_all_posts, can_post, universities список строк, разделенных через запятую (Список строк, разделенных через запятую).</param>
            <returns>
            После успешного выполнения возвращает список объектов пользователей с дополнительным полем phone, в котором содержится номер из списка заданных для поиска номеров.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/friends.getByPhones" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.FriendsCategory.GetAvailableForCall(VkNet.Enums.Filters.ProfileFields,VkNet.Enums.SafetyEnums.NameCase)">
            <summary>
            Позволяет получить список идентификаторов пользователей, доступных для вызова в приложении, используя метод JSAPI callUser. 
            Подробнее о схеме вызова из приложений.
            </summary>
            <param name="fields">Список дополнительных полей, которые необходимо вернуть. 
            Доступные значения: nickname, domain, sex, bdate, city, country, timezone, photo_50, photo_100, photo_200_orig, has_mobile, contacts, education, online, relation, last_seen, status, can_write_private_message, can_see_all_posts, can_post, universities список строк, разделенных через запятую (Список строк, разделенных через запятую).</param>
            <param name="nameCase">Падеж для склонения имени и фамилии пользователя. Возможные значения: именительный – nom, родительный – gen, дательный – dat, винительный – acc, творительный – ins, предложный – abl. По умолчанию nom. строка, по умолчанию Nom (Строка, по умолчанию Nom).</param>
            <returns>
            После успешного выполнения возвращает список идентификаторов (id) друзей пользователя, доступных для вызова, если параметр fields не использовался. 
            При использовании параметра fields  возвращает список объектов пользователей.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/friends.getAvailableForCall" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.FriendsCategory.Search(VkNet.Model.RequestParams.FriendsSearchParams)">
            <summary>
            Позволяет искать по списку друзей пользователей.
            </summary>
            <param name="params">Входные параметры выборки.</param>
            <returns>
            После успешного выполнения метод  возвращает список объектов пользователей.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/friends.search" />.
            </remarks>
        </member>
        <member name="T:VkNet.Categories.GroupsCategory">
            <summary>
            Методы для работы с сообществами (группами).
            </summary>
            <summary>
            Методы для работы с сообществами (группами).
            </summary>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.Get(System.Int64,System.Boolean,VkNet.Enums.Filters.GroupsFilters,VkNet.Enums.Filters.GroupsFields,System.UInt32,System.UInt32)">
            <summary>
            Возвращает список групп указанного пользователя.
            </summary>
            <param name="uid">Id пользователя</param>
            <param name="extended">Возвращать полную информацию?</param>
            <param name="filters">Список фильтров сообществ</param>
            <param name="fields">Список полей информации о группах</param>
            <param name="offset">Смещение, необходимое для выборки определённого подмножества сообществ.</param>
            <param name="count">Количество сообществ, информацию о которых нужно вернуть (Максимальное значение 1000)</param>
            <returns>
            Список групп
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/groups.get" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.GetById(System.Collections.Generic.IEnumerable{System.Int64},VkNet.Enums.Filters.GroupsFields)">
            <summary>
            Возвращает информацию о нескольких группах.
            </summary>
            <param name="gids">Список идентификаторов или коротких имен сообществ.</param>
            <param name="fields">Список полей информации о группах</param>
            <returns>Список групп</returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/groups.getById"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.GetById(System.Collections.Generic.IEnumerable{System.String},VkNet.Enums.Filters.GroupsFields)">
            <summary>
            Возвращает информацию о нескольких группах.
            </summary>
            <param name="gids">Список идентификаторов или коротких имен сообществ.</param>
            <param name="fields">Список полей информации о группах</param>
            <returns>Список групп</returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/groups.getById"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.GetById(System.Int64,VkNet.Enums.Filters.GroupsFields)">
            <summary>
            Возвращает информацию о заданной группе.
            </summary>
            <param name="gid">Id группы</param>
            <param name="fields">Список полей информации о группах</param>
            <returns>Список групп</returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/groups.getById"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.GetById(System.String,VkNet.Enums.Filters.GroupsFields)">
            <summary>
            Возвращает информацию о заданной группе.
            </summary>
            <param name="gid">Идентификатор или короткое имя сообщества.</param>
            <param name="fields">Список полей информации о группах</param>
            <returns>Список групп</returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/groups.getById"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.GetMembers(System.Int64,System.Int32@,System.Nullable{System.UInt32},System.Nullable{System.UInt32},VkNet.Enums.SafetyEnums.GroupsSort,VkNet.Enums.Filters.UsersFields,VkNet.Enums.Filters.GroupsFilters)">
            <summary>
            Возвращает список участников группы.
            </summary>
            <param name="gid">Id группы</param>
            <param name="totalCount">Общее количество участников</param>
            <param name="count">Количество участников которое необходимо получить</param>
            <param name="offset">Смещение</param>
            <param name="sort">Сортировка Id пользователей</param>
            <param name="fields">Список дополнительных полей, которые необходимо вернуть.</param>
            <param name="filters">Фильтр.</param>
            <returns>
            Id пользователей состоящих в группе
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/groups.getMembers" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.GetMembers(System.String,System.Int32@,System.Nullable{System.UInt32},System.Nullable{System.UInt32},VkNet.Enums.SafetyEnums.GroupsSort,VkNet.Enums.Filters.UsersFields,VkNet.Enums.Filters.GroupsFilters)">
            <summary>
            Возвращает список участников группы.
            </summary>
            <param name="gid">Идентификатор или короткое имя сообщества</param>
            <param name="totalCount">Общее количество участников</param>
            <param name="count">Количество участников которое необходимо получить</param>
            <param name="offset">Смещение</param>
            <param name="sort">Сортировка Id пользователей</param>
            <param name="fields">Список дополнительных полей, которые необходимо вернуть.</param>
            <param name="filters">Фильтр.</param>
            <returns>Id пользователей состоящих в группе</returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/groups.getMembers"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.IsMember(System.Int64,System.Int64)">
            <summary>
            Возвращает информацию о том является ли пользователь участником заданной группы.
            </summary>
            <param name="gid">Id группы</param>
            <param name="uid">Id пользователя</param>
            <returns>True если пользователь состоит в группе, иначе False</returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/groups.isMember"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.IsMember(System.String,System.Int64)">
            <summary>
            Возвращает информацию о том является ли пользователь участником заданной группы.
            </summary>
            <param name="gid">Идентификатор или короткое имя сообщества. </param>
            <param name="uid">Id пользователя</param>
            <returns>True если пользователь состоит в группе, иначе False</returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/groups.isMember"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.IsMember(System.String,System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Возвращает информацию о том является ли пользователь участником заданной группы.
            </summary>
            <param name="gid">Идентификатор или короткое имя сообщества. </param>
            <param name="uids">Id пользователя</param>
            <returns>True если пользователь состоит в группе, иначе False</returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/groups.isMember"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.IsMember(System.Int64,System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Возвращает информацию о том является ли пользователь участником заданной группы.
            </summary>
            <param name="gid">Идентификатор или короткое имя сообщества. </param>
            <param name="uids">Id пользователя</param>
            <returns>True если пользователь состоит в группе, иначе False</returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/groups.isMember"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.Search(System.String,System.Int32@,System.Nullable{System.UInt32},System.Nullable{System.UInt32},VkNet.Enums.Filters.GroupSort,VkNet.Enums.SafetyEnums.GroupType,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.Boolean)">
            <summary>
            Осуществляет поиск групп по заданной подстроке.
            </summary>
            <param name="query">Поисковый запрос</param>
            <param name="totalCount">Общее количество групп удовлетворяющих запросу</param>
            <param name="offset">Смещение</param>
            <param name="count">Количество в выбоке</param>
            <param name="future">При передаче значения <c>true</c> будут выведены предстоящие события. Учитывается только при передаче в качестве <c>type</c> значения event.</param>
            <param name="sort">Порядок сортировки полученных групп.</param>
            <param name="type">Тип сообщества.</param>
            <param name="countryId">Идентификатор страны.</param>
            <param name="cityId">Идентификатор города. При передаче этого параметра поле country_id игнорируется.</param>
            <returns>
            Список объектов групп
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/groups.search" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.EditManager(System.Int64,System.Int64,System.Nullable{VkNet.Enums.AdminLevel},System.Nullable{System.Boolean},System.String,System.String,System.String)">
            <summary>
            Позволяет назначить/разжаловать руководителя в сообществе или изменить уровень его полномочий.
            </summary>
            <param name="groupId">Идентификатор сообщества (указывается без знака «минус»)</param>
            <param name="userId">Идентификатор пользователя, чьи полномочия в сообществе нужно изменить</param>
            <param name="role">Уровень полномочий. Если параметр не задан, с пользователя user_id снимаются полномочия руководителя</param>
            <param name="isContact">Отображать ли пользователя в блоке контактов сообщества</param>
            <param name="contactPosition">Должность пользователя, отображаемая в блоке контактов</param>
            <param name="contactPhone">Телефон пользователя, отображаемый в блоке контактов</param>
            <param name="contactEmail">Email пользователя, отображаемый в блоке контактов</param>
            <returns>В случае успешного выполнения возвращает true</returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/groups.editManager"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.EditManager(System.Int64,System.Int64,System.Nullable{VkNet.Enums.AdminLevel})">
            <summary>
            Позволяет назначить/разжаловать руководителя в сообществе или изменить уровень его полномочий.
            </summary>
            <param name="groupId">Идентификатор сообщества (указывается без знака «минус»)</param>
            <param name="userId">Идентификатор пользователя, чьи полномочия в сообществе нужно изменить</param>
            <param name="role">Уровень полномочий. Если параметр не задан, с пользователя user_id снимаются полномочия руководителя</param>
            <returns>В случае успешного выполнения возвращает true</returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/groups.editManager"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.Join(System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Данный метод позволяет вступить в группу, публичную страницу, а также подтвердить участие во встрече.
            </summary>
            <param name="groupId">Идентификатор сообщества. положительное число (Положительное число).</param>
            <param name="notSure">Опциональный параметр, учитываемый, если group_id принадлежит встрече. 1 — Возможно пойду. 0 — Точно пойду. По умолчанию 0. строка (Строка).</param>
            <returns>
            В случае успешного вступления метод вернёт 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/groups.join" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.Leave(System.Int64)">
            <summary>
            Позволяет покинуть сообщество.
            </summary>
            <param name="groupId">Идентификатор сообщества. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/groups.leave" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.Get(VkNet.Model.RequestParams.GroupsGetParams)">
            <summary>
            Возвращает список сообществ указанного пользователя.
            </summary>
            <param name="params">Входные параметры выборки.</param>
            <returns>
            После успешного выполнения возвращает список идентификаторов сообществ id, в которых состоит пользователь user_id. 
            Если был задан параметр extended=1,  возвращает список объектов group.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/groups.get" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.GetById(System.Collections.Generic.IEnumerable{System.String},System.String,VkNet.Enums.Filters.GroupsFields)">
            <summary>
            Возвращает информацию о заданном сообществе или о нескольких сообществах.
            </summary>
            <param name="groupIds">Идентификаторы или короткие имена сообществ. Максимальное число идентификаторов — 500. список строк, разделенных через запятую (Список строк, разделенных через запятую).</param>
            <param name="groupId">Идентификатор или короткое имя сообщества. строка (Строка).</param>
            <param name="fields">Список дополнительных полей, которые необходимо вернуть. Возможные значения: city, country, place, description, wiki_page, members_count, counters, start_date, finish_date, can_post, can_see_all_posts, activity, status, contacts, links, fixed_post, verified, site,ban_info. 
            Обратите внимание, для получения некоторых полей требуется право доступа groups. Подробнее см. описание полей объекта group список строк, разделенных через запятую (Список строк, разделенных через запятую).</param>
            <returns>
            После успешного выполнения возвращает массив объектов group.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/groups.getById" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.GetMembers(System.Int32@,VkNet.Model.RequestParams.GroupsGetMembersParams)">
            <summary>
            Возвращает список участников сообщества.
            </summary>
            <param name="totalCount">Общее количество участников.</param>
            <param name="params">Входные параметры выборки.</param>
            <returns>
            Возвращает общее количество участников сообщества count и список идентификаторов пользователей items.
            Если был передан параметр filter=managers, возвращается дополнительное поле role, которое содержит уровень полномочий руководителя:
            moderator — модератор;
            editor — редактор;
            administrator — администратор;
            creator — создатель сообщества.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/groups.getMembers" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.IsMember(System.String,System.Nullable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Возвращает информацию о том, является ли пользователь участником сообщества.
            </summary>
            <param name="groupId">Идентификатор или короткое имя сообщества. строка, обязательный параметр (Строка, обязательный параметр).</param>
            <param name="userId">Идентификатор пользователя. положительное число (Положительное число).</param>
            <param name="userIds">Идентификаторы пользователей, не более 500. список положительных чисел, разделенных запятыми (Список положительных чисел, разделенных запятыми).</param>
            <param name="extended">1  — вернуть ответ в расширенной форме. По умолчанию — 0. флаг, может принимать значения 1 или 0 (Флаг, может принимать значения 1 или 0).</param>
            <returns>
            возвращает <c>true</c> в случае, если пользователь с идентификатором user_id является участником сообщества с идентификатором group_id, иначе 0. 
            
            При использовании параметра extended Возвращает объект, который содержит поля: 
            
            member — является ли пользователь участником сообщества; 
            и может содержать поля: 
            
            request — есть ли непринятая заявка от пользователя на вступление в группу (такую заявку можно отозвать методом groups.leave); 
            invitation — приглашён ли пользователь в группу или встречу. 
            
            
            При передаче нескольких идентификаторов Возвращает результат в виде массива объектов, в которых есть поля user_id и member.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/groups.isMember" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.Search(System.Int32@,VkNet.Model.RequestParams.GroupsSearchParams)">
            <summary>
            Осуществляет поиск сообществ по заданной подстроке.
            </summary>
            <param name="totalCount">Общее количество групп удовлетворяющих запросу.</param>
            <param name="params">Входные параметры выборки.</param>
            <returns>
            После успешного выполнения возвращает список объектов group.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/groups.search" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.GetInvites(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Данный метод возвращает список приглашений в сообщества и встречи текущего пользователя.
            </summary>
            <param name="offset">Смещение, необходимое для выборки определённого подмножества приглашений. положительное число (Положительное число).</param>
            <param name="count">Количество приглашений, которое необходимо вернуть. положительное число, по умолчанию 20 (Положительное число, по умолчанию 20).</param>
            <param name="extended">1 — вернуть дополнительную информацию о пользователях, отправлявших приглашения. По умолчанию — 0. флаг, может принимать значения 1 или 0 (Флаг, может принимать значения 1 или 0).</param>
            <returns>
            После успешного выполнения возвращает список объектов сообществ с дополнительным полем invited_by, содержащим идентификатор пользователя, который отправил приглашение. 
            Если был передан параметр extended=1, дополнительно будет возвращен список profiles пользователей, отправивших приглашения. Каждый объект в списке содержит поля id, first_name, last_name.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/groups.getInvites" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.BanUser(System.Int64,System.Int64,System.Nullable{System.DateTime},System.Nullable{VkNet.Enums.BanReason},System.String,System.Boolean)">
            <summary>
            Добавляет пользователя в черный список группы.
            </summary>
            <param name="groupId">Идентификатор группы.</param>
            <param name="userId">Идентификатор пользователя, которого нужно добавить в черный список.</param>
            <param name="endDate">Дата завершения срока действия бана. Если параметр не указан пользователь будет заблокирован навсегда.</param>
            <param name="reason">Причина бана <see cref="T:VkNet.Enums.BanReason"/>.</param>
            <param name="comment">Текст комментария к бану.</param>
            <param name="commentVisible"><see langword="true"/> – текст комментария будет отображаться пользователю. false – текст комментария не доступен
            пользователю (по умолчанию).</param>
            <returns>После успешного выполнения возвращает true.</returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/groups.banUser"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.BanUser(VkNet.Model.RequestParams.GroupsBanUserParams)">
            <summary>
            Добавляет пользователя в черный список сообщества.
            </summary>
            <param name="params">Входные параметры выборки.</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/groups.banUser" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.GetBanned(System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64},VkNet.Enums.Filters.GroupsFields,System.Nullable{System.Int64})">
            <summary>
            Возвращает список забаненных пользователей в сообществе.
            </summary>
            <param name="groupId">Идентификатор сообщества. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <param name="offset">Смещение, необходимое для выборки определенного подмножества черного списка. положительное число (Положительное число).</param>
            <param name="count">Количество пользователей, которое необходимо вернуть. положительное число, по умолчанию 20, максимальное значение 200 (Положительное число, по умолчанию 20, максимальное значение 200).</param>
            <param name="fields">Список дополнительных полей, которые необходимо вернуть. 
            Доступные значения: sex, bdate, city, country, photo_50, photo_100, photo_200_orig, photo_200, photo_400_orig, photo_max, photo_max_orig, online, online_mobile, lists, domain, has_mobile, contacts, connections, site, education, universities, schools, can_post, can_see_all_posts, can_see_audio, can_write_private_message, status, last_seen, common_count, relation, relatives, counters список строк, разделенных через запятую (Список строк, разделенных через запятую).</param>
            <param name="userId">Идентификатор пользователя, который можно передать для получения статуса бана отдельного пользователя. положительное число (Положительное число).</param>
            <returns>
            После успешного выполнения возвращает список объектов user с дополнительным полем ban_info. 
            Объект ban_info — информация о внесении в черный список сообщества.  
            admin_id идентификатор администратора, который добавил пользователя в черный список. 
             положительное число date дата добавления пользователя в черный список в формате Unixtime. 
             положительное число reason причина добавления пользователя в черный список. Возможные значения: 
            
            0 — другое (по умолчанию); 
            1 — спам; 
            2 — оскорбление участников; 
            3 — нецензурные выражения; 
            4 — сообщения не по теме. 
            
             int (числовое значение) comment текст комментария. 
             строка end_date дата окончания блокировки (0 — блокировка вечная). 
             int (числовое значение).
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/groups.getBanned" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.UnbanUser(System.Int64,System.Int64)">
            <summary>
            Убирает пользователя из черного списка сообщества.
            </summary>
            <param name="groupId">Идентификатор сообщества</param>
            <param name="userId">Идентификатор пользователя, которого нужно убрать из черного списка</param>
            <returns>После успешного выполнения возвращает <c>true</c>.</returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/groups.unbanUser"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.EditManager(VkNet.Model.RequestParams.GroupsEditManagerParams)">
            <summary>
            Позволяет назначить/разжаловать руководителя в сообществе или изменить уровень его полномочий.
            </summary>
            <param name="params">Входные параметры выборки.</param>
            <returns>
            В случае успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/groups.editManager" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.GetSettings(System.Int64)">
            <summary>
            Позволяет получать данные, необходимые для отображения страницы редактирования данных сообщества.
            </summary>
            <param name="groupId">Идентификатор сообщества, данные которого необходимо получить. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <returns>
            В случае успешного выполнения метод вернет объект, содержащий данные сообщества, которые позволят отобразить форму редактирования для метода groups.edit.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/groups.getSettings" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.Edit(System.Int64,VkNet.Model.GroupInfo)">
            <summary>
            Позволяет редактировать информацию групп.
            </summary>
            <param name="groupId">Идентификатор группы.</param>
            <param name="groupInfo">Информация о группе.</param>
            <returns></returns>
            <remarks>
            Для того, чтобы воспользоваться этим методом Вы должны быть администратором группы.
            Страница документации ВКонтакте <see href="http://vk.com/dev/groups.edit"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.EditPlace(System.Int64,VkNet.Model.Place)">
            <summary>
            Позволяет редактировать информацию о месте группы.
            Для удаления информации о местоположении нужно передать только group_id.
            Для обновления данных о местоположении необходимо указать как минимум id страны, широту и долготу.
            </summary>
            <param name="groupId">Идентификатор группы, информацию о месте которой нужно отредактировать.</param>
            <param name="place">Местоположение.</param>
            <remarks>
            Для того, чтобы воспользоваться этим методом Вы должны быть администратором группы.
            Страница документации ВКонтакте <see href="https://vk.com/dev/groups.editPlace"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.GetInvitedUsers(System.Int64,System.Int32@,System.Nullable{System.Int64},System.Nullable{System.Int64},VkNet.Enums.Filters.UsersFields,VkNet.Enums.SafetyEnums.NameCase)">
            <summary>
            Возвращает список пользователей, которые были приглашены в группу.
            </summary>
            <param name="groupId">Идентификатор группы, список приглашенных в которую пользователей нужно вернуть. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <param name="offset">Смещение, необходимое для выборки определённого подмножества пользователей. положительное число (Положительное число).</param>
            <param name="count">Количество пользователей, информацию о которых нужно вернуть. положительное число, по умолчанию 20 (Положительное число, по умолчанию 20).</param>
            <param name="fields">Список дополнительных полей, которые необходимо вернуть. 
            Доступные значения: nickname, domain, sex, bdate, city, country, timezone, photo_50, photo_100, photo_200_orig, has_mobile, contacts, education, online, relation, last_seen, status, can_write_private_message, can_see_all_posts, can_post, universities список строк, разделенных через запятую (Список строк, разделенных через запятую).</param>
            <param name="nameCase">Падеж для склонения имени и фамилии пользователя. Возможные значения: именительный – nom, родительный – gen, дательный – dat, винительный – acc, творительный – ins, предложный – abl. По умолчанию nom. строка (Строка).</param>
            <returns></returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/groups.getInvitedUsers" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.Invite(System.Int64,System.Int64)">
            <summary>
            Позволяет приглашать друзей в группу.
            </summary>
            <param name="groupId">Идентификатор группы, в которую необходимо выслать приглашение положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <param name="userId">Идентификатор пользователя, которому необходимо выслать приглашение положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <returns>
            В случае успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/groups.invite" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.AddLink(System.Int64,System.Security.Policy.Url,System.String)">
            <summary>
            Позволяет добавлять ссылки в сообщество.
            </summary>
            <param name="groupId">Идентификатор сообщества, в которое добавляется ссылка положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <param name="link">Адрес ссылки строка, обязательный параметр (Строка, обязательный параметр).</param>
            <param name="text">Текст ссылки строка (Строка).</param>
            <returns>
            В случае успешного выполнения возвращает объект со следующими полями: 
            
            
            id — идентификатор ссылки; 
            url — URL ссылки; 
            name — название ссылки в блоке сообщества; 
            edit_title — возвращается 1, если можно редактировать название ссылки (для внешних ссылок); 
            desc — описание ссылки; 
            image_processing — возвращается 1, если превью находится в процессе обработки.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/groups.addLink" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.DeleteLink(System.Int64,System.UInt64)">
            <summary>
            Позволяет удалить ссылки из сообщества.
            </summary>
            <param name="groupId">Идентификатор сообщества, ссылки которого нужно удалить положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <param name="linkId">Идентификатор ссылки, которую необходимо удалить положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <returns>
            В случае успешного выполнения метод возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/groups.deleteLink" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.EditLink(System.Int64,System.UInt64,System.String)">
            <summary>
            Позволяет редактировать ссылки в сообществе.
            </summary>
            <param name="groupId">Идентификатор сообщества, в которое добавляется ссылка положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <param name="linkId">Идентификатор редактируемой ссылки положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <param name="text">Новое описание ссылки строка (Строка).</param>
            <returns>
            В случае успешного редактирования ссылки метод возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/groups.editLink" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.ReorderLink(System.Int64,System.Int64,System.Nullable{System.Int64})">
            <summary>
            Позволяет менять местоположение ссылки в списке.
            </summary>
            <param name="groupId">Идентификатор группы, внутри которой перемещается ссылка положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <param name="linkId">Идентификатор ссылки, которую необходимо переместить положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <param name="after">Идентификатор ссылки после которой необходимо разместить перемещаемую ссылку. 0 – если ссылку нужно разместить в начале списка. положительное число (Положительное число).</param>
            <returns>
            В случае успешного выполнение метод возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/groups.reorderLink" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.RemoveUser(System.Int64,System.Int64)">
            <summary>
            Позволяет исключить пользователя из группы или отклонить заявку на вступление.
            </summary>
            <param name="groupId">Идентификатор группы, из которой необходимо исключить пользователя.</param>
            <param name="userId">Идентификатор пользователя, которого нужно исключить.</param>
            <returns>
            В случае успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="https://vk.com/dev/groups.removeUser" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.ApproveRequest(System.Int64,System.Int64)">
            <summary>
            Позволяет одобрить заявку в группу от пользователя.
            </summary>
            <param name="groupId">Идентификатор группы, заявку в которую необходимо одобрить.</param>
            <param name="userId">Идентификатор пользователя, заявку которого необходимо одобрить.</param>
            <returns>
            В случае успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="https://vk.com/dev/groups.approveRequest" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.Create(System.String,System.String,VkNet.Enums.SafetyEnums.GroupType,System.Nullable{VkNet.Enums.Filters.GroupSubType})">
            <summary>
            Создает новое сообщество.
            </summary>
            <param name="title">Название сообщества. строка, обязательный параметр (Строка, обязательный параметр).</param>
            <param name="description">Описание сообщества, (не учитывается при type=public). строка (Строка).</param>
            <param name="type">Тип создаваемого сообщества: 
            
            group — группа; 
            event — мероприятие; 
            public — публичная страница. 
            строка, по умолчанию group (Строка, по умолчанию group).</param>
            <param name="subtype">Вид публичной страницы (только при type=public): 
            
            1 — место или небольшая компания; 
            2 — компания, организация или веб-сайт; 
            3 — известная личность или коллектив; 
            4 — произведение или продукция. 
            положительное число (Положительное число).</param>
            <returns>
            Возвращает идентификатор созданного сообщества.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/groups.create" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.GroupsCategory.GetRequests(System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64},VkNet.Enums.Filters.UsersFields)">
            <summary>
            Возвращает список заявок на вступление в сообщество.
            </summary>
            <param name="groupId">Идентификатор сообщества (указывается без знака «минус»). положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <param name="offset">Смещение, необходимое для выборки определенного подмножества результатов. По умолчанию — 0. положительное число (Положительное число).</param>
            <param name="count">Число результатов, которые необходимо вернуть. положительное число, по умолчанию 20, максимальное значение 200 (Положительное число, по умолчанию 20, максимальное значение 200).</param>
            <param name="fields">Список дополнительных полей профилей, которые необходимо вернуть. См. подробное описание. 
            Доступные значения: sex, bdate, city, country, photo_50, photo_100, photo_200_orig, photo_200, photo_400_orig, photo_max, photo_max_orig, online, online_mobile, domain, has_mobile, contacts, connections, site, education, universities, schools, can_post, can_see_all_posts, can_see_audio, can_write_private_message, status, last_seen, common_count, relation, relatives, counters, screen_name, maiden_name, timezone, occupation,activities, interests, music, movies, tv, books, games, about, quotes список строк, разделенных через запятую (Список строк, разделенных через запятую).</param>
            <returns>
            Возвращает список идентификаторов пользователей, отправивших заявки на вступление в сообщество. 
            Если было передано значение в параметре fields, возвращается список объектов пользователей.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/groups.getRequests" />.
            </remarks>
        </member>
        <member name="T:VkNet.Categories.MessagesCategory">
            <summary>
            Методы для работы с сообщениями.
            </summary>
            <summary>
            Методы для работы с сообщениями.
            </summary>
        </member>
        <member name="M:VkNet.Categories.MessagesCategory.Get(VkNet.Enums.MessageType,System.Int32@,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.Nullable{System.TimeSpan},System.Nullable{VkNet.Enums.MessagesFilter},System.Nullable{System.UInt32},System.Nullable{System.Int64})">
            <summary>
            Возвращает список входящих либо исходящих личных сообщений текущего пользователя.
            </summary>
            <param name="type">Тип сообщений которые необходимо получить.
            Необходимо передать <see cref="F:VkNet.Enums.MessageType.Received"/> для полученных сообщений и <see cref="F:VkNet.Enums.MessageType.Sended"/>
            для отправленных пользователем сообщений.
            </param>
            <param name="totalCount">Общее количество сообщений, удовлетворяющих условиям фильтрации.</param>
            <param name="count">Количество сообщений, которое необходимо получить (по умолчанию 20, но не более 200).</param>
            <param name="offset">Смещение, необходимое для выборки определенного подмножества сообщений.</param>
            <param name="timeOffset">Максимальное время, прошедшее с момента отправки сообщения до текущего момента в секундах. 0, если Вы хотите получить сообщения любой давности.</param>
            <param name="filter">Фильтр возвращаемых сообщений.</param>
            <param name="previewLength">Количество символов, по которому нужно обрезать сообщение.
            Укажите 0, если Вы не хотите обрезать сообщение. (по умолчанию сообщения не обрезаются).
            Обратите внимание что сообщения обрезаются по словам.</param>
            <param name="lastMessageId">Идентификатор сообщения, полученного перед тем, которое нужно вернуть последним (при условии, что после него было получено не более count сообщений, иначе необходимо использовать с параметром offset).</param>
            <returns>Список сообщений, удовлетворяющий условиям фильтрации.</returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Messages"/>.
            Страница документации ВКонтакте <see href="http://vk.com/dev/messages.get"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MessagesCategory.GetHistory(System.Int32@,System.Boolean,System.Int64,System.Nullable{System.Int32},System.Nullable{System.UInt32},System.Nullable{System.Int64},System.Boolean)">
            <summary>
            Возвращает историю сообщений текущего пользователя с указанным пользователя или групповой беседы.
            </summary>
            <param name="totalCount">Общее количество сообщений в истории.</param>
            <param name="isChat">Если <see langword="true" /> то вернуть беседу, иначе диалог с пользователем.</param>
            <param name="id">Идентификатор пользователя или беседы (зависит от параметра <paramref name="isChat" />), историю переписки с которым необходимо вернуть.</param>
            <param name="offset">Смещение, необходимое для выборки определенного подмножества сообщений, должен быть &gt;= 0, если не передан параметр start_message_id, и должен быть &lt;= 0, если передан.</param>
            <param name="count">Количество сообщений, которое необходимо получить (но не более 200).</param>
            <param name="startMessageId">Если значение &gt; 0, то это идентификатор сообщения, начиная с которого нужно вернуть историю переписки, если же передано значение -1, то к значению параметра offset прибавляется количество входящих непрочитанных сообщений в конце диалога</param>
            <param name="inReverse">true – возвращать сообщения в хронологическом порядке. false – возвращать сообщения в обратном хронологическом порядке (по умолчанию), недоступен при переданном start_message_id.</param>
            <returns></returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Messages" />.
            Страница документации ВКонтакте <see href="http://vk.com/dev/messages.getHistory" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MessagesCategory.GetDialogs(System.Int32@,System.Int32@,System.UInt32,System.Nullable{System.Int32},System.Boolean,System.Nullable{System.Int64},System.Nullable{System.UInt32})">
             <summary>
             Возвращает список диалогов текущего пользователя.
             </summary>
             <param name="totalCount">Общее количество диалогов с учетом фильтра. Если получены только диалоги, в которых есть непрочитанные сообщения, то вернет то же что и unreadCount</param>
             <param name="unreadCount">Количество диалогов с непрочитанными сообщениями</param>
             <param name="unread">Значение <c>true</c> означает, что нужно вернуть только диалоги в которых есть непрочитанные входящие сообщения. По умолчанию false.</param>
             <param name="startMessageId">
             Идентификатор сообщения, начиная с которого нужно вернуть список диалогов (подробности см. ниже).
            
             Если был передан параметр <c>start_message_id</c>, будет найдена позиция диалога в списке,
             идентификатор последнего сообщения которого равен <c>start_message_id</c> (или ближайший к нему более ранний).
             Начиная с этой позиции будет возвращено <c>count</c> диалогов.
             Смещение <c>offset</c> в этом случае будет отсчитываться от этой позиции (оно может быть отрицательным).
             </param>
             <param name="count">Количество диалогов, которое необходимо получить (но не более 200).</param>
             <param name="offset">Смещение, необходимое для выборки определенного подмножества диалогов.</param>
             <param name="previewLength">Количество символов, по которому нужно обрезать сообщение.
             Укажите 0, если Вы не хотите обрезать сообщение. (по умолчанию сообщения не обрезаются).</param>
             <returns>Список диалогов текущего пользователя.</returns>
             <remarks>
             Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Messages"/>.
             Страница документации ВКонтакте <see href="http://vk.com/dev/messages.getDialogs" />.
             </remarks>
        </member>
        <member name="M:VkNet.Categories.MessagesCategory.Search(System.String,System.Int32@,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает список найденных личных сообщений текущего пользователя по введенной строке поиска.
            </summary>
            <param name="query">Подстрока, по которой будет производиться поиск.</param>
            <param name="totalCount">Общее количество найденных сообщений.</param>
            <param name="count">Количество сообщений, которое необходимо получить (но не более 100).</param>
            <param name="offset">Смещение, необходимое для выборки определенного подмножества сообщений из списка найденных.</param>
            <returns>Список личных сообщений пользователя, удовлетворяющих условиям запроса.</returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Messages"/>.
            Страница документации ВКонтакте <see href="http://vk.com/dev/messages.search"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MessagesCategory.Send(System.Int64,System.Boolean,System.String,System.String,VkNet.Model.Attachments.MediaAttachment,System.Collections.Generic.IEnumerable{System.Int64},System.Boolean,System.Nullable{System.Double},System.Nullable{System.Double},System.String,System.Nullable{System.Int64},System.String)">
            <summary>
            Посылает личное сообщение.
            </summary>
            <param name="id">
            Если параметр <paramref name="isChat"/> равен false, то задает идентификатор пользователя, которому необходимо послать сообщение.
            Если параметр <paramref name="isChat"/> равен true, то задает идентификатор беседы, к которой будет относиться сообщение.
            </param>
            <param name="isChat">Признак посылается ли сообщение в беседу (true) или указанному пользователю (false).</param>
            <param name="message">Текст личного cообщения (является обязательным, если не задан параметр <paramref name="attachment"/>).</param>
            <param name="title">Заголовок сообщения.</param>
            <param name="attachment">Медиа-приложение к личному сообщению.</param>
            <param name="forwardMessagedIds">Идентификаторы пересылаемых сообщений. Перечисленные сообщения отправителя будут отображаться
            в теле письма у получателя.</param>
            <param name="fromChat">Задайте false для обычного сообщения и true для сообщения из часта.</param>
            <param name="latitude">Широта при добавлении местоположения.</param>
            <param name="longitude">Долгота при добавлении местоположения.</param>
            <param name="guid">Уникальный строковой идентификатор, предназначенный для предотвращения повторной отправки одинакового сообщения.</param>
            <param name="captchaSid">Id капчи (только если для вызова метода необходимо ввести капчу)</param>
            <param name="captchaKey">Текст капчи (только если для вызова метода необходимо ввести капчу)</param>
            <returns>Возвращается идентификатор отправленного сообщения.</returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Messages"/>.
            Страница документации ВКонтакте <see href="http://vk.com/dev/messages.send"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MessagesCategory.MarkAsNew(System.Collections.Generic.IEnumerable{System.UInt64})">
            <summary>
            Помечает сообщения как непрочитанные.
            </summary>
            <param name="messageIds">
            Идентификаторы сообщений, которые нужно пометить как непрочитанные.
            </param>
            <returns>
            Возвращает true, если сообщения были успешно помечены как непрочитанные, false в противном случае.
            </returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Messages"/>.
            Страница документации ВКонтакте <see href="http://vk.com/dev/messages.markAsNew"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MessagesCategory.MarkAsNew(System.UInt64)">
            <summary>
            Помечает указанное сообщение как непрочитанное.
            </summary>
            <param name="messageId">
            Идентификатор сообщения, которое необходимо пометить как прочитанное.
            </param>
            <returns>
            Возвращает true, если сообщение были успешно помечено как непрочитанное, false в противном случае.
            </returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Messages"/>.
            Страница документации ВКонтакте <see href="http://vk.com/dev/messages.markAsNew"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MessagesCategory.MarkAsRead(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Помечает сообщения как прочитанные.
            </summary>
            <param name="messageIds">
            Идентификаторы сообщений, которые нужно пометить как прочитанные.
            </param>
            <returns>
            Возвращает true, если сообщения были успешно помечены как прочитанные, false в противном случае.
            </returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Messages"/>.
            Страница документации ВКонтакте <see href="http://vk.com/dev/messages.markAsRead"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MessagesCategory.MarkAsRead(System.Int64)">
            <summary>
            Помечает сообщение как прочитанное.
            </summary>
            <param name="messageId">
            Идентификатор сообщения, которое необходимо пометить как прочитанное.
            </param>
            <returns>
            Возвращает true, если сообщение были успешно помечено как прочитанное, false в противном случае.
            </returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Messages"/>.
            Страница документации ВКонтакте <see href="http://vk.com/dev/messages.markAsRead"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MessagesCategory.GetChatUsers(System.Int64,VkNet.Enums.Filters.UsersFields)">
            <summary>
            Позволяет получить список пользователей беседы по ее идентификатору.
            </summary>
            <param name="chatId">Идентификатор беседы.</param>
            <param name="fields">Список дополнительных полей профилей, которые необходимо вернуть.</param>
            <returns>После успешного выполнения возвращает список идентификаторов участников беседы.</returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Messages"/>.
            Страница документации ВКонтакте <see href="http://vk.com/dev/messages.getChatUsers"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MessagesCategory.GetChatUsers(System.Int64)">
            <summary>
            Позволяет получить список пользователей беседы по ее идентификатору.
            </summary>
            <param name="chatId">Идентификатор беседы.</param>
            <returns>После успешного выполнения возвращает список идентификаторов участников беседы.</returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Messages"/>.
            Страница документации ВКонтакте <see href="http://vk.com/dev/messages.getChatUsers"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MessagesCategory.#ctor(VkNet.VkApi)">
            <summary>
            Методы для работы с сообщениями.
            </summary>
            <param name="vk">API</param>
        </member>
        <member name="M:VkNet.Categories.MessagesCategory.Get(VkNet.Model.RequestParams.MessagesGetParams)">
            <summary>
            Возвращает список входящих либо исходящих личных сообщений текущего пользователя.
            </summary>
            <param name="params">Входные параметры выборки.</param>
            <returns>Список сообщений, удовлетворяющий условиям фильтрации.</returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Messages"/>.
            Страница документации ВКонтакте <see href="http://vk.com/dev/messages.get"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MessagesCategory.GetHistory(VkNet.Model.RequestParams.MessagesGetHistoryParams)">
            <summary>
            Возвращает историю сообщений текущего пользователя с указанным пользователя или групповой беседы.
            </summary>
            <param name="params">Входные параметры выборки.</param>
            <returns>Возвращает историю сообщений с указанным пользователем или из указанной беседы</returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Messages" />.
            Страница документации ВКонтакте <see href="http://vk.com/dev/messages.getHistory" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MessagesCategory.GetById(System.Int32@,System.Collections.Generic.IEnumerable{System.UInt64},System.Nullable{System.UInt32})">
            <summary>
            Возвращает сообщения по их идентификаторам.
            </summary>
            <param name="messageIds">Идентификаторы сообщений, которые необходимо вернуть (не более 100).</param>
            <param name="totalCount">Общее количество сообщений.</param>
            <param name="previewLength">Количество символов, по которому нужно обрезать сообщение.
            Укажите 0, если Вы не хотите обрезать сообщение. (по умолчанию сообщения не обрезаются).</param>
            <returns>Запрошенные сообщения.</returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Messages"/>.
            Страница документации ВКонтакте <see href="http://vk.com/dev/messages.getById"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MessagesCategory.GetById(System.UInt64,System.Nullable{System.UInt32})">
            <summary>
            Ворзвращает указанное сообщение по его идентификатору.
            </summary>
            <param name="messageId">Идентификатор запрошенного сообщения.</param>
            <param name="previewLength">Количество символов, по которому нужно обрезать сообщение.
            Укажите 0, если Вы не хотите обрезать сообщение. (по умолчанию сообщения не обрезаются).</param>
            <returns>Запрошенное сообщение, null если сообщение с заданным идентификатором не найдено.</returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Messages"/>.
            Страница документации ВКонтакте <see href="http://vk.com/dev/messages.getById"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MessagesCategory.GetDialogs(VkNet.Model.RequestParams.MessagesDialogsGetParams)">
            <summary>
            Возвращает список диалогов аккаунта
            </summary>
            <param name="params">Входные параметры выборки.</param>
            <returns>В случае успеха возвращает список диалогов пользователя</returns>
        </member>
        <member name="M:VkNet.Categories.MessagesCategory.SearchDialogs(System.String,VkNet.Enums.Filters.ProfileFields,System.Nullable{System.UInt32})">
            <summary>
            Возвращает список найденных диалогов текущего пользователя по введенной строке поиска.
            </summary>
            <param name="query">Подстрока, по которой будет производиться поиск.</param>
            <param name="limit">Количество пользователей которое нужно вернуть.</param>
            <param name="fields">Поля профилей собеседников, которые необходимо вернуть.</param>
            <returns>
            В результате выполнения данного метода будет возвращён массив объектов профилей, бесед и email.
            </returns>
            <exception cref="T:System.ArgumentException">Query can not be null or empty.;query</exception>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Messages" />.
            Страница документации ВКонтакте <see href="http://vk.com/dev/messages.searchDialogs" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MessagesCategory.Search(System.Int32@,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Возвращает список найденных личных сообщений текущего пользователя по введенной строке поиска.
            </summary>
            <param name="totalCount">Общее количество найденных сообщений.</param>
            <param name="query">Подстрока, по которой будет производиться поиск.строка, обязательный параметр (Строка, обязательный параметр).</param>
            <param name="previewLength">Количество символов, по которому нужно обрезать сообщение. Укажите ''0'', если Вы не хотите обрезать сообщение. (по умолчанию сообщения не обрезаются).положительное число (Положительное число).</param>
            <param name="offset">Смещение, необходимое для выборки определенного подмножества сообщений из списка найденных.положительное число (Положительное число).</param>
            <param name="count">Количество сообщений, которое необходимо получить.положительное число, по умолчанию 20, максимальное значение 100 (Положительное число, по умолчанию 20, максимальное значение 100).</param>
            <returns>
            После успешного выполнения возвращает  объектов , найденных в соответствии с поисковым запросом '''q'''.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/messages.search" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MessagesCategory.Send(VkNet.Model.RequestParams.MessagesSendParams)">
            <summary>
            Посылает личное сообщение.
            </summary>
            <param name="params">Параметры запроса.</param>
            <returns>
            Возвращается идентификатор отправленного сообщения.
            </returns>
            <exception cref="T:System.ArgumentException">Message can not be <c>null</c>.</exception>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Messages" />.
            Страница документации ВКонтакте <see href="http://vk.com/dev/messages.send" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MessagesCategory.DeleteDialog(System.Int64,System.Boolean,System.Nullable{System.Int64},System.Nullable{System.UInt32},System.Nullable{System.UInt32})">
            <summary>
            Удаляет все личные сообщения в диалоге.
            </summary>
            <param name="userId">
            Если параметр <paramref name="isChat"/> равен false, то задает идентификатор пользователя, из диалога с которым необходимо удалить свои личные сообщения.
            Если параметр <paramref name="isChat"/> равен true, то задает идентификатор беседы, из которой необходимо удалить свои личные сообщения.
            </param>
            <param name="isChat">Признак удаляются ли сообщения из беседы (true) или из диалога с указанным пользователем (false).</param>
            <param name="peerId">Идентификатор назначения. Для групповой беседы: 2000000000 + id беседы. Для сообщества: -id сообщества. </param>
            <param name="offset">Смещение, начиная с которого нужно удалить переписку (по умолчанию удаляются все сообщения,
             начиная с первого).</param>
            <param name="count">Как много сообщений нужно удалить. Обратите внимание что на метод наложено ограничение, за один вызов
            нельзя удалить больше 10000 сообщений, поэтому если сообщений в переписке больше - метод нужно вызывать несколько раз.</param>
            <returns>Признак удалось ли удалить сообщения.</returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Messages"/>.
            Страница документации ВКонтакте <see href="http://vk.com/dev/messages.deleteDialog"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MessagesCategory.Delete(System.Collections.Generic.IEnumerable{System.UInt64})">
            <summary>
            Удаляет сообщения пользователя.
            </summary>
            <param name="messageIds">
            Идентификаторы удаляемых сообщений.
            </param>
            <returns>
            Возвращает словарь (идентификатор сообщения -> признак было ли удаление сообщения успешным).
            </returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Messages"/>.
            Страница документации ВКонтакте <see href="http://vk.com/dev/messages.delete"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> имеет значение null.</exception>
            <exception cref="T:System.ArgumentException">Элемент с таким ключом уже существует в словаре <see cref="T:System.Collections.Generic.Dictionary`2" />.</exception>
        </member>
        <member name="M:VkNet.Categories.MessagesCategory.Delete(System.UInt64)">
            <summary>
            Удаляет личное сообщение пользователя с заданным идентификатором.
            </summary>
            <param name="messageId">
            Идентификатор удаляемого сообщения.
            </param>
            <returns>
            Признак было ли удаление сообщения успешным.
            </returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Messages"/>.
            Страница документации ВКонтакте <see href="http://vk.com/dev/messages.delete"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> имеет значение null.</exception>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">Свойство получено и параметр <paramref name="key" /> не найден.</exception>
            <exception cref="T:System.NotSupportedException">Свойство задано, и объект <see cref="T:System.Collections.Generic.IDictionary`2" /> доступен только для чтения.</exception>
        </member>
        <member name="M:VkNet.Categories.MessagesCategory.Restore(System.UInt64)">
            <summary>
            Восстанавливает удаленное сообщение.
            </summary>
            <param name="messageId">Идентификатор сообщения, которое нужно восстановить.</param>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Messages"/>.
            Страница документации ВКонтакте <see href="http://vk.com/dev/messages.restore"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MessagesCategory.MarkAsRead(System.Collections.Generic.IEnumerable{System.Int64},System.String,System.Nullable{System.Int64})">
            <summary>
            Помечает сообщения как прочитанные.
            </summary>
            <param name="messageIds">Идентификаторы сообщений. список положительных чисел, разделенных запятыми (Список положительных чисел, разделенных запятыми).</param>
            <param name="peerId">Идентификатор чата или пользователя, если это диалог. строка (Строка).</param>
            <param name="startMessageId">При передаче этого параметра будут помечены как прочитанные все сообщения, начиная с данного. положительное число (Положительное число).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/messages.markAsRead" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MessagesCategory.SetActivity(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Изменяет статус набора текста пользователем в диалоге.
            </summary>
            <param name="userId">Идентификатор пользователя</param>
            <param name="peerId">Идентификатор назначения. Для групповой беседы: 2000000000 + id беседы. Для сообщества: -id сообщества.</param>
            <returns>
            После успешного выполнения возвращает true, false в противном случае.
            Текст «N набирает сообщение...» отображается в течение 10 секунд после вызова метода, либо до момента отправки сообщения.
            </returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Messages"/>.
            Страница документации ВКонтакте <see href="http://vk.com/dev/messages.setActivity"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MessagesCategory.GetLastActivity(System.Int64)">
            <summary>
            Возвращает текущий статус и дату последней активности указанного пользователя.
            </summary>
            <param name="userId">Идентификатор пользователя, информацию о последней активности которого требуется получить. целое число, обязательный параметр (Целое число, обязательный параметр).</param>
            <returns>
            Возвращает объект, содержащий следующие поля: 
            
            online — текущий статус пользователя (1 — в сети, 0 — не в сети); 
            time — дата последней активности пользователя в формате unixtime.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/messages.getLastActivity" />.
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "M:VkNet.Categories.MessagesCategory.GetChat(System.Int64,VkNet.Enums.Filters.ProfileFields,VkNet.Enums.SafetyEnums.NameCase)" -->
        <member name="M:VkNet.Categories.MessagesCategory.GetChat(System.Collections.Generic.IEnumerable{System.Int64},VkNet.Enums.Filters.ProfileFields,VkNet.Enums.SafetyEnums.NameCase)">
            <summary>
            Возвращает информацию о беседе.
            </summary>
            <param name="chatId">Идентификатор беседы. целое число (Целое число).</param>
            <param name="chatIds">Список идентификаторов бесед. список целых чисел, разделенных запятыми (Список целых чисел, разделенных запятыми).</param>
            <param name="fields">Список дополнительных полей профилей, которые необходимо вернуть. 
            Доступные значения: nickname, screen_name, sex, bdate, city, country, timezone, photo_50, photo_100, photo_200_orig, has_mobile, contacts, education, online, counters, relation, last_seen, status, can_write_private_message, can_see_all_posts, can_post, universities список строк, разделенных через запятую (Список строк, разделенных через запятую).</param>
            <param name="nameCase">Падеж для склонения имени и фамилии пользователя. Возможные значения: именительный – nom, родительный – gen, дательный – dat, винительный – acc, творительный – ins, предложный – abl. По умолчанию nom. строка (Строка).</param>
            <returns>
            После успешного выполнения возвращает объект (или список объектов) мультидиалога. 
            Если был задан параметр fields, поле users содержит список объектов пользователей с дополнительным полем invited_by, содержащим идентификатор пользователя, пригласившего в беседу.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/messages.getChat" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MessagesCategory.CreateChat(System.Collections.Generic.IEnumerable{System.UInt64},System.String)">
            <summary>
            Создаёт беседу с несколькими участниками.
            </summary>
            <param name="userIds">Идентификаторы пользователей, которых нужно включить в мультидиалог. список положительных чисел, разделенных запятыми, обязательный параметр (Список положительных чисел, разделенных запятыми, обязательный параметр).</param>
            <param name="title">Название беседы. строка (Строка).</param>
            <returns>
            После успешного выполнения возвращает  идентификатор созданного чата (chat_id).
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/messages.createChat" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MessagesCategory.EditChat(System.Int64,System.String)">
            <summary>
            Изменяет название беседы.
            </summary>
            <param name="chatId">Идентификатор беседы. целое число, обязательный параметр (Целое число, обязательный параметр).</param>
            <param name="title">Новое название для беседы. строка, обязательный параметр (Строка, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/messages.editChat" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MessagesCategory.GetChatUsers(System.Collections.Generic.IEnumerable{System.Int64},VkNet.Enums.Filters.UsersFields,VkNet.Enums.SafetyEnums.NameCase)">
            <summary>
            Позволяет получить список пользователей мультидиалога по его id.
            </summary>
            <param name="chatIds">Идентификаторы бесед. список целых чисел, разделенных запятыми (Список целых чисел, разделенных запятыми).</param>
            <param name="fields">Список дополнительных полей профилей, которые необходимо вернуть. 
            Доступные значения: nickname, screen_name, sex, bdate, city, country, timezone, photo_50, photo_100, photo_200_orig, has_mobile, contacts, education, online, counters, relation, last_seen, status, can_write_private_message, can_see_all_posts, can_post, universities список строк, разделенных через запятую (Список строк, разделенных через запятую).</param>
            <param name="nameCase">Падеж для склонения имени и фамилии пользователя. Возможные значения: именительный – nom, родительный – gen, дательный – dat, винительный – acc, творительный – ins, предложный – abl. По умолчанию nom. строка (Строка).</param>
            <returns>
            После успешного выполнения возвращает список идентификаторов участников беседы. 
            Если был задан параметр fields, возвращает список объектов пользователей с дополнительным полем invited_by, содержащим идентификатор пользователя, пригласившего в беседу.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/messages.getChatUsers" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MessagesCategory.AddChatUser(System.Int64,System.Int64)">
            <summary>
            Добавляет в мультидиалог нового пользователя.
            </summary>
            <param name="chatId">Идентификатор беседы. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <param name="userId">Идентификатор пользователя, которого необходимо включить в беседу. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/messages.addChatUser" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MessagesCategory.RemoveChatUser(System.Int64,System.Int64)">
            <summary>
            Исключает из мультидиалога пользователя, если текущий пользователь был создателем беседы либо пригласил исключаемого пользователя.
            </summary>
            <param name="chatId">Идентификатор беседы. целое число, обязательный параметр (Целое число, обязательный параметр).</param>
            <param name="userId">Идентификатор пользователя, которого необходимо исключить из беседы. Может быть меньше нуля в случае, если пользователь приглашён по email. обязательный параметр (Обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/messages.removeChatUser" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MessagesCategory.GetLongPollServer(System.Boolean,System.Boolean)">
            <summary>
            Возвращает данные, необходимые для подключения к Long Poll серверу.
            Long Poll подключение позволит Вам моментально узнавать о приходе новых сообщений и других событий.
            </summary>
            <param name="useSsl"><c>true</c> — Использовать SSL.</param>
            <param name="needPts"><c>true</c> — возвращать поле pts, необходимое для работы метода messages.getLongPollHistory </param>
            <returns>
            Возвращает объект, с помощью которого можно подключиться к серверу быстрых сообщений для мгновенного
            получения приходящих сообщений и других событий.
            </returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Messages" />.
            Страница документации ВКонтакте <see href="http://vk.com/dev/messages.getLongPollServer" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MessagesCategory.GetLongPollHistory(VkNet.Model.RequestParams.MessagesGetLongPollHistoryParams)">
            <summary>
            Возвращает обновления в личных сообщениях пользователя.
            Для ускорения работы с личными сообщениями может быть полезно кешировать уже загруженные ранее сообщения на
            мобильном устройстве / ПК пользователя, чтобы не получать их повторно при каждом обращении.
            Этот метод помогает осуществить синхронизацию локальной копии списка сообщений с актуальной версией.
            </summary>
            <param name="params">Параметры запроса к LongPool серверу <see cref="T:VkNet.Model.RequestParams.MessagesGetLongPollHistoryParams"/></param>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Messages" />.
            Страница документации ВКонтакте <see href="http://vk.com/dev/messages.getLongPollHistory" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MessagesCategory.DeleteChatPhoto(System.UInt64@,System.UInt64)">
            <summary>
            Позволяет удалить фотографию мультидиалога.
            </summary>
            <param name="messageId">Идентификатор отправленного системного сообщения;</param>
            <param name="chatId">Идентификатор беседы. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает объект, содержащий следующие поля:
            message_id — идентификатор отправленного системного сообщения;
            chat — объект мультидиалога.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/messages.deleteChatPhoto" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MessagesCategory.SetChatPhoto(System.Int64@,System.String)">
            <summary>
            Позволяет установить фотографию мультидиалога, загруженную с помощью метода photos.getChatUploadServer.
            </summary>
            <param name="file">Содержимое поля response из ответа специального upload сервера, полученного в результате загрузки изображения на адрес, полученный методом photos.getChatUploadServer. строка, обязательный параметр (Строка, обязательный параметр).</param>
            <param name="messageId">Идентификатор отправленного системного сообщения;</param>
            <returns>
            После успешного выполнения возвращает объект, содержащий следующие поля: 
            message_id — идентификатор отправленного системного сообщения; 
            chat — объект мультидиалога.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/messages.setChatPhoto" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MessagesCategory.MarkAsImportant(System.Collections.Generic.IEnumerable{System.Int64},System.Boolean)">
            <summary>
            Помечает сообщения как важные либо снимает отметку.
            </summary>
            <param name="messageIds">Список идентификаторов сообщений, которые необходимо пометить.список положительных чисел, разделенных запятыми (Список положительных чисел, разделенных запятыми).</param>
            <param name="important">&#39;&#39;1&#39;&#39;, если сообщения необходимо пометить, как важные;&#39;&#39;0&#39;&#39;, если необходимо снять пометку.положительное число (Положительное число).</param>
            <returns>
            Возвращает список идентификаторов успешно помеченных сообщений.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/messages.markAsImportant" />.
            </remarks>
        </member>
        <member name="T:VkNet.Categories.PagesCategory">
            <summary>
            Методы для работы с wiki.
            </summary>
            <summary>
            Методы для работы с wiki.
            </summary>
        </member>
        <member name="M:VkNet.Categories.PagesCategory.Get(System.Int64,System.Nullable{System.Int64},System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Возвращает информацию о вики-странице.
            </summary>
            <param name="ownerId">Идентификатор владельца вики-страницы.</param>
            <param name="pageId">Идентификатор вики-страницы.</param>
            <param name="global"><c>true</c> — требуется получить информацию о глобальной вики-странице. </param>
            <param name="sitePreview"><c>true</c>— получаемая wiki страница является предпросмотром для прикрепленной ссылки.</param>
            <param name="needSource"><c>true</c> — требуется вернуть содержимое страницы в вики-формате.</param>
            <param name="needHtml"><c>true</c> — требуется вернуть html-представление страницы.</param>
            <returns>
            Возвращает информацию о вики-странице в виде объекта page. 
            Если был задан параметр need_source равный 1, дополнительно будет возвращено поле source.
            Если был задан параметр need_html равный 1, дополнительно будет возвращено поле html.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="https://vk.com/dev/pages.get" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PagesCategory.Get(System.Int64,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Возвращает информацию о вики-странице.
            </summary>
            <param name="ownerId">Идентификатор владельца вики-страницы.</param>
            <param name="global"><c>true</c> — требуется получить информацию о глобальной вики-странице. </param>
            <param name="sitePreview"><c>true</c>— получаемая wiki страница является предпросмотром для прикрепленной ссылки.</param>
            <param name="title">Название страницы.</param>
            <param name="needSource"><c>true</c> — требуется вернуть содержимое страницы в вики-формате.</param>
            <param name="needHtml"><c>true</c> — требуется вернуть html-представление страницы.</param>
            <returns>
            Возвращает информацию о вики-странице в виде объекта page. 
            Если был задан параметр need_source равный 1, дополнительно будет возвращено поле source.
            Если был задан параметр need_html равный 1, дополнительно будет возвращено поле html.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="https://vk.com/dev/pages.get" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PagesCategory.Get(System.Int64,System.String,System.Nullable{System.Int64},System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Возвращает информацию о вики-странице.
            </summary>
            <param name="ownerId">Идентификатор владельца вики-страницы.</param>
            <param name="pageId">Идентификатор вики-страницы.</param>
            <param name="global"><c>true</c> — требуется получить информацию о глобальной вики-странице. </param>
            <param name="sitePreview"><c>true</c>— получаемая wiki страница является предпросмотром для прикрепленной ссылки.</param>
            <param name="title">Название страницы.</param>
            <param name="needSource"><c>true</c> — требуется вернуть содержимое страницы в вики-формате.</param>
            <param name="needHtml"><c>true</c> — требуется вернуть html-представление страницы.</param>
            <returns>
            Возвращает информацию о вики-странице в виде объекта page. 
            Если был задан параметр need_source равный 1, дополнительно будет возвращено поле source.
            Если был задан параметр need_html равный 1, дополнительно будет возвращено поле html.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="https://vk.com/dev/pages.get" />.
            </remarks>
        </member>
        <member name="F:VkNet.Categories.PagesCategory._vk">
            <summary>
            API
            </summary>
        </member>
        <member name="M:VkNet.Categories.PagesCategory.#ctor(VkNet.VkApi)">
            <summary>
            Методы для работы с wiki.
            </summary>
            <param name="vk">API.</param>
        </member>
        <member name="M:VkNet.Categories.PagesCategory.Get(VkNet.Model.RequestParams.PagesGetParams)">
            <summary>
            Возвращает информацию о вики-странице..
            </summary>
            <param name="params">Параметры запроса.</param>
            <returns>
            Возвращает информацию о вики-странице в виде объекта page. 
            Если был задан параметр need_source равный 1, дополнительно будет возвращено поле source. 
            Если был задан параметр need_html равный 1, дополнительно будет возвращено поле html..
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/pages.get" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PagesCategory.Save(System.String,System.Int64,System.Int64,System.Int64)">
            <summary>
            Сохраняет текст вики-страницы.
            </summary>
            <param name="text">Новый текст страницы в вики-формате.</param>
            <param name="pageId">Идентификатор вики-страницы.</param>
            <param name="groupId">Идентификатор сообщества, которому принадлежит вики-страница.</param>
            <param name="userId">Идентификатор пользователя, создавшего вики-страницу.</param>
            <returns>
            В случае успеха возвращает id созданной страницы.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="https://vk.com/dev/pages.save" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PagesCategory.Save(System.String,System.Int64,System.String,System.Int64)">
            <summary>
            Сохраняет текст вики-страницы.
            </summary>
            <param name="text">Новый текст страницы в вики-формате.</param>
            <param name="groupId">Идентификатор сообщества, которому принадлежит вики-страница.</param>
            <param name="userId">Идентификатор пользователя, создавшего вики-страницу.</param>
            <param name="title">Название вики-страницы.</param>
            <returns>
            В случае успеха возвращает id созданной страницы.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="https://vk.com/dev/pages.save" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PagesCategory.Save(System.String,System.Int64,System.Int64,System.Nullable{System.Int64},System.String)">
            <summary>
            Сохраняет текст вики-страницы..
            </summary>
            <param name="text">Новый текст страницы в вики-формате. строка (Строка).</param>
            <param name="pageId">Идентификатор вики-страницы. Вместо page_id может быть передан параметр title. целое число (Целое число).</param>
            <param name="groupId">Идентификатор сообщества, которому принадлежит вики-страница. целое число (Целое число).</param>
            <param name="userId">Идентификатор пользователя, создавшего вики-страницу. целое число (Целое число).</param>
            <param name="title">Название вики-страницы. строка (Строка).</param>
            <returns>
            В случае успеха возвращает id созданной страницы..
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/pages.save" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PagesCategory.SaveAccess(System.Int64,System.Int64,System.Nullable{System.Int64},VkNet.Enums.AccessPages,VkNet.Enums.AccessPages)">
            <summary>
            Сохраняет новые настройки доступа на чтение и редактирование вики-страницы.
            </summary>
            <param name="pageId">Идентификатор вики-страницы. </param>
            <param name="groupId">Идентификатор сообщества, которому принадлежит вики-страница.</param>
            <param name="userId">Идентификатор пользователя, создавшего вики-страницу.</param>
            <param name="view">Значение настройки доступа на чтение.</param>
            <param name="edit">Значение настройки доступа на редактирование.</param>
            <returns>
            В случае успеха возвращает id страницы, доступ к которой был отредактирован.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="https://vk.com/dev/pages.saveAccess" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PagesCategory.GetHistory(System.Int64,System.Int64,System.Nullable{System.Int64})">
            <summary>
            Возвращает список всех старых версий вики-страницы.
            </summary>
            <param name="pageId">Идентификатор вики-страницы.</param>
            <param name="groupId">Идентификатор сообщества, которому принадлежит вики-страница. </param>
            <param name="userId">Идентификатор пользователя, создавшего вики-страницу.</param>
            <returns>
            Возвращает массив объектов page_version, имеющих следующую структуру.
            id — идентификатор версии страницы;
            length длина версии страницы в байтах;
            edited — дата редактирования страницы;
            editor_id — идентификатор редактора;
            editor_name — имя редактора.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="https://vk.com/dev/pages.getHistory" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PagesCategory.GetTitles(System.Int64)">
            <summary>
            Возвращает список вики-страниц в группе.
            </summary>
            <param name="groupId">Идентификатор сообщества, которому принадлежит вики-страница.</param>
            <returns>
            Возвращает массив объектов вики-страниц.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="https://vk.com/dev/pages.getTitles" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PagesCategory.GetVersion(System.Int64,System.Int64,System.Boolean,System.Nullable{System.Int64})">
            <summary>
            Возвращает текст одной из старых версий страницы.
            </summary>
            <param name="versionId">Идентификатор версии. </param>
            <param name="groupId">Идентификатор сообщества, которому принадлежит вики-страница.</param>
            <param name="needHtml">Определяет, требуется ли в ответе html-представление вики-страницы.</param>
            <param name="userId">Идентификатор пользователя, который создал страницу.</param>
            <returns>
            Возвращает объект вики-страницы.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="https://vk.com/dev/pages.getVersion" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PagesCategory.ParseWiki(System.String,System.UInt64)">
            <summary>
            Возвращает html-представление вики-разметки.
            </summary>
            <param name="text">Текст в вики-формате.</param>
            <param name="groupId">Идентификатор группы, в контексте которой интерпретируется данная страница.</param>
            <returns>
            В случае успеха возвращает экранированный html, соответствующий вики-разметке.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="https://vk.com/dev/pages.parseWiki" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PagesCategory.ClearCache(System.Uri)">
            <summary>
            Позволяет очистить кеш отдельных внешних страниц, которые могут быть прикреплены к записям ВКонтакте.
            После очистки кеша при последующем прикреплении ссылки к записи, данные о странице будут обновлены.
            Внешние страницы – страницы которые прикрепляются к записям вместе с ссылкой и доступные по кнопке "Предпросмотр".
            </summary>
            <param name="url">URL.</param>
            <returns>
            При удачной очистке кеша – метод возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="https://vk.com/dev/pages.clearCache" />.
            </remarks>
        </member>
        <member name="T:VkNet.Categories.PhotoCategory">
            <summary>
            Методы для работы с фотографиями.
            </summary>
            <summary>
            Методы для работы с фотографиями.
            </summary>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.GetProfile(System.Nullable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.Nullable{System.UInt64},System.Nullable{System.UInt64})">
            <summary>
            Возвращает список фотографий со страницы пользователя или сообщества.
            </summary>
            <param name="ownerId">Идентификатор пользователя или сообщества, фотографии которого нужно получить. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)</param>
            <param name="photoIds">Идентификаторы фотографий, информацию о которых необходимо вернуть</param>
            <param name="rev">Порядок сортировки фотографий (1 — антихронологический, 0 — хронологический). флаг, может принимать значения 1 или 0</param>
            <param name="extended"><c>true</c> — будет возвращено дополнительное поле likes. По умолчанию поле likes не возвращается. флаг, может принимать значения 1 или 0</param>
            <param name="feedType">Тип новости, получаемый в поле type метода newsfeed.get. строка</param>
            <param name="feed">Unixtime, который может быть получен методом newsfeed.get в поле date, для получения всех фотографий загруженных пользователем в определённый день либо на которых пользователь был отмечен. Также нужно указать параметр uid пользователя, с которым произошло событие</param>
            <param name="photoSizes">Возвращать ли размеры фотографий в специальном формате</param>
            <param name="count">Положительное число, максимальное значение 1000</param>
            <param name="offset">Положительное число</param>
            <returns>После успешного выполнения возвращает массив объектов <see cref="T:VkNet.Model.Attachments.Photo"/>. В случае, если запись на стене о том, что была обновлена фотография профиля, не удалена, будет возвращено дополнительное поле post_id, содержащее идентификатор записи на стене.</returns>
            <remarks>
            Страница документации ВКонтакте <seealso cref="!:https://vk.com/dev/photos.getProfile"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.GetProfileUploadServer">
            <summary>
            Возвращает адрес сервера для загрузки фотографии на страницу пользователя.
            </summary>
            <returns>После успешного выполнения возвращает объект с единственным полем upload_url. </returns>
            <remarks>
            Страница документации ВКонтакте <seealso cref="!:https://vk.com/dev/photos.getProfileUploadServer"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.SaveProfilePhoto(System.String,System.String,System.String)">
            <summary>
            Сохраняет фотографию пользователя после успешной загрузки.
            </summary>
            <param name="server">Параметр, возвращаемый в результате загрузки фотографии на сервер.</param>
            <param name="hash">Параметр, возвращаемый в результате загрузки фотографии на сервер.</param>
            <param name="photo">Параметр, возвращаемый в результате загрузки фотографии на сервер.</param>
            <returns>После успешного выполнения возвращает объект, содержащий поля photo_hash и photo_src (при работе через VK.api метод вернёт поля photo_src, photo_src_big, photo_src_small). Параметр photo_hash необходим для подтверждения пользователем изменения его фотографии через вызов метода saveProfilePhoto Javascript API. Поле photo_src содержит путь к загруженной фотографии. </returns>
            <remarks>
            Страница документации ВКонтакте <seealso cref="!:https://vk.com/dev/photos.saveProfilePhoto"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.CreateAlbum(VkNet.Model.RequestParams.PhotoCreateAlbumParams)">
            <summary>
            Создает пустой альбом для фотографий.
            </summary>
            <param name="params">Параметры запроса.</param>
            <returns>
            После успешного выполнения возвращает объект <see cref="T:VkNet.Model.PhotoAlbum" />
            </returns>
            <remarks>
            Страница документации ВКонтакте <seealso cref="!:https://vk.com/dev/photos.createAlbum" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.EditAlbum(VkNet.Model.RequestParams.PhotoEditAlbumParams)">
            <summary>
            Редактирует данные альбома для фотографий пользователя.
            </summary>
            <param name="params">Параметры запроса.</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <seealso cref="!:https://vk.com/dev/photos.editAlbum" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.GetAlbums(System.Int32@,VkNet.Model.RequestParams.PhotoGetAlbumsParams)">
            <summary>
            Возвращает список альбомов пользователя или сообщества.
            </summary>
            <param name="count">Количество альбомов.</param>
            <param name="params">Параметры запроса.</param>
            <returns>
            Возвращает список объектов <see cref="T:VkNet.Model.PhotoAlbum" />
            </returns>
            <remarks>
            Страница документации ВКонтакте <seealso cref="!:https://vk.com/dev/photos.getAlbums" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.Get(System.Int32@,VkNet.Model.RequestParams.PhotoGetParams)">
            <summary>
            Возвращает список фотографий в альбоме.
            </summary>
            <param name="count">Количество альбомов.</param>
            <param name="params">Параметры запроса.</param>
            <returns>После успешного выполнения возвращает список объектов <see cref="T:VkNet.Model.Attachments.Photo"/>.</returns>
            <remarks>
            Страница документации ВКонтакте <seealso cref="!:https://vk.com/dev/photos.get"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.GetAlbumsCount(System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Возвращает количество доступных альбомов пользователя или сообщества.
            </summary>
            <param name="userId">Идентификатор пользователя, количество альбомов которого необходимо получить. целое число, по умолчанию идентификатор текущего пользователя (Целое число, по умолчанию идентификатор текущего пользователя).</param>
            <param name="groupId">Идентификатор сообщества, количество альбомов которого необходимо получить. целое число (Целое число).</param>
            <returns>
            После успешного выполнения возвращает количество альбомов  с учетом настроек приватности.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/photos.getAlbumsCount" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.GetById(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Возвращает информацию о фотографиях по их идентификаторам.
            </summary>
            <param name="photos">Перечисленные через запятую идентификаторы, которые представляют собой идущие через знак подчеркивания id пользователей, разместивших фотографии, и id самих фотографий. Чтобы получить информацию о фотографии в альбоме группы, вместо id пользователя следует указать -id группы.
            Пример значения photos: 1_129207899,6492_135055734, 
            -20629724_271945303 
            Некоторые фотографии, идентификаторы которых могут быть получены через API, закрыты приватностью, и не будут получены. В этом случае следует использовать ключ доступа фотографии (access_key) в её идентификаторе. Пример значения photos: 1_129207899_220df2876123d3542f, 6492_135055734_e0a9bcc31144f67fbd 
            Поле access_key будет возвращено вместе с остальными данными фотографии в методах, которые возвращают фотографии, закрытые приватностью но доступные в данном контексте. Например данное поле имеют фотографии, возвращаемые методом newsfeed.get. список строк, разделенных через запятую, обязательный параметр (Список строк, разделенных через запятую, обязательный параметр).</param>
            <param name="extended">1 — будут возвращены дополнительные поля likes, comments, tags, can_comment, can_repost. Поля comments и tags содержат только количество объектов. По умолчанию данные поля не возвращается. флаг, может принимать значения 1 или 0 (Флаг, может принимать значения 1 или 0).</param>
            <param name="photoSizes">Возвращать ли доступные размеры фотографии в специальном формате. флаг, может принимать значения 1 или 0 (Флаг, может принимать значения 1 или 0).</param>
            <returns>
            После успешного выполнения возвращает массив объектов photo. 
            Если к фотографии прикреплено местоположение, также возвращаются поля lat и long, содержащие географические координаты отметки. 
            Если был задан параметр extended=1, возвращаются дополнительные поля: 
            
            likes — количество отметок Мне нравится и информация о том, поставил ли лайк текущий пользователь; 
            comments — количество комментариев к фотографии; 
            tags — количество отметок на фотографии; 
            can_comment — может ли текущий пользователь комментировать фото (1 — может, 0 — не может); 
            can_repost — может ли текущий пользователь сделать репост фотографии (1 — может, 0 — не может). 
            
            Если был задан параметр photo_sizes, вместо полей width и height возвращаются размеры копий фотографии в специальном формате.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/photos.getById" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.GetUploadServer(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Возвращает адрес сервера для загрузки фотографий.
            </summary>
            <param name="albumId">Идентификатор альбома. целое число (Целое число).</param>
            <param name="groupId">Идентификатор сообщества, которому принадлежит альбом (если необходимо загрузить фотографию в альбом сообщества). целое число (Целое число).</param>
            <returns>После успешного выполнения возвращает объект <see cref="T:VkNet.Model.UploadServerInfo"/></returns>
            <remarks>
            Страница документации ВКонтакте <seealso cref="!:https://vk.com/dev/photos.getUploadServer"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.GetOwnerPhotoUploadServer(System.Nullable{System.Int64})">
            <summary>
            Возвращает адрес сервера для загрузки главной фотографии на страницу пользователя или сообщества.
            </summary>
            <param name="ownerId">Идентификатор сообщества или текущего пользователя. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор текущего пользователя (Целое число, по умолчанию идентификатор текущего пользователя).</param>
            <returns>
            После успешного выполнения возвращает объект с единственным полем upload_url.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/photos.getOwnerPhotoUploadServer" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.GetChatUploadServer(System.UInt64,System.Nullable{System.UInt64},System.Nullable{System.UInt64},System.Nullable{System.UInt64})">
            <summary>
            Позволяет получить адрес для загрузки фотографий мультидиалогов.
            </summary>
            <param name="chatId">Идентификатор беседы, для которой нужно загрузить фотографию. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <param name="cropX">Координата x для обрезки фотографии. положительное число (Положительное число).</param>
            <param name="cropY">Координата y для обрезки фотографии. положительное число (Положительное число).</param>
            <param name="cropWidth">Ширина фотографии после обрезки в px. положительное число, минимальное значение 200 (Положительное число, минимальное значение 200).</param>
            <returns>
            После успешного выполнения возвращает объект с единственным полем upload_url.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/photos.getChatUploadServer" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.SaveOwnerPhoto(System.String)">
            <summary>
            Позволяет сохранить главную фотографию пользователя или сообщества.
            </summary>
            <param name="response">Параметр, возвращаемый в результате загрузки фотографии на сервер.</param>
            <returns>
            После успешного выполнения возвращает объект, содержащий поля photo_hash и photo_src (при работе через VK.api метод вернёт поля photo_src, photo_src_big, photo_src_small). Параметр photo_hash необходим для подтверждения пользователем изменения его фотографии через вызов метода saveProfilePhoto Javascript API. Поле photo_src содержит путь к загруженной фотографии.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/photos.saveOwnerPhoto" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.SaveWallPhoto(System.String,System.Nullable{System.UInt64},System.Nullable{System.UInt64})">
            <summary>
            Сохраняет фотографии после успешной загрузки на URI, полученный методом photos.getWallUploadServer.
            </summary>
            <param name="userId">Идентификатор пользователя, на стену которого нужно сохранить фотографию</param>
            <param name="groupId">Идентификатор сообщества, на стену которого нужно сохранить фотографию</param>
            <param name="response">Параметр, возвращаемый в результате загрузки фотографии на сервер</param>
            <returns>
            После успешного выполнения возвращает массив, содержащий объект с загруженной фотографией.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/photos.saveWallPhoto" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.GetWallUploadServer(System.Nullable{System.Int64})">
            <summary>
            Возвращает адрес сервера для загрузки фотографии на стену пользователя или сообщества.
            </summary>
            <param name="groupId">Идентификатор сообщества, на стену которого нужно загрузить фото (без знака «минус»). целое число (Целое число).</param>
            <returns>
            После успешного выполнения возвращает объект с полями upload_url, album_id, user_id.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/photos.getWallUploadServer" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.GetMessagesUploadServer">
            <summary>
            Возвращает адрес сервера для загрузки фотографии в личное сообщение пользователю.
            </summary>
            <returns>После успешного выполнения возвращает объект <see cref="T:VkNet.Model.UploadServerInfo"/>.</returns>
            <remarks>
            Страница документации ВКонтакте <seealso cref="!:https://vk.com/dev/photos.getMessagesUploadServer"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.SaveMessagesPhoto(System.String)">
            <summary>
            Сохраняет фотографию после успешной загрузки на URI, полученный методом <see cref="M:VkNet.Categories.PhotoCategory.GetMessagesUploadServer"/>.
            </summary>
            <param name="response">Параметр, возвращаемый в результате загрузки фотографии на сервер</param>
            <returns>После успешного выполнения возвращает массив с загруженной фотографией, возвращённый объект имеет поля id, pid, aid, owner_id, src, src_big, src_small, created. В случае наличия фотографий в высоком разрешении также будут возвращены адреса с названиями src_xbig и src_xxbig. </returns>
            <remarks>
            Страница документации ВКонтакте <seealso cref="!:https://vk.com/dev/photos.saveMessagesPhoto"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.Report(System.Int64,System.UInt64,VkNet.Enums.ReportReason)">
            <summary>
            Позволяет пожаловаться на фотографию.
            </summary>
            <param name="ownerId">Идентификатор пользователя или сообщества, которому принадлежит фотография. целое число, обязательный параметр (Целое число, обязательный параметр).</param>
            <param name="photoId">Идентификатор фотографии. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <param name="reason">Причина жалобы: 
            
            0 — спам; 
            1 — детская порнография; 
            2 — экстремизм; 
            3 — насилие; 
            4 — пропаганда наркотиков; 
            5 — материал для взрослых; 
            6 — оскорбление. 
            положительное число (Положительное число).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/photos.report" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.ReportComment(System.Int64,System.UInt64,VkNet.Enums.ReportReason)">
            <summary>
            Позволяет пожаловаться на комментарий к фотографии.
            </summary>
            <param name="ownerId">Идентификатор владельца фотографии к которой оставлен комментарий. целое число, обязательный параметр (Целое число, обязательный параметр).</param>
            <param name="commentId">Идентификатор комментария. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <param name="reason">Причина жалобы: 
            
            0 — спам; 
            1 — детская порнография; 
            2 — экстремизм; 
            3 — насилие; 
            4 — пропаганда наркотиков; 
            5 — материал для взрослых; 
            6 — оскорбление. 
            положительное число (Положительное число).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/photos.reportComment" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.Search(System.Int32@,VkNet.Model.RequestParams.PhotoSearchParams)">
            <summary>
            Осуществляет поиск изображений по местоположению или описанию.
            </summary>
            <param name="count">Количество альбомов.</param>
            <param name="params">Параметры запроса.</param>
            <returns>
            После успешного выполнения возвращает список объектов фотографий.
            </returns>
            <remarks>
            Страница документации ВКонтакте <seealso cref="!:http://vk.com/dev/photos.search" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.Save(VkNet.Model.RequestParams.PhotoSaveParams)">
            <summary>
            Сохраняет фотографии после успешной загрузки.
            </summary>
            <param name="params">Параметры запроса.</param>
            <returns>
            После успешного выполнения возвращает список объектов <see cref="T:VkNet.Model.Attachments.Photo" />.
            </returns>
            <remarks>
            Страница документации ВКонтакте <seealso cref="!:https://vk.com/dev/photos.save" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.Copy(System.Int64,System.UInt64,System.String)">
            <summary>
            Позволяет скопировать фотографию в альбом "Сохраненные фотографии".
            </summary>
            <param name="ownerId">Идентификатор владельца фотографии целое число, обязательный параметр (Целое число, обязательный параметр).</param>
            <param name="photoId">Индентификатор фотографии положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <param name="accessKey">Специальный код доступа для приватных фотографий строка (Строка).</param>
            <returns>
            Возвращает идентификатор созданной фотографии.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/photos.copy" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.Edit(VkNet.Model.RequestParams.PhotoEditParams)">
            <summary>
            Изменяет описание у выбранной фотографии.
            </summary>
            <param name="params">Входные параметры выборки.</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/photos.edit" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.Move(System.Int64,System.UInt64,System.Nullable{System.Int64})">
            <summary>
            Переносит фотографию из одного альбома в другой.
            </summary>
            <param name="ownerId">Идентификатор пользователя или сообщества, которому принадлежит фотография. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор текущего пользователя (Целое число, по умолчанию идентификатор текущего пользователя).</param>
            <param name="targetAlbumId">Идентификатор альбома, в который нужно переместить фотографию. целое число, обязательный параметр (Целое число, обязательный параметр).</param>
            <param name="photoId">Идентификатор фотографии, которую нужно перенести. целое число, обязательный параметр (Целое число, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/photos.move" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.MakeCover(System.UInt64,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Делает фотографию обложкой альбома.
            </summary>
            <param name="ownerId">Идентификатор пользователя или сообщества, которому принадлежит фотография. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор текущего пользователя (Целое число, по умолчанию идентификатор текущего пользователя).</param>
            <param name="photoId">Идентификатор фотографии. Фотография должна находиться в альбоме album_id. целое число, обязательный параметр (Целое число, обязательный параметр).</param>
            <param name="albumId">Идентификатор альбома. целое число (Целое число).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/photos.makeCover" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.ReorderAlbums(System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Меняет порядок альбома в списке альбомов пользователя.
            </summary>
            <param name="ownerId">Идентификатор пользователя или сообщества, которому принадлежит альбом. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор текущего пользователя (Целое число, по умолчанию идентификатор текущего пользователя).</param>
            <param name="albumId">Идентификатор альбома. целое число, обязательный параметр (Целое число, обязательный параметр).</param>
            <param name="before">Идентификатор альбома, перед которым следует поместить альбом. целое число (Целое число).</param>
            <param name="after">Идентификатор альбома, после которого следует поместить альбом. целое число (Целое число).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/photos.reorderAlbums" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.ReorderPhotos(System.UInt64,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Меняет порядок фотографии в списке фотографий альбома пользователя.
            </summary>
            <param name="ownerId">Идентификатор пользователя или сообщества, которому принадлежит фотография. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор текущего пользователя (Целое число, по умолчанию идентификатор текущего пользователя).</param>
            <param name="photoId">Идентификатор фотографии. целое число, обязательный параметр (Целое число, обязательный параметр).</param>
            <param name="before">Идентификатор фотографии, перед которой следует поместить фотографию. Если параметр не указан, фотография будет помещена последней. целое число (Целое число).</param>
            <param name="after">Идентификатор фотографии, после которой следует поместить фотографию. Если параметр не указан, фотография будет помещена первой. целое число (Целое число).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/photos.reorderPhotos" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.GetAll(System.Int32@,VkNet.Model.RequestParams.PhotoGetAllParams)">
            <summary>
            Возвращает все фотографии пользователя или сообщества в антихронологическом порядке.
            </summary>
            <param name="count">Количество пользователей, которым нравится текущая фотография.</param>
            <param name="params">Параметры запроса.</param>
            <returns>
            После успешного выполнения возвращает список объектов <see cref="T:VkNet.Model.Attachments.Photo" />.
            <remarks>
            Если был задан параметр extended — будет возвращено поле likes:
            user_likes: 1 — текущему пользователю нравится данная фотография, 0 - не указано.
            count — количество пользователей, которым нравится текущая фотография.
            Если был задан параметр photo_sizes=1, вместо полей width и height возвращаются размеры копий фотографии в специальном формате.
            </remarks>
            </returns>
            <remarks>
            Страница документации ВКонтакте <seealso cref="!:https://vk.com/dev/photos.getAll" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.GetUserPhotos(System.Int32@,VkNet.Model.RequestParams.PhotoGetUserPhotosParams)">
            <summary>
            Возвращает список фотографий, на которых отмечен пользователь.
            </summary>
            <param name="count">Количество.</param>
            <param name="params">Параметры запроса.</param>
            <returns>После успешного выполнения возвращает список объектов photo.</returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/photos.getUserPhotos" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.DeleteAlbum(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Удаляет указанный альбом для фотографий у текущего пользователя.
            </summary>
            <param name="albumId">Идентификатор альбома. целое число, положительное число, обязательный параметр (Целое число, положительное число, обязательный параметр).</param>
            <param name="groupId">Идентификатор сообщества, в котором размещен альбом. целое число, положительное число (Целое число, положительное число).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/photos.deleteAlbum" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.Delete(System.UInt64,System.Nullable{System.Int64})">
            <summary>
            Удаление фотографии на сайте.
            </summary>
            <param name="ownerId">Идентификатор пользователя или сообщества, которому принадлежит фотография. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор текущего пользователя (Целое число, по умолчанию идентификатор текущего пользователя).</param>
            <param name="photoId">Идентификатор фотографии. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/photos.delete" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.Restore(System.UInt64,System.Nullable{System.Int64})">
            <summary>
            Восстанавливает удаленную фотографию.
            </summary>
            <param name="ownerId">Идентификатор пользователя или сообщества, которому принадлежит фотография. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор текущего пользователя (Целое число, по умолчанию идентификатор текущего пользователя).</param>
            <param name="photoId">Идентификатор фотографии. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/photos.restore" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.ConfirmTag(System.UInt64,System.UInt64,System.Nullable{System.Int64})">
            <summary>
            Подтверждает отметку на фотографии.
            </summary>
            <param name="ownerId">Идентификатор пользователя или сообщества, которому принадлежит фотография. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор текущего пользователя (Целое число, по умолчанию идентификатор текущего пользователя).</param>
            <param name="photoId">Идентификатор фотографии. обязательный параметр (Обязательный параметр).</param>
            <param name="tagId">Идентификатор отметки на фотографии. целое число, обязательный параметр (Целое число, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/photos.confirmTag" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.GetComments(System.Int32@,VkNet.Model.RequestParams.PhotoGetCommentsParams)">
            <summary>
            Возвращает список комментариев к фотографии.
            </summary>
            <param name="count">Количество.</param>
            <param name="params">Параметры запроса.</param>
            <returns>
            После успешного выполнения возвращает список объектов <see cref="T:VkNet.Model.Comment" />.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/photos.getComments" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.GetAllComments(System.Int32@,VkNet.Model.RequestParams.PhotoGetAllCommentsParams)">
            <summary>
            Возвращает отсортированный в антихронологическом порядке список всех комментариев к конкретному альбому или ко всем альбомам пользователя.
            </summary>
            <param name="count">Количество комментариев</param>
            <param name="params">Параметры запроса.</param>
            <returns>
            После успешного выполнения возвращает список объектов <see cref="T:VkNet.Model.Comment" />.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/photos.getAllComments" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.CreateComment(VkNet.Model.RequestParams.PhotoCreateCommentParams)">
            <summary>
            Создает новый комментарий к фотографии.
            </summary>
            <param name="params">Входные параметры выборки.</param>
            <returns>
            После успешного выполнения возвращает идентификатор созданного комментария.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/photos.createComment" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.DeleteComment(System.UInt64,System.Nullable{System.Int64})">
            <summary>
            Удаляет комментарий к фотографии.
            </summary>
            <param name="ownerId">Идентификатор пользователя или сообщества, которому принадлежит фотография. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор текущего пользователя (Целое число, по умолчанию идентификатор текущего пользователя).</param>
            <param name="commentId">Идентификатор комментария. целое число, обязательный параметр (Целое число, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c> (0, если комментарий не найден).
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/photos.deleteComment" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.RestoreComment(System.UInt64,System.Nullable{System.Int64})">
            <summary>
            Восстанавливает удаленный комментарий к фотографии.
            </summary>
            <param name="ownerId">Идентификатор пользователя или сообщества, которому принадлежит фотография. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор текущего пользователя (Целое число, по умолчанию идентификатор текущего пользователя).</param>
            <param name="commentId">Идентификатор удаленного комментария. целое число, обязательный параметр (Целое число, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c> (0, если комментарий с таким идентификатором не является удаленным).
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/photos.restoreComment" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.EditComment(System.UInt64,System.String,System.Nullable{System.Int64},System.Collections.Generic.IEnumerable{VkNet.Model.Attachments.MediaAttachment})">
            <summary>
            Изменяет текст комментария к фотографии.
            </summary>
            <param name="ownerId">Идентификатор пользователя или сообщества, которому принадлежит фотография. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)</param>
            <param name="commentId">Идентификатор комментария</param>
            <param name="message">Новый текст комментария (является обязательным, если не задан параметр attachments)</param>
            <param name="attachments">Новый список объектов, приложенных к комментарию и разделённых символом ",". Поле attachments представляется в формате: &lt;type&gt;&lt;owner_id&gt;_&lt;media_id&gt;,&lt;type&gt;&lt;owner_id&gt;_&lt;media_id&gt; &lt;type&gt; — тип медиа-вложения:
            photo — фотография
            video — видеозапись
            audio — аудиозапись
            doc — документ
            &lt;owner_id&gt; — идентификатор владельца медиа-вложения
            &lt;media_id&gt; — идентификатор медиа-вложения.
            <example>
            Например:
            photo100172_166443618,photo66748_265827614
            </example>
            Параметр является обязательным, если не задан параметр message. список строк, разделенных через запятую</param>
            <returns>После успешного выполнения возвращает true.</returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/photos.editComment" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.GetTags(System.UInt64,System.Nullable{System.Int64},System.String)">
            <summary>
            Возвращает список отметок на фотографии.
            </summary>
            <param name="ownerId">Идентификатор пользователя или сообщества, которому принадлежит фотография. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор текущего пользователя (Целое число, по умолчанию идентификатор текущего пользователя).</param>
            <param name="photoId">Идентификатор фотографии. целое число, обязательный параметр (Целое число, обязательный параметр).</param>
            <param name="accessKey">Строковой ключ доступа, который може быть получен при получении объекта фотографии. строка (Строка).</param>
            <returns>
            После успешного выполнения возвращает массив объектов tag, каждый из которых содержит следующие поля: 
            
            user_id — идентификатор пользователя, которому соответствует отметка; 
            id — идентификатор отметки; 
            placer_id — идентификатор пользователя, сделавшего отметку; 
            tagged_name — название отметки; 
            date — дата добавления отметки в формате unixtime; 
            x, y, x2, y2 — координаты прямоугольной области, на которой сделана отметка (верхний левый угол и нижний правый угол) в процентах; 
            viewed — статус отметки (1 — подтвержденная, 0 — неподтвержденная).
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/photos.getTags" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.PutTag(VkNet.Model.RequestParams.PhotoPutTagParams)">
            <summary>
            Добавляет отметку на фотографию.
            </summary>
            <param name="params">Параметры запроса.</param>
            <returns>
            После успешного выполнения возвращает идентификатор созданной отметки (tag id).
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/photos.putTag" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.RemoveTag(System.UInt64,System.UInt64,System.Nullable{System.Int64})">
            <summary>
            Удаляет отметку с фотографии.
            </summary>
            <param name="ownerId">Идентификатор пользователя или сообщества, которому принадлежит фотография. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор текущего пользователя (Целое число, по умолчанию идентификатор текущего пользователя).</param>
            <param name="photoId">Идентификатор фотографии. целое число, обязательный параметр (Целое число, обязательный параметр).</param>
            <param name="tagId">Идентификатор отметки. целое число, обязательный параметр (Целое число, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/photos.removeTag" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.GetNewTags(System.Int32@,System.Nullable{System.UInt32},System.Nullable{System.UInt32})">
            <summary>
            Возвращает список фотографий, на которых есть непросмотренные отметки.
            </summary>
            <param name="countTotal">Общее количество.</param>
            <param name="offset">Смещение, необходимое для получения определённого подмножества фотографий. целое число (Целое число).</param>
            <param name="count">Количество фотографий, которые необходимо вернуть. положительное число, максимальное значение 100, по умолчанию 20 (Положительное число, максимальное значение 100, по умолчанию 20).</param>
            <returns>
            После успешного выполнения возвращает список объектов <see cref="T:VkNet.Model.Attachments.Photo" />.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/photos.getNewTags" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.GetMarketUploadServer(System.Int64,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Возвращает адрес сервера для загрузки фотографии товаров сообщества.
            </summary>
            <param name="groupId">Идентификатор сообщества, для которого необходимо загрузить фотографию товара. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <param name="mainPhoto">Является ли фотография обложкой товара  (1 — фотография для обложки, 0 — дополнительная фотография) флаг, может принимать значения 1 или 0 (Флаг, может принимать значения 1 или 0).</param>
            <param name="cropX">Координата x для обрезки фотографии. положительное число (Положительное число).</param>
            <param name="cropY">Координата y для обрезки фотографии. положительное число (Положительное число).</param>
            <param name="cropWidth">Ширина фотографии после обрезки в px. положительное число, минимальное значение 200 (Положительное число, минимальное значение 200).</param>
            <returns>
            После успешного выполнения возвращает объект с единственным полем upload_url.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/photos.getMarketUploadServer" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.GetMarketAlbumUploadServer(System.Int64)">
            <summary>
            Возвращает адрес сервера для загрузки фотографии подборки товаров в сообществе.
            </summary>
            <param name="groupId">Идентификатор сообщества, для которого необходимо загрузить фотографию подборки товаров. целое число (Целое число).</param>
            <returns>
            .
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/photos.getMarketAlbumUploadServer" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.SaveMarketPhoto(System.Int64,System.String)">
            <summary>
            Сохраняет фотографии после успешной загрузки на URI, полученный методом photos.getMarketUploadServer.
            </summary>
            <param name="groupId">Идентификатор группы, для которой нужно загрузить фотографию. положительное число (положительное число).</param>
            <param name="response">Параметр, возвращаемый в результате загрузки фотографии на сервер. строка, обязательный параметр (строка, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает массив, содержащий объект с загруженной фотографией.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/photos.saveMarketPhoto" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.PhotoCategory.SaveMarketAlbumPhoto(System.Int64,System.String)">
            <summary>
            Сохраняет фотографии после успешной загрузки на URI, полученный методом photos.getMarketAlbumUploadServer.
            </summary>
            <param name="groupId">Идентификатор группы, для которой нужно загрузить фотографию. положительное число, обязательный параметр (положительное число, обязательный параметр).</param>
            <param name="response">Параметр, возвращаемый в результате загрузки фотографии на сервер. строка, обязательный параметр (строка, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает массив, содержащий объект с загруженной фотографией.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/photos.saveMarketAlbumPhoto" />.
            </remarks>
        </member>
        <member name="T:VkNet.Categories.StatusCategory">
            <summary>
            Методы для работы со статусом пользователя или сообщества.
            </summary>
            <summary>
            Методы для работы со статусом пользователя или сообщества.
            </summary>
        </member>
        <member name="M:VkNet.Categories.StatusCategory.Set(VkNet.Model.Attachments.Audio)">
            <summary>
            Устанавливает новый аудиозапись текущему пользователю. 
            </summary>
            <param name="audio">
            Текущая аудиозапись, которую необходимо транслировать в статус, задается в формате oid_aid (
            идентификатор владельца и идентификатор аудиозаписи, разделенные знаком подчеркивания). 
            Для успешной трансляции необходимо, чтобы она была включена пользователем, в противном случае будет возвращена 
            ошибка 221 ("User disabled track name broadcast"). При указании параметра audio параметр text игнорируется.
            </param>
            <returns>Возвращает true, если статус был успешно установлен, false в противном случае.</returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Status"/>. 
            Страница документации ВКонтакте <see href="http://vk.com/dev/status.set"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.StatusCategory.Get(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Получает статус пользователя или сообщества.
            </summary>
            <param name="userId">Идентификатор пользователя или сообщества, информацию о статусе которого нужно получить.</param>
            <param name="groupId">Идентификатор сообщества, статус которого необходимо получить. положительное число (Положительное число).</param>
            <returns>
            В случае успеха возвращается статус пользователдя или сообщества.
            </returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Status"/>. 
            Страница документации ВКонтакте <see href="http://vk.com/dev/status.get"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.StatusCategory.Set(System.String,System.Nullable{System.Int64})">
            <summary>
            Устанавливает новый статус текущему пользователю. 
            </summary>
            <param name="text">
            Текст статуса, который необходимо установить текущему пользователю. Если параметр 
            равен пустой строке, то статус текущего пользователя будет очищен.
            </param>
            <param name="groupId"> Идентификатор сообщества, в котором будет установлен статус. По умолчанию статус устанавливается текущему пользователю. </param>
            <returns>Возвращает true, если статус был успешно установлен, false в противном случае.</returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Status"/>. 
            Страница документации ВКонтакте <see href="http://vk.com/dev/status.set"/>.
            </remarks>
        </member>
        <member name="T:VkNet.Categories.UsersCategory">
            <summary>
            Методы для работы с информацией о пользователях.
            </summary>
            <summary>
            Методы для работы с информацией о пользователях.
            </summary>
        </member>
        <member name="M:VkNet.Categories.UsersCategory.GetUserSettings(System.Int64)">
             <summary>
             Получает настройки текущего пользователя в данном приложении. .
             </summary>
             <param name="uid">Идентификатор пользователя, информацию о настройках которого необходимо получить.</param>
             <returns>После успешного выполнения возвращает битовую маску настроек текущего пользователя в данном приложении.
            
             Пример:
             Если Вы хотите получить права на Доступ к друзьям и Доступ к статусам пользователя, то Ваша битовая маска будет
             равна: 2 + 1024 = 1026.
             Если, имея битовую маску 1026, Вы хотите проверить, имеет ли она доступ к друзьям — Вы можете сделать 1026 &amp; 2.
             </returns>
             <remarks>
             Страница документации ВКонтакте <see href="http://vk.com/dev/getUserSettings"/>.
             </remarks>
        </member>
        <member name="M:VkNet.Categories.UsersCategory.Search(System.Int32@,VkNet.Model.RequestParams.UserSearchParams)">
            <summary>
            Возвращает список пользователей в соответствии с заданным критерием поиска.
            </summary>
            <param name="itemsCount">Общее количество пользователей, удовлетворяющих условиям запроса.</param>
            <param name="params">Параметры запроса.</param>
            <returns>
            После успешного выполнения возвращает список объектов пользователей, найденных в соответствии с заданными критериями.
            </returns>
            <exception cref="T:System.ArgumentException">Query can not be <c>null</c> or empty.</exception>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/users.search" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.UsersCategory.IsAppUser(System.Nullable{System.Int64})">
            <summary>
            Возвращает информацию о том, установил ли пользователь приложение.
            </summary>
            <param name="userId">Идентификатор пользователя. целое число, по умолчанию идентификатор текущего пользователя (Целое число, по умолчанию идентификатор текущего пользователя).</param>
            <returns>
            После успешного выполнения возвращает 1 в случае, если пользователь установил у себя данное приложение, иначе 0.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/users.isAppUser" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.UsersCategory.Get(System.Int64,VkNet.Enums.Filters.ProfileFields,VkNet.Enums.SafetyEnums.NameCase)">
            <summary>
            Возвращает расширенную информацию о пользователе.
            </summary>
            <param name="userId">Идентификатор пользователя.</param>
            <param name="fields">Поля профиля, которые необходимо возвратить.</param>
            <param name="nameCase">Падеж для склонения имени и фамилии пользователя</param>
            <returns>Объект, содержащий запрошенную информацию о пользователе.</returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/getProfiles"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.UsersCategory.Get(System.Collections.Generic.IEnumerable{System.Int64},VkNet.Enums.Filters.ProfileFields,VkNet.Enums.SafetyEnums.NameCase)">
            <summary>
            Возвращает расширенную информацию о пользователях. Метод не требует авторизацию
            </summary>
            <param name="userIds">Идентификаторы пользователей, о которых необходимо получить информацию.</param>
            <param name="fields">Поля профилей, которые необходимо возвратить.</param>
            <param name="nameCase">Падеж для склонения имени и фамилии пользователя</param>
            <returns>Список объектов с запрошенной информацией о пользователях.</returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/users.get"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.UsersCategory.Get(System.Collections.Generic.IEnumerable{System.String},VkNet.Enums.Filters.ProfileFields,VkNet.Enums.SafetyEnums.NameCase)">
            <summary>
            Возвращает расширенную информацию о пользователях.
            </summary>
            <param name="screenNames">Короткие имена пользователей, о которых необходимо получить информацию.</param>
            <param name="fields">Поля профилей, которые необходимо возвратить.</param>
            <param name="nameCase">Падеж для склонения имени и фамилии пользователя</param>
            <returns>Список объектов с запрошенной информацией о пользователях.</returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/users.get"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.UsersCategory.Get(System.String,VkNet.Enums.Filters.ProfileFields,VkNet.Enums.SafetyEnums.NameCase)">
            <summary>
            Возвращает расширенную информацию о пользователе.
            </summary>
            <param name="screenName">Короткое имя пользователя</param>
            <param name="fields">Поля профилей, которые необходимо возвратить.</param>
            <param name="nameCase">Падеж для склонения имени и фамилии пользователя</param>
            <returns>Объект <see cref="T:VkNet.Model.User"/> с запрошенной информацией о пользователе.</returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/users.get"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.UsersCategory.GetSubscriptions(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32},VkNet.Enums.Filters.GroupsFields)">
            <summary>
            Возвращает список идентификаторов пользователей и групп, которые входят в список подписок пользователя.
            </summary>
            <param name="userId">Идентификатор пользователя, подписки которого необходимо получить</param>
            <param name="count">Количество подписок, которые необходимо вернуть</param>
            <param name="offset">Смещение необходимое для выборки определенного подмножества подписок</param>
            <returns>Пока возвращается только список групп.</returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/users.getSubscriptions"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.UsersCategory.GetFollowers(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32},VkNet.Enums.Filters.ProfileFields,VkNet.Enums.SafetyEnums.NameCase)">
            <summary>
            Возвращает список идентификаторов пользователей, которые являются подписчиками пользователя.
            </summary>
            <param name="userId">Идентификатор пользователя</param>
            <param name="count">Количество подписчиков, информацию о которых нужно получить</param>
            <param name="offset">Смещение, необходимое для выборки определенного подмножества подписчиков</param>
            <param name="fields">Список дополнительных полей, которые необходимо вернуть</param>
            <param name="nameCase">Падеж для склонения имени и фамилии пользователя</param>
            <returns>Список подписчиков</returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/users.getFollowers"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.UsersCategory.Report(System.Int64,VkNet.Enums.SafetyEnums.ReportType,System.String)">
            <summary>
            Позволяет пожаловаться на пользователя.
            </summary>
            <param name="userId">Идентификатор пользователя, на которого осуществляется жалоба</param>
            <param name="type">Тип жалобы</param>
            <param name="comment">Комментарий к жалобе на пользователя</param>
            <returns>В случае успешной жалобы метод вернет true.</returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/users.report"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.UsersCategory.GetNearby(VkNet.Model.RequestParams.UsersGetNearbyParams)">
            <summary>
            Индексирует текущее местоположение пользователя и возвращает список пользователей, которые находятся вблизи.
            </summary>
            <param name="params">Входные параметры выборки.</param>
            <returns>
            После успешного выполнения возвращает список объектов user.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/users.getNearby" />.
            </remarks>
        </member>
        <member name="T:VkNet.Categories.VideoCategory">
            <summary>
            Методы для работы с видеофайлами.
            </summary>
            <summary>
            Методы для работы с видеофайлами.
            </summary>
        </member>
        <member name="M:VkNet.Categories.VideoCategory.Get(System.Nullable{System.Int64},System.Nullable{System.Int64},VkNet.Enums.VideoWidth,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Возвращает информацию о видеозаписях.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежат видеозаписи.
            Обратите внимание, идентификатор сообщества в параметре <paramref name="ownerId"/> необходимо указывать со знаком "-" — например,
            <paramref name="ownerId"/>=-1 соответствует идентификатору сообщества ВКонтакте API (club1).
            </param>
            <param name="albumId">Идентификатор альбома, видеозаписи из которого нужно вернуть.</param>
            <param name="width">Требуемая ширина изображений видеозаписей в пикселах.</param>
            <param name="count">Количество возвращаемых видеозаписей.</param>
            <param name="offset">Смещение относительно первой найденной видеозаписи для выборки определенного подмножества.</param>
            <param name="extended">Определяет, возвращать ли информацию о настройках приватности видео для текущего пользователя.</param>
            <returns>После успешного выполнения возвращает список объектов видеозаписей с дополнительным полем comments, содержащим число комментариев у
            видеозаписи. Если был задан параметр <paramref name="extended"/>, то для каждой видеозаписи возвращаются дополнительные поля:
            <see cref="P:VkNet.Model.Attachments.Video.CanComment"/>, <see cref="P:VkNet.Model.Attachments.Video.CanRepost"/>, <see cref="P:VkNet.Model.Attachments.Video.Likes"/></returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Video"/>.
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.get"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.VideoCategory.Edit(System.Int64,System.Nullable{System.Int64},System.String,System.String,System.Collections.Generic.IEnumerable{VkNet.Enums.SafetyEnums.Privacy},System.Collections.Generic.IEnumerable{VkNet.Enums.SafetyEnums.Privacy},System.Boolean)">
            <summary>
            Редактирует данные видеозаписи на странице пользователя.
            </summary>
            <param name="videoId">Идентификатор видеозаписи.</param>
            <param name="ownerId">Идентификатор пользователя или сообщества, которому принадлежит видеозапись.
            Обратите внимание, идентификатор сообщества в параметре <paramref name="ownerId"/> необходимо указывать со знаком "-" — например,
            <paramref name="ownerId"/>=-1 соответствует идентификатору сообщества ВКонтакте API (club1).
            </param>
            <param name="name">Новое название для видеозаписи.</param>
            <param name="description">Новое описание для видеозаписи.</param>
            <param name="privacyView">Настройки приватности для просмотра.
            Могут принимать следующие значения:
            <list type="number">
                <item>
                    Простые значения приватности:
                    <list type="bullet">
                        <item>0 – все пользователи</item>
                        <item>1 – только друзья</item>
                        <item>2 – друзья и друзья друзей</item>
                        <item>3 - только я</item>
                    </list>
                </item>
                <item>
                    Для того, чтобы разрешить доступ только определённым друзьям необходимо указать значение параметра в соответствующем формате:
            users: friendId, friendId, ..
                </item>
                <item>
                    Для того, чтобы разрешить доступ только определённым спискам друзей необходимо указать значение параметра в соответствующем формате:
            lists: listId, flistId, .. Списки друзей Вы можете получить используя метод <see cref="M:VkNet.Categories.FriendsCategory.GetLists(System.Nullable{System.Int64},System.Nullable{System.Boolean})"/>.
            </item>
            </list>
            </param>
            <param name="privacyComment">Настройки приватности для добавления комментариев  видео.
            Формат задания тот же, что и для <paramref name="privacyView"/>.
            </param>
            <param name="isRepeat">Зацикливание воспроизведения видеозаписи.</param>
            <returns>После успешного выполнения возвращает true.</returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Video"/>.
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.edit"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.VideoCategory.Save(System.String,System.String,System.Boolean,System.Boolean,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Boolean)">
            <summary>
            Возвращает адрес сервера (необходимый для загрузки) и данные видеозаписи.
            </summary>
            <param name="name">Название видеофайла.</param>
            <param name="description">Описание видеофайла.</param>
            <param name="isPrivate">Указывается true в случае последующей отправки видеозаписи личным сообщением. После загрузки с этим
            параметром видеозапись не будет отображаться в списке видеозаписей пользователя и не будет доступна другим пользователям
            по id.</param>
            <param name="isPostToWall">Требуется ли после сохранения опубликовать запись с видео на стене.</param>
            <param name="link">Url для встраивания видео с внешнего сайта, например, с youtube. В этом случае нужно вызвать полученный
            <see cref="P:VkNet.Model.Attachments.Video.UploadUrl"/>, не прикрепляя файл, достаточно просто обратиться по этому адресу.</param>
            <param name="groupId">Идентификатор сообщества, в которое будет сохранен видеофайл. По умолчанию файл сохраняется на страницу
            текущего пользователя.</param>
            <param name="albumId">Идентификатор альбома, в который будет загружен видео файл.</param>
            <param name="isRepeat">Зацикливание воспроизведения видеозаписи.</param>
            <returns>Возвращает объект видеозаписи, который имеет поля <see cref="P:VkNet.Model.Attachments.Video.UploadUrl"/>, <see cref="P:VkNet.Model.Attachments.MediaAttachment.Id"/>,
            <see cref="P:VkNet.Model.Attachments.Video.Title"/>, <see cref="P:VkNet.Model.Attachments.Video.Description"/> и <see cref="P:VkNet.Model.Attachments.MediaAttachment.OwnerId"/>.</returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Video"/>.
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.save"/>.
            Метод может быть вызван не более 5000 раз в сутки для одного сервиса.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.VideoCategory.Search(System.String,VkNet.Enums.VideoSort,System.Boolean,System.Boolean,VkNet.Enums.Filters.VideoFilters,System.Boolean,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает список видеозаписей в соответствии с заданным критерием поиска.
            </summary>
            <param name="query">Строка поискового запроса.</param>
            <param name="sort">Вид сортировки.</param>
            <param name="isHd">Если true, то поиск производится только по видеозаписям высокого качества.</param>
            <param name="isAdult">Фильтр «Безопасный поиск».</param>
            <param name="filters">Список критериев, по которым требуется отфильтровать видео.</param>
            <param name="isSearchOwn">Искать по видеозаписям пользователя.</param>
            <param name="count">
            Количество возвращаемых видеозаписей.
            Обратите внимание — даже при использовании параметра <paramref name="offset"/> для получения информации доступны только первые 1000 результатов.
            </param>
            <param name="offset">Смещение относительно первой найденной видеозаписи для выборки определенного подмножества.</param>
            <returns>После успешного выполнения возвращает список объектов видеозаписей.</returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Video"/>.
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.search"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.VideoCategory.MoveToAlbum(System.Collections.Generic.IEnumerable{System.Int64},System.Int64,System.Nullable{System.Int64})">
            <summary>
            Перемещает видеозаписи в альбом.
            </summary>
            <param name="videoIds">Список идентификаторов видеороликов.</param>
            <param name="albumId">Идентификатор альбома, в который перемещаются видеозаписи.</param>
            <param name="groupId">Идентификатор сообщества, которому принадлежат видеозаписи. Если параметр не указан, то работа
            ведется с альбомом текущего пользователя.</param>
            <returns>После успешного выполнения возвращает true.</returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Video"/>.
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.moveToAlbum"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.VideoCategory.GetComments(System.Int64,System.Nullable{System.Int64},System.Boolean,System.Nullable{System.Int32},System.Nullable{System.Int32},VkNet.Enums.SafetyEnums.CommentsSort)">
            <summary>
            Возвращает список комментариев к видеозаписи.
            </summary>
            <param name="videoId">Идентификатор видеозаписи.</param>
            <param name="ownerId">Идентификатор пользователя или сообщества, которому принадлежит видеозапись.
            Обратите внимание, идентификатор сообщества в параметре <paramref name="ownerId"/> необходимо указывать со знаком "-" — например,
            <paramref name="ownerId"/>=-1 соответствует идентификатору сообщества ВКонтакте API (club1).
            </param>
            <param name="needLikes">true — будет возвращено дополнительное поле <see cref="P:VkNet.Model.Comment.Likes"/>. По умолчанию поле <see cref="P:VkNet.Model.Comment.Likes"/>
            не возвращается.</param>
            <param name="count">Количество комментариев, информацию о которых необходимо вернуть.
            (по умолчанию 20, максимальное значение 100).
            </param>
            <param name="offset">Смещение, необходимое для выборки определенного подмножества комментариев.</param>
            <param name="sort">Порядок сортировки комментариев.</param>
            <returns>После успешного выполнения возвращает общее количество комментариев и массив объектов <see cref="T:VkNet.Model.Comment"/>.</returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Video"/>.
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.getComments"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.VideoCategory.CreateComment(System.Int64,System.String,System.Nullable{System.Int64},System.Boolean)">
            <summary>
            Cоздает новый комментарий к видеозаписи.
            </summary>
            <param name="videoId">Идентификатор видеозаписи.</param>
            <param name="message">Текст комментария.</param>
            <param name="ownerId">Идентификатор пользователя или сообщества, которому принадлежит видеозапись.
            Обратите внимание, идентификатор сообщества в параметре <paramref name="ownerId"/> необходимо указывать со знаком "-" — например,
            <paramref name="ownerId"/>=-1 соответствует идентификатору сообщества ВКонтакте API (club1).
            </param>
            <param name="isFromGroup">Данный параметр учитывается, если <paramref name="ownerId"/> &lt; 0 (комментарий к видеозаписи группы).
            true — комментарий будет опубликован от имени группы, false — комментарий будет опубликован от имени пользователя.
            (по умолчанию).</param>
            <returns>После успешного выполнения возвращает идентификатор созданного комментария.</returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Video"/>.
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.createComment"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.VideoCategory.Get(VkNet.Model.RequestParams.VideoGetParams)">
            <summary>
            Возвращает информацию о видеозаписях.
            </summary>
            <param name="params">Параметры запроса.</param>
            <returns>
            После успешного выполнения возвращает список объектов видеозаписей с дополнительным полем comments, содержащим число комментариев  у видеозаписи. 
            Если был задан параметр extended=1, возвращаются дополнительные поля: 
            
            privacy_view — настройки приватности в формате настроек приватности; (приходит только для текущего пользователя) 
            privacy_comment — настройки приватности в формате настроек приватности; (приходит только для текущего пользователя) 
            can_comment — может ли текущий пользователь оставлять комментарии к ролику (1 — может, 0 — не может); 
            can_repost — может ли текущий пользователь скопировать ролик с помощью функции «Рассказать друзьям» (1 — может, 0 — не может); 
            likes — информация об отметках «Мне нравится»: 
            
            user_likes — есть ли отметка «Мне нравится» от текущего пользователя; 
            count — число отметок «Мне нравится»; 
            
            repeat — зацикливание воспроизведения видеозаписи (1 — зацикливается, 0 — не зацикливается). 
            
            Если в Вашем приложении используется  прямая авторизация, возвращается дополнительное поле files, содержащее ссылку на файл с видео (если ролик размещен на сервере ВКонтакте) или ссылку на внешний ресурс (если ролик встроен с какого-либо видеохостинга).
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.get" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.VideoCategory.Edit(VkNet.Model.RequestParams.VideoEditParams)">
            <summary>
            Редактирует данные видеозаписи.
            </summary>
            <param name="params">Параметры запроса.</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.edit" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.VideoCategory.Add(System.Int64,System.Int64,System.Nullable{System.Int64})">
            <summary>
            Добавляет видеозапись в список пользователя.
            </summary>
            <param name="targetId">Идентификатор пользователя или сообщества, в которое нужно добавить видео. 
            Обратите внимание, идентификатор сообщества в параметре target_id необходимо указывать со знаком "-" — например, target_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число (Целое число).</param>
            <param name="videoId">Идентификатор видеозаписи. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <param name="ownerId">Идентификатор пользователя или сообщества, которому принадлежит видеозапись. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, обязательный параметр (Целое число, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.add" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.VideoCategory.Save(VkNet.Model.RequestParams.VideoSaveParams)">
            <summary>
            Возвращает адрес сервера (необходимый для загрузки) и данные видеозаписи.
            </summary>
            <param name="params">Параметры запроса.</param>
            <returns>
            Возвращает объект, который имеет поля upload_url, video_id, title, description, owner_id. 
            Метод может быть вызван не более 5000 раз в сутки для одного сервиса.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.save" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.VideoCategory.Delete(System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Удаляет видеозапись со страницы пользователя.
            </summary>
            <param name="videoId">Идентификатор видеозаписи. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <param name="ownerId">Идентификатор пользователя или сообщества, которому принадлежит видеозапись. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор текущего пользователя (Целое число, по умолчанию идентификатор текущего пользователя).</param>
            <param name="targetId">Идентификатор пользователя или сообщества, для которого нужно удалить видеозапись. 
            Обратите внимание, идентификатор сообщества в параметре target_id необходимо указывать со знаком "-" — например, target_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число (Целое число).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.delete" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.VideoCategory.Restore(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Восстанавливает удаленную видеозапись.
            </summary>
            <param name="videoId">Идентификатор видеозаписи. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <param name="ownerId">Идентификатор владельца видеозаписи (пользователь или сообщество). Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор текущего пользователя (Целое число, по умолчанию идентификатор текущего пользователя).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.restore" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.VideoCategory.Search(VkNet.Model.RequestParams.VideoSearchParams)">
            <summary>
            Возвращает список видеозаписей в соответствии с заданным критерием поиска.
            </summary>
            <param name="params">Параметры запроса.</param>
            <returns>
            После успешного выполнения возвращает список объектов видеозаписей. 
            Если в Вашем приложении используется  прямая авторизация, возвращается дополнительное поле files, содержащее ссылку на файл с видео (если ролик размещен на сервере ВКонтакте) или ссылку на внешний ресурс (если ролик встроен с какого-либо видеохостинга).
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.search" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.VideoCategory.GetUserVideos(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Возвращает список видеозаписей, на которых отмечен пользователь.
            </summary>
            <param name="userId">Идентификатор пользователя. положительное число, по умолчанию идентификатор текущего пользователя (Положительное число, по умолчанию идентификатор текущего пользователя).</param>
            <param name="offset">Смещение относительно первой найденной видеозаписи для выборки определенного подмножества. положительное число (Положительное число).</param>
            <param name="count">Количество возвращаемых видеозаписей. положительное число, по умолчанию 20, максимальное значение 100 (Положительное число, по умолчанию 20, максимальное значение 100).</param>
            <param name="extended">1 — возвращать дополнительные объекты profiles и groups, которые содержат id и имя/название владельцев видео. флаг, может принимать значения 1 или 0, по умолчанию 0 (Флаг, может принимать значения 1 или 0, по умолчанию 0).</param>
            <returns>
            После успешного выполнения возвращает список объектов видеозаписей.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.getUserVideos" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.VideoCategory.GetAlbums(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Возвращает список альбомов видеозаписей пользователя или сообщества.
            </summary>
            <param name="ownerId">Идентификатор владельца альбомов (пользователь или сообщество). По умолчанию — идентификатор текущего пользователя. целое число, по умолчанию идентификатор текущего пользователя (Целое число, по умолчанию идентификатор текущего пользователя).</param>
            <param name="offset">Смещение, необходимое для выборки определенного подмножества альбомов. По умолчанию — 0. положительное число (Положительное число).</param>
            <param name="count">Количество альбомов, информацию о которых нужно вернуть. По умолчанию — не больше 50, максимум — 100). положительное число, по умолчанию 50, максимальное значение 100 (Положительное число, по умолчанию 50, максимальное значение 100).</param>
            <param name="extended">1 – позволяет получать поля count, photo_320, photo_160 и updated_time для каждого альбома. Если альбом пустой, то поля photo_320 и photo_160 возвращены не будут. По умолчанию – 0. флаг, может принимать значения 1 или 0 (Флаг, может принимать значения 1 или 0).</param>
            <param name="needSystem">1 — возвращать системные альбомы. флаг, может принимать значения 1 или 0, по умолчанию 0 (Флаг, может принимать значения 1 или 0, по умолчанию 0).</param>
            <returns>
            После успешного выполнения возвращает общее количество альбомов с видеозаписями, и массив объектов album, каждый из которых содержит следующие поля: 
            
            id — идентификатор альбома; 
            owner_id — идентификатор владельца альбома; 
            title — название альбома.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.getAlbums" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.VideoCategory.AddAlbum(System.String,System.Nullable{System.Int64},System.Collections.Generic.IEnumerable{VkNet.Enums.SafetyEnums.Privacy})">
            <summary>
            Создает пустой альбом видеозаписей.
            </summary>
            <param name="groupId">Идентификатор сообщества (если необходимо создать альбом в сообществе). положительное число (Положительное число).</param>
            <param name="title">Название альбома. строка (Строка).</param>
            <param name="privacy">Уровень доступа к альбому в специальном формате. 
            Приватность доступна для альбомов с видео в профиле пользователя. список строк, разделенных через запятую (Список строк, разделенных через запятую).</param>
            <returns>
            После успешного выполнения возвращает  идентификатор созданного альбома (album_id).
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.addAlbum" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.VideoCategory.EditAlbum(System.Int64,System.String,System.Nullable{System.Int64},VkNet.Enums.SafetyEnums.Privacy)">
            <summary>
            Редактирует название альбома видеозаписей.
            </summary>
            <param name="groupId">Идентификатор сообщества (если нужно отредактировать альбом, принадлежащий сообществу). положительное число (Положительное число).</param>
            <param name="albumId">Идентификатор альбома. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <param name="title">Новое название для альбома. строка, обязательный параметр (Строка, обязательный параметр).</param>
            <param name="privacy">Уровень доступа к альбому в специальном формате. 
            Приватность доступна для альбомов с видео в профиле пользователя. целое число (Целое число).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.editAlbum" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.VideoCategory.DeleteAlbum(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Удаляет альбом видеозаписей.
            </summary>
            <param name="groupId">Идентификатор сообщества (если альбом, который необходимо удалить, принадлежит сообществу). положительное число (Положительное число).</param>
            <param name="albumId">Идентификатор альбома. положительное число (Положительное число).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.deleteAlbum" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.VideoCategory.GetComments(VkNet.Model.RequestParams.VideoGetCommentsParams)">
            <summary>
            Возвращает список комментариев к видеозаписи.
            </summary>
            <param name="params">Параметры запроса.</param>
            <returns>
            После успешного выполнения возвращает общее количество комментариев и массив объектов comment, каждый из которых содержит следующие поля: 
            id — идентификатор комментария; 
            from_id — идентификатор автора комментария; 
            date — дата добавления комментария в формате unixtime; 
            text — текст комментария; 
            likes — информация об отметках «Мне нравится» текущего комментария (если был задан параметр need_likes), объект с полями: 
            count — число пользователей, которым понравился комментарий, 
            user_likes — наличие отметки «Мне нравится» от текущего пользователя 
            (1 — есть, 0 — нет), 
            can_like — информация о том, может ли текущий пользователь поставить отметку «Мне нравится» 
            (1 — может, 0 — не может). 
            Если был передан параметр start_comment_id, будет также возвращено поле real_offset – итоговое смещение данного подмножества комментариев (оно может быть отрицательным, если был указан отрицательный offset).
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.getComments" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.VideoCategory.CreateComment(VkNet.Model.RequestParams.VideoCreateCommentParams)">
            <summary>
            Cоздает новый комментарий к видеозаписи.
            </summary>
            <param name="params">Параметры запроса.</param>
            <returns>
            После успешного выполнения возвращает идентификатор созданного комментария.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.createComment" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.VideoCategory.DeleteComment(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Удаляет комментарий к видеозаписи.
            </summary>
            <param name="ownerId">Идентификатор пользователя или сообщества, которому принадлежит видеозапись. целое число, по умолчанию идентификатор текущего пользователя (Целое число, по умолчанию идентификатор текущего пользователя).</param>
            <param name="commentId">Идентификатор комментария. целое число, обязательный параметр (Целое число, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.deleteComment" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.VideoCategory.RestoreComment(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Восстанавливает удаленный комментарий к видеозаписи.
            </summary>
            <param name="ownerId">Идентификатор пользователя или сообщества, которому принадлежит видеозапись. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор текущего пользователя (Целое число, по умолчанию идентификатор текущего пользователя).</param>
            <param name="commentId">Идентификатор удаленного комментария. целое число, обязательный параметр (Целое число, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c> (0, если комментарий с таким идентификатором не является удаленным).
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.restoreComment" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.VideoCategory.EditComment(System.Int64,System.String,System.Nullable{System.Int64},System.Collections.Generic.IEnumerable{VkNet.Model.Attachments.MediaAttachment})">
            <summary>
            Изменяет текст комментария к видеозаписи.
            </summary>
            <param name="ownerId">Идентификатор пользователя или сообщества, которому принадлежит видеозапись. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор текущего пользователя (Целое число, по умолчанию идентификатор текущего пользователя).</param>
            <param name="commentId">Идентификатор комментария. целое число, обязательный параметр (Целое число, обязательный параметр).</param>
            <param name="message">Новый текст комментария (является обязательным, если не задан параметр attachments). строка (Строка).</param>
            <param name="attachments">Новый список объектов, приложенных к комментарию и разделённых символом ",". Поле attachments представляется в формате:
            &lt;type&gt;&lt;owner_id&gt;_&lt;media_id&gt;,&lt;type&gt;&lt;owner_id&gt;_&lt;media_id&gt;
            &lt;type&gt; — тип медиа-вложения:
            photo — фотография 
            video — видеозапись 
            audio — аудиозапись 
            doc — документ
            &lt;owner_id&gt; — идентификатор владельца медиа-вложения 
            &lt;media_id&gt; — идентификатор медиа-вложения. 
            
            Например:
            photo100172_166443618,photo66748_265827614
            Параметр является обязательным, если не задан параметр message. список строк, разделенных через запятую (Список строк, разделенных через запятую).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.editComment" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.VideoCategory.GetTags(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Возвращает список отметок на видеозаписи.
            </summary>
            <param name="ownerId">Идентификатор владельца видеозаписи (пользователь или сообщество). По умолчанию — идентификатор текущего пользователя. целое число, по умолчанию идентификатор текущего пользователя (Целое число, по умолчанию идентификатор текущего пользователя).</param>
            <param name="videoId">Идентификатор видеозаписи. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает массив объектов tag, каждый из которых содержит следующие поля: 
            
            user_id — идентификатор пользователя, которому соответствует отметка; 
            tag_id — идентификатор отметки; 
            placer_id — идентификатор пользователя, сделавшего отметку; 
            tagged_name — название отметки; 
            date — дата добавления отметки в формате unixtime; 
            viewed — статус отметки (1 — подтвержденная, 0 — неподтвержденная).
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.getTags" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.VideoCategory.PutTag(System.Int64,System.Int64,System.Nullable{System.Int64},System.String)">
            <summary>
            Добавляет отметку на видеозапись.
            </summary>
            <param name="userId">Идентификатор пользователя, которого нужно отметить. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <param name="ownerId">Идентификатор владельца видеозаписи (пользователь или сообщество). По умолчанию — идентификатор текущего пользователя. целое число, положительное число, по умолчанию идентификатор текущего пользователя (Целое число, положительное число, по умолчанию идентификатор текущего пользователя).</param>
            <param name="videoId">Идентификатор видеозаписи. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <param name="taggedName">Текст отметки. строка (Строка).</param>
            <returns>
            После успешного выполнения возвращает идентификатор созданной отметки (tag id).
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.putTag" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.VideoCategory.RemoveTag(System.Int64,System.Int64,System.Nullable{System.Int64})">
            <summary>
            Удаляет отметку с видеозаписи.
            </summary>
            <param name="tagId">Идентификатор отметки. целое число, обязательный параметр (Целое число, обязательный параметр).</param>
            <param name="ownerId">Идентификатор владельца видеозаписи (пользователь или сообщество). По умолчанию — идентификатор текущего пользователя. положительное число, по умолчанию идентификатор текущего пользователя (Положительное число, по умолчанию идентификатор текущего пользователя).</param>
            <param name="videoId">Идентификатор видеозаписи. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.removeTag" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.VideoCategory.GetNewTags(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает список видеозаписей, на которых есть непросмотренные отметки.
            </summary>
            <param name="offset">Смещение, необходимое для получения определённого подмножества видеозаписей. целое число (Целое число).</param>
            <param name="count">Количество видеозаписей, которые необходимо вернуть. положительное число, максимальное значение 100, по умолчанию 20 (Положительное число, максимальное значение 100, по умолчанию 20).</param>
            <returns>
            После успешного выполнения возвращает список объектов video с дополнительными полями: 
            
            placer_id — идентификатор пользователя, сделавшего отметку; 
            tag_created — дата создания отметки в формате unixtime; 
            tag_id — идентификатор отметки.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.getNewTags" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.VideoCategory.Report(System.Int64,VkNet.Enums.ReportReason,System.Nullable{System.Int64},System.String,System.String)">
            <summary>
            Позволяет пожаловаться на видеозапись.
            </summary>
            <param name="ownerId">Идентификатор пользователя или сообщества, которому принадлежит видеозапись. целое число, обязательный параметр (Целое число, обязательный параметр).</param>
            <param name="videoId">Идентификатор видеозаписи. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <param name="reason">Тип жалобы: 
            0 – это спам 
            1 – детская порнография 
            2 – экстремизм 
            3 – насилие 
            4 – пропаганда наркотиков 
            5 – материал для взрослых 
            6 – оскорбление положительное число (Положительное число).</param>
            <param name="comment">Комментарий для жалобы. строка (Строка).</param>
            <param name="searchQuery">Поисковой запрос, если видеозапись была найдена через поиск. строка (Строка).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.report" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.VideoCategory.ReportComment(System.Int64,System.Int64,VkNet.Enums.ReportReason)">
            <summary>
            Позволяет пожаловаться на комментарий к видеозаписи.
            </summary>
            <param name="ownerId">Идентификатор владельца видеозаписи, к которой оставлен комментарий. целое число, обязательный параметр (Целое число, обязательный параметр).</param>
            <param name="commentId">Идентификатор комментария. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <param name="reason">Тип жалобы: 
            0 – это спам 
            1 – детская порнография 
            2 – экстремизм 
            3 – насилие 
            4 – пропаганда наркотиков 
            5 – материал для взрослых 
            6 – оскорбление положительное число (Положительное число).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.reportComment" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.VideoCategory.GetAlbumById(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Позволяет получить информацию об альбоме с видео.
            </summary>
            <param name="ownerId">Идентификатор пользователя или сообщества, которому принадлежит альбом. целое число, по умолчанию идентификатор текущего пользователя (Целое число, по умолчанию идентификатор текущего пользователя).</param>
            <param name="albumId">Идентификатор альбома. целое число, обязательный параметр (Целое число, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает объект, который содержит следующие поля: 
            
            id — идентификатор альбома; 
            owner_id — идентификатор владельца альбома; 
            title — название альбома; 
            count — число видеозаписей в альбоме; 
            photo_320 — url обложки альбома с шириной 320px; 
            photo_160 — url обложки альбома с шириной 160px; 
            updated_time — время последнего обновления в формате unixtime.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.getAlbumById" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.VideoCategory.ReorderAlbums(System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Позволяет изменить порядок альбомов с видео.
            </summary>
            <param name="ownerId">Идентификатор пользователя или сообщества, которому принадлежит альбом. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор текущего пользователя (Целое число, по умолчанию идентификатор текущего пользователя).</param>
            <param name="albumId">Идентификатор альбома, который нужно переместить. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <param name="before">Идентификатор альбома, перед которым нужно поместить текущий. положительное число (Положительное число).</param>
            <param name="after">Идентификатор альбома, после которого нужно поместить текущий. положительное число (Положительное число).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.reorderAlbums" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.VideoCategory.ReorderVideos(VkNet.Model.RequestParams.VideoReorderVideosParams)">
            <summary>
            Позволяет переместить видеозапись в альбоме.
            </summary>
            <param name="params">Параметры запроса.</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.reorderVideos" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.VideoCategory.AddToAlbum(System.Int64,System.Int64,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Позволяет добавить видеозапись в альбом.
            </summary>
            <param name="targetId">Идентификатор владельца альбома, в который нужно добавить видео. 
            Обратите внимание, идентификатор сообщества в параметре target_id необходимо указывать со знаком "-" — например, target_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор текущего пользователя (Целое число, по умолчанию идентификатор текущего пользователя).</param>
            <param name="albumId">Идентификатор альбома, в который нужно добавить видео (0 соответствует  общему списку видеозаписей «без альбома»). целое число (Целое число).</param>
            <param name="albumIds">Идентификаторы альбомов, в которые нужно добавить видео. список целых чисел, разделенных запятыми (Список целых чисел, разделенных запятыми).</param>
            <param name="ownerId">Идентификатор владельца видеозаписи. 
            Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, обязательный параметр (Целое число, обязательный параметр).</param>
            <param name="videoId">Идентификатор видеозаписи. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.addToAlbum" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.VideoCategory.RemoveFromAlbum(System.Int64,System.Int64,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Позволяет убрать видеозапись из альбома.
            </summary>
            <param name="targetId">Идентификатор владельца альбома. Обратите внимание, идентификатор сообщества в параметре target_id необходимо указывать со знаком "-" — например, target_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор текущего пользователя (Целое число, по умолчанию идентификатор текущего пользователя).</param>
            <param name="albumId">Идентификатор альбома, из которого нужно убрать видео. целое число (Целое число).</param>
            <param name="albumIds">Идентификаторы альбомов, из которых нужно убрать видео. список целых чисел, разделенных запятыми (Список целых чисел, разделенных запятыми).</param>
            <param name="ownerId">Идентификатор владельца видеозаписи. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, обязательный параметр (Целое число, обязательный параметр).</param>
            <param name="videoId">Идентификатор видеозаписи. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.removeFromAlbum" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.VideoCategory.GetAlbumsByVideo(System.Nullable{System.Int64},System.Int64,System.Int64,System.Nullable{System.Boolean})">
            <summary>
            Возвращает список альбомов, в которых находится видеозапись.
            </summary>
            <param name="targetId">Идентификатор пользователя или сообщества, для которого нужно получить список альбомов, содержащих видеозапись. 
            Обратите внимание, идентификатор сообщества в параметре target_id необходимо указывать со знаком "-" — например, target_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор текущего пользователя (Целое число, по умолчанию идентификатор текущего пользователя).</param>
            <param name="ownerId">Идентификатор владельца видеозаписи. 
            Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, обязательный параметр (Целое число, обязательный параметр).</param>
            <param name="videoId">Идентификатор видеозаписи. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <param name="extended">1 — возвращать расширенную информацию об альбомах. флаг, может принимать значения 1 или 0, по умолчанию 0 (Флаг, может принимать значения 1 или 0, по умолчанию 0).</param>
            <returns>
            Возвращает список идентификаторов альбомов, в которых видеозапись находится у пользователя или сообщества с идентификатором target_id. Если был передан параметр extended=1, возвращается список объектов альбомов с дополнительной информацией о каждом из них.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.getAlbumsByVideo" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.VideoCategory.GetCatalog(System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.Nullable{System.Boolean})">
            <summary>
            Позволяет получить представление каталога видео.
            </summary>
            <param name="count">Число блоков каталога, информацию о которых необходимо вернуть. положительное число, по умолчанию 10, максимальное значение 16 (Положительное число, по умолчанию 10, максимальное значение 16).</param>
            <param name="itemsCount">Число видеозаписей в каждом блоке. положительное число, по умолчанию 10, максимальное значение 16 (Положительное число, по умолчанию 10, максимальное значение 16).</param>
            <param name="from">Параметр для получения следующей страницы результатов. Значение, необходимое для передачи в этом параметре, возвращается в поле ответа next. строка (Строка).</param>
            <param name="extended">1 — возвращать дополнительную информацию о пользователях и сообществах в полях profiles и groups. флаг, может принимать значения 1 или 0, по умолчанию 0 (Флаг, может принимать значения 1 или 0, по умолчанию 0).</param>
            <returns>
            После успешного выполнения возвращает массив объектов — блоков видеокаталога. Каждый из объектов содержит массив объектов — элементов блока и дополнительную информацию для отображения блока. 
            Данные для отображения блока видеокаталога  
            name заголовок блока. 
             строка id идентификатор блока. Возвращается строка для предопределенных блоков. Для других возвращается число. 
             Предопределенные блоки: 
            my — видеозаписи пользователя; 
            feed — записи сообществ и друзей, содержащие видеозаписи, а также новые видеозаписи, добавленные ими; 
            ugc — популярные видеозаписи; 
            series — сериалы и телешоу. 
             строка или число can_hide наличие возможности скрыть блок. 
             флаг, может принимать значения 1 или 0 type тип блока. Может принимать значения: 
            channel — видеозаписи сообщества; 
            category — подборки видеозаписей. 
             строка next параметр для получения следующей страницы результатов. Необходимо передать его значение в from в следующем вызове, чтобы получить содержимое каталога, следующее за полученным в текущем вызове. 
             строка  
            Элемент блока видеокаталога  
            id идентификатор элемента. 
             положительное число owner_id идентификатор владельца элемента. 
             int (числовое значение) title заголовок. 
             строка type тип элемента. Может принимать значения: 
            video — видеоролик; 
            album — альбом. 
            
             строка  
            type=video. Дополнительные поля для элемента-видеоролика  
            duration длительность в секундах. 
             положительное число description описание. 
             строка date дата добавления. 
             положительное число views число просмотров. 
             положительное число comments число комментариев. 
             положительное число photo_130 URL изображения-обложки видео с размером 130x98px. 
             строка photo_320 URL изображения-обложки видео с размером 320x240px. 
             строка photo_640 URL изображения-обложки видео с размером 640x480px (если размер есть). 
             строка can_add наличие возможности добавить видео в свой список. 
             флаг, может принимать значения 1 или 0 can_edit наличие возможности редактировать видео. 
             флаг, может принимать значения 1 или 0  
            type=album. Дополнительные поля для элемента-альбома  
            count число видеозаписей в альбоме. 
             положительное число photo_320 URL изображения-обложки альбома с размером 544x300px. 
             строка photo_160 URL изображения-обложки альбома с размером 272x150px. 
             строка updated_time время последнего обновления альбома. 
             положительное число  
            Если был передан параметр extended=1, возвращаются дополнительные объекты profiles и groups, содержащие информацию о пользователях и сообществах.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.getCatalog" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.VideoCategory.GetCatalogSection(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Позволяет получить отдельный блок видеокаталога.
            </summary>
            <param name="sectionId">Значение id, полученное с блоком в методе video.getCatalog. строка, обязательный параметр (Строка, обязательный параметр).</param>
            <param name="from">Значение next, полученное с блоком в методе video.getCatalog строка, обязательный параметр (Строка, обязательный параметр).</param>
            <param name="count">Число элементов блока, которое нужно вернуть. положительное число, по умолчанию 10, максимальное значение 16 (Положительное число, по умолчанию 10, максимальное значение 16).</param>
            <param name="extended">1 — возвращать дополнительную информацию о пользователях и сообществах в полях profiles и groups. флаг, может принимать значения 1 или 0, по умолчанию 0 (Флаг, может принимать значения 1 или 0, по умолчанию 0).</param>
            <returns>
            После успешного выполнения возвращает массив элементов блока видеокаталога и поле next для текущего блока. 
            Элемент блока видеокаталога  
            id идентификатор элемента. 
             положительное число owner_id идентификатор владельца элемента. 
             int (числовое значение) title заголовок. 
             строка type тип элемента. Может принимать значения: 
            
            
            
            video — видеоролик; 
            album — альбом. 
            
             строка  
            type=video. Дополнительные поля для элемента-видеоролика  
            duration длительность в секундах. 
             положительное число description описание. 
             строка date дата добавления. 
             положительное число views число просмотров. 
             положительное число comments число комментариев. 
             положительное число photo_130 URL изображения-обложки видео с размером 130x98px. 
             строка photo_320 URL изображения-обложки видео с размером 320x240px. 
             строка photo_640 URL изображения-обложки видео с размером 640x480px (если размер есть). 
             строка can_add наличие возможности добавить видео в свой список. 
             флаг, может принимать значения 1 или 0 can_edit наличие возможности редактировать видео. 
             флаг, может принимать значения 1 или 0  
            type=album. Дополнительные поля для элемента-альбома  
            count число видеозаписей в альбоме. 
             положительное число photo_320 URL изображения-обложки альбома с размером 544x300px. 
             строка photo_160 URL изображения-обложки альбома с размером 272x150px. 
             строка updated_time время последнего обновления альбома. 
             положительное число  
            Если был передан параметр extended=1, возвращаются дополнительные объекты profiles и groups, содержащие информацию о пользователях и сообществах.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.getCatalogSection" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.VideoCategory.HideCatalogSection(System.Int64)">
            <summary>
            Скрывает для пользователя раздел видеокаталога.
            </summary>
            <param name="sectionId">Значение id, полученное с блоком, который необходимо скрыть, в методе video.getCatalog обязательный параметр, целое число (Обязательный параметр, целое число).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.hideCatalogSection" />.
            </remarks>
        </member>
        <member name="T:VkNet.Categories.WallCategory">
            <summary>
            Методы для работы со стеной пользователя.
            </summary>
            <summary>
            Методы для работы со стеной пользователя.
            </summary>
        </member>
        <member name="M:VkNet.Categories.WallCategory.Get(System.Int64,System.Int32@,System.Nullable{System.Int32},System.Nullable{System.Int32},VkNet.Enums.WallFilter)">
            <summary>
            Возвращает список записей со стены пользователя или сообщества.
            </summary>
            <param name="ownerId">Идентификатор пользователя. Чтобы получить записи со стены группы (публичной страницы, встречи), укажите её идентификатор
            со знаком "минус": например, owner_id=-1 соответствует группе с идентификатором 1.</param>
            <param name="totalCount">Общее количество записей на стене.</param>
            <param name="count">Количество сообщений, которое необходимо получить (но не более 100).</param>
            <param name="offset">Смещение, необходимое для выборки определенного подмножества сообщений.</param>
            <param name="filter">Типы сообщений, которые необходимо получить (по умолчанию возвращаются все сообщения).</param>
            <returns>В случае успеха возвращается запрошенный список записей со стены.</returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/wall.get"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.WallCategory.GetExtended(System.Int64,System.Collections.ObjectModel.ReadOnlyCollection{VkNet.Model.Post}@,System.Collections.ObjectModel.ReadOnlyCollection{VkNet.Model.User}@,System.Collections.ObjectModel.ReadOnlyCollection{VkNet.Model.Group}@,System.Nullable{System.Int32},System.Nullable{System.Int32},VkNet.Enums.WallFilter)">
            <summary>
            Возвращает три  коллекции в out параметрах <paramref name="wallPosts"/>, <paramref name="profiles"/> и <paramref name="groups"/>.
            </summary>
            <param name="ownerId">Идентификатор пользователя. Чтобы получить записи со стены группы (публичной страницы, встречи), укажите её идентификатор
            со знаком "минус": например, owner_id=-1 соответствует группе с идентификатором 1.</param>
            <param name="wallPosts">Коллекция записей на стене.</param>
            <param name="profiles">Коллекция профилей, так или иначе связанных с полученными в <paramref name="wallPosts"/> записями.</param>
            <param name="groups">Коллекция групп, так или иначе связанных с полученными в <paramref name="wallPosts"/> записями.</param>
            <param name="count">Количество сообщений, которое необходимо получить (но не более 100).</param>
            <param name="offset">Смещение, необходимое для выборки определенного подмножества сообщений.</param>
            <param name="filter">Типы сообщений, которые необходимо получить (по умолчанию возвращаются все сообщения).</param>
            <returns>В случае успеха возвращается количество записей на стене.</returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/wall.get"/>, для случая, когда параметр extended = 1.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.WallCategory.GetComments(System.Int64,System.Int64,System.Int32@,System.Nullable{VkNet.Enums.SortOrderBy},System.Boolean,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Int32)">
            <summary>
            Возвращает список комментариев к записи на стене пользователя.
            </summary>
            <param name="ownerId">Идентификатор пользователя, на чьей стене находится запись, к которой необходимо получить комментарии.</param>
            <param name="postId">Идентификатор записи на стене пользователя.</param>
            <param name="totalCount">Общее количество комментариев к записи.</param>
            <param name="sort">Порядок сортировки комментариев (по умолчанию хронологический).</param>
            <param name="needLikes">Признак нужно ли возвращать поле Likes в комментариях.</param>
            <param name="count">Количество комментариев, которое необходимо получить (но не более 100).</param>
            <param name="offset">Смещение, необходимое для выборки определенного подмножества комментариев.</param>
            <param name="previewLength">Количество символов, по которому нужно обрезать комментарии. Если указано 0, то комментарии не образеютяс.
            Обратите внимание, что комментарии обрезаются по словам.</param>
            <returns>
            Список комментариев к записи на стене пользователя.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/wall.getComments"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.WallCategory.GetById(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Int64,System.Int64}})">
            <summary>
            Возвращает список записей со стен пользователей или сообществ по их идентификаторам.
            </summary>
            <param name="posts">
            Список идентификаторов записей. Key - идентификатор пользователя (группы), Value - идентификатор записи (положительное число).
            </param>
            <returns>
            После успешного выполнения возвращает список объектов записей со стены.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/wall.getById"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.WallCategory.Post(System.Nullable{System.Int64},System.Boolean,System.Boolean,System.String,System.Collections.Generic.IEnumerable{VkNet.Model.Attachments.MediaAttachment},System.String,System.Collections.Generic.IEnumerable{VkNet.Enums.SafetyEnums.Services},System.Boolean,System.Nullable{System.DateTime},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Публикует новую запись на своей или чужой стене.
            Данный метод позволяет создать новую запись на стене, а также опубликовать предложенную новость или отложенную запись.
            </summary>
            <param name="ownerId">Идентификатор пользователя или сообщества, на стене которого должна быть опубликована запись. </param>
            <param name="friendsOnly">Доступна ли запись только друзьям (по умолчанию - доступна всем).</param>
            <param name="fromGroup">При публикации в группе показывает, от чьего имени публикуется запись (по умолчанию - от имени пользователя).</param>
            <param name="message">Тескт сообщения. Обязательное поле, если список <paramref name="mediaAttachments"/> не задан или пуст.</param>
            <param name="mediaAttachments">Список приложенных к записи объектов.
            Обязательно наличие хотя бы одного элемента в списке, если <paramref name="message"/> не задано.
            Свойства <see cref="P:VkNet.Model.Attachments.MediaAttachment.Id"/> и <see cref="P:VkNet.Model.Attachments.MediaAttachment.OwnerId"/> обязательно должны быть заданы. </param>
            <param name="url">Ссылка на внешнюю страницу. В строке может содержаться только одна ссылка.</param>
            <param name="services">Список сервисов или сайтов, на которые необходимо экспортировать запись, в случае если пользователь настроил соответствующую опцию.
             Например, twitter, facebook</param>
            <param name="signed">Добавляется ли подпись (имя опубликовавшего) к записи в группе, если запись сделана от имени группы.</param>
            <param name="publishDate">Дата публикации записи. Если параметр указан, публикация записи будет отложена до указанного времени. </param>
            <param name="lat">Географическая широта отметки, заданная в градусах (от -90 до 90).</param>
            <param name="long">Географическая долгота отметки, заданная в градусах (от -180 до 180).</param>
            <param name="placeId">Идентификатор места, в котором отмечен пользователь (положительное число).</param>
            <param name="postId">Идентификатор записи, которую необходимо опубликовать.
            Данный параметр используется для публикации отложенных записей и предложенных новостей.
            При публикации отложенной записи все параметры кроме owner_id и post_id игнорируются. </param>
            <returns>Идентификатор созданной записи</returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Wall"/>.
            Страница документации ВКонтакте <see href="http://vk.com/dev/wall.post"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.WallCategory.Repost(System.String,System.String,System.Nullable{System.Int64})">
            <summary>
            Копирует объект на стену пользователя или сообщества.
            </summary>
            <param name="object">Строковый идентификатор объекта, который необходимо разместить на стене, например, wall66748_3675 или wall-1_340364.</param>
            <param name="message">Сопроводительный текст, который будет добавлен к записи с объектом.</param>
            <param name="groupId">Идентификатор сообщества, на стене которого будет размещена запись с объектом.
            Если не указан, запись будет размещена на стене текущего пользователя. </param>
            <returns>Результат выполнения копирвоания и информация о скопированном объекте.</returns>
        </member>
        <member name="M:VkNet.Categories.WallCategory.Edit(System.Int64,System.Nullable{System.Int64},System.Boolean,System.String,System.Collections.Generic.IEnumerable{VkNet.Model.Attachments.MediaAttachment},System.String,System.Collections.Generic.IEnumerable{VkNet.Enums.SafetyEnums.Services},System.Boolean,System.Nullable{System.DateTime},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int64})">
            <summary>
            Редактирует запись на стене.
            </summary>
            <param name="postId">Идентификатор записи, которую необходимо отредактировать.</param>
            <param name="ownerId">Идентификатор пользователя или сообщества, на стене которого опубликована запись.</param>
            <param name="friendsOnly">Доступна ли запись только друзьям (по умолчанию - доступна всем).</param>
            <param name="message">Тескт сообщения. Обязательное поле, если список <paramref name="mediaAttachments"/> не задан или пуст.</param>
            <param name="mediaAttachments">Список приложенных к записи объектов.
            Обязательно наличие хотя бы одного элемента в списке, если <paramref name="message"/> не задано.
            Свойства <see cref="P:VkNet.Model.Attachments.MediaAttachment.Id"/> и <see cref="P:VkNet.Model.Attachments.MediaAttachment.OwnerId"/> обязательно должны быть заданы. </param>
            <param name="url">Ссылка на внешнюю страницу. В строке может содержаться только одна ссылка.</param>
            <param name="services">Список сервисов или сайтов, на которые необходимо экспортировать запись, в случае если пользователь настроил соответствующую опцию.
             Например, twitter, facebook</param>
            <param name="signed">Добавляется ли подпись (имя опубликовавшего) к записи в группе, если запись сделана от имени группы.</param>
            <param name="publishDate">Дата публикации записи. Если параметр не указан, отложенная запись будет опубликована.
            Параметр учитывается только при редактировании отложенной записи.</param>
            <param name="lat">Географическая широта отметки, заданная в градусах (от -90 до 90).</param>
            <param name="long">Географическая долгота отметки, заданная в градусах (от -180 до 180).</param>
            <param name="placeId">Идентификатор места, в котором отмечен пользователь (положительное число).</param>
            <returns>Результат выполнения редактирования.</returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской, содержащей <see cref="F:VkNet.Enums.Filters.Settings.Wall"/>.
            Страница документации ВКонтакте <see href="http://vk.com/dev/wall.edit"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.WallCategory.Get(VkNet.Model.RequestParams.WallGetParams)">
            <summary>
            Возвращает список записей со стены пользователя или сообщества.
            </summary>
            <param name="params">Входные параметры.</param>
            <returns>
            В случае успеха возвращается запрошенный список записей со стены.
            </returns>
            <exception cref="T:System.ArgumentException">OwnerID must be negative in case filter equal to Suggests;ownerId</exception>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/wall.get" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.WallCategory.GetComments(System.Int32@,VkNet.Model.RequestParams.WallGetCommentsParams)">
            <summary>
            Возвращает список комментариев к записи на стене.
            </summary>
            <param name="totalCount">Общее количество комментариев к записи.</param>
            <param name="params">Входные параметры выборки.</param>
            <returns>
            После успешного выполнения возвращает список объектов комментариев.
            Если был задан параметр need_likes=1, у объектов комментариев возвращается дополнительное поле likes:
            count — число пользователей, которым понравился комментарий;
            user_likes — наличие отметки «Мне нравится» от текущего пользователя
            (1 — есть, 0 — нет);
            can_like — информация о том, может ли текущий пользователь поставить отметку «Мне нравится»
            (1 — может, 0 — не может).
            Если был передан параметр start_comment_id, будет также возвращено поле real_offset – итоговое смещение данного подмножества комментариев (оно может быть отрицательным, если был указан отрицательный offset).
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/wall.getComments" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.WallCategory.GetById(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.Int64},VkNet.Enums.Filters.ProfileFields)">
            <summary>
            Возвращает список записей со стен пользователей или сообществ по их идентификаторам.
            </summary>
            <param name="posts">Перечисленные через запятую идентификаторы, которые представляют собой идущие через знак подчеркивания id владельцев стен и id самих записей на стене.
            Пример значения posts:
            93388_21539,93388_20904,-1_340364 список строк, разделенных через запятую, обязательный параметр (Список строк, разделенных через запятую, обязательный параметр).</param>
            <param name="extended">1 - возвращает объекты пользователей и групп, необходимые для отображения записей. флаг, может принимать значения 1 или 0 (Флаг, может принимать значения 1 или 0).</param>
            <param name="copyHistoryDepth">Определяет размер массива copy_history, возвращаемого в ответе, если запись является репостом записи с другой стены. 
            Например, copy_history_depth=1 — copy_history будет содержать один элемент с информацией о записи, прямым репостом которой является текущая. 
            copy_history_depth=2 — copy_history будет содержать два элемента, добавляется информация о записи, репостом которой является первый элемент, и так далее (при условии, что иерархия репостов требуемой глубины для текущей записи существует). целое число, по умолчанию 2 (Целое число, по умолчанию 2).</param>
            <param name="fields">Список дополнительных полей для профилей и  групп, которые необходимо вернуть. См. описание полей объекта user и описание полей объекта group. 
            Обратите внимание, этот параметр учитывается только при extended=1. список строк, разделенных через запятую (Список строк, разделенных через запятую).</param>
            <returns>
            После успешного выполнения возвращает список объектов записей со стены. 
            Если был задан параметр extended=1, ответ содержит три отдельных списка: 
            
            items — содержит объекты записей со стены; 
            profiles — содержит объекты пользователей с дополнительными полями sex, photo, photo_medium_rec и online; 
            groups — содержит объекты сообществ. 
            
            Если запись является репостом записи с другой стены, в ответе дополнительно возвращается массив copy_history записей со стены, репостом которых является текущая.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/wall.getById" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.WallCategory.Post(VkNet.Model.RequestParams.WallPostParams)">
            <summary>
            Публикует новую запись на своей или чужой стене.
            </summary>
            <param name="params">Входные параметры выборки.</param>
            <returns>
            После успешного выполнения возвращает идентификатор созданной записи (post_id).
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/wall.post" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.WallCategory.Repost(System.String,System.String,System.Nullable{System.Int64},System.String)">
            <summary>
            Копирует объект на стену пользователя или сообщества.
            </summary>
            <param name="object">Строковый идентификатор объекта, который необходимо разместить на стене, например, wall66748_3675 или wall-1_340364. строка, обязательный параметр (Строка, обязательный параметр).</param>
            <param name="message">Сопроводительный текст, который будет добавлен к записи с объектом. строка (Строка).</param>
            <param name="groupId">Идентификатор сообщества, на стене которого будет размещена запись с объектом. Если не указан, запись будет размещена на стене текущего пользователя. положительное число (Положительное число).</param>
            <param name="ref">Строка (Строка).</param>
            <returns>
            После успешного выполнения возвращает объект со следующими полями: 
            
            success 
            post_id — идентификатор созданной записи; 
            reposts_count — количество репостов объекта с учетом осуществленного; 
            likes_count — число отметок «Мне нравится» у объекта.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/wall.repost" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.WallCategory.Edit(VkNet.Model.RequestParams.WallEditParams)">
            <summary>
            Редактирует запись на стене.
            </summary>
            <param name="params">Входные параметры выборки.</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/wall.edit" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.WallCategory.Delete(System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Удаляет запись со стены.
            </summary>
            <param name="ownerId">Идентификатор пользователя или сообщества, на стене которого находится запись. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор текущего пользователя (Целое число, по умолчанию идентификатор текущего пользователя).</param>
            <param name="postId">Идентификатор записи на стене. положительное число (Положительное число).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/wall.delete" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.WallCategory.Restore(System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Восстанавливает удаленную запись на стене пользователя или сообщества.
            </summary>
            <param name="ownerId">Идентификатор пользователя или сообщества, на стене которого находилась удаленная запись. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор текущего пользователя (Целое число, по умолчанию идентификатор текущего пользователя).</param>
            <param name="postId">Идентификатор записи на стене. положительное число (Положительное число).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/wall.restore" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.WallCategory.AddComment(VkNet.Model.RequestParams.WallAddCommentParams)">
            <summary>
            Добавляет комментарий к записи на стене пользователя или сообщества.
            </summary>
            <param name="params">Входные параметры выборки.</param>
            <returns>
            После успешного выполнения возвращает идентификатор добавленного комментария (comment_id).
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/wall.addComment" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.WallCategory.DeleteComment(System.Nullable{System.Int64},System.Int64)">
            <summary>
            Удаляет комментарий текущего пользователя к записи на своей или чужой стене.
            </summary>
            <param name="ownerId">Идентификатор пользователя, на чьей стене находится комментарий к записи. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор текущего пользователя (Целое число, по умолчанию идентификатор текущего пользователя).</param>
            <param name="commentId">Идентификатор комментария. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/wall.deleteComment" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.WallCategory.RestoreComment(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Восстанавливает комментарий текущего пользователя к записи на своей или чужой стене.
            </summary>
            <param name="ownerId">Идентификатор пользователя или сообщества, на стене которого находится комментарий к записи. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор текущего пользователя (Целое число, по умолчанию идентификатор текущего пользователя).</param>
            <param name="commentId">Идентификатор комментария на стене. целое число, обязательный параметр (Целое число, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/wall.restoreComment" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.WallCategory.Search(VkNet.Model.RequestParams.WallSearchParams)">
            <summary>
            Метод, позволяющий осуществлять поиск по стенам пользователей.
            </summary>
            <param name="params">Входные параметры выборки.</param>
            <returns>
            После успешного выполнения возвращает список объектов записей на стене.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/wall.search" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.WallCategory.GetReposts(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Позволяет получать список репостов заданной записи.
            </summary>
            <param name="ownerId">Идентификатор пользователя или сообщества, на стене которого находится запись. Если параметр не задан, то он считается равным идентификатору текущего пользователя. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор текущего пользователя (Целое число, по умолчанию идентификатор текущего пользователя).</param>
            <param name="postId">Идентификатор записи на стене. положительное число (Положительное число).</param>
            <param name="offset">Смещение, необходимое для выборки определенного подмножества записей. положительное число (Положительное число).</param>
            <param name="count">Количество записей, которое необходимо получить. положительное число, по умолчанию 20, максимальное значение 1000 (Положительное число, по умолчанию 20, максимальное значение 1000).</param>
            <returns>
            После успешного выполнения возвращает объект, содержащий поля: 
            
            items — содержит массив записей-репостов; 
            profiles — содержит объекты пользователей с дополнительными полями sex, online, photo, photo_medium_rec, screen_name; 
            groups — содержит информацию о сообществах.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/wall.getReposts" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.WallCategory.Pin(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Закрепляет запись на стене (запись будет отображаться выше остальных).
            </summary>
            <param name="ownerId">Идентификатор пользователя или сообщества, на стене которого находится запись. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор текущего пользователя (Целое число, по умолчанию идентификатор текущего пользователя).</param>
            <param name="postId">Идентификатор записи на стене. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/wall.pin" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.WallCategory.Unpin(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Отменяет закрепление записи на стене.
            </summary>
            <param name="ownerId">Идентификатор пользователя или сообщества, на стене которого находится запись. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор текущего пользователя (Целое число, по умолчанию идентификатор текущего пользователя).</param>
            <param name="postId">Идентификатор записи на стене. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/wall.unpin" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.WallCategory.EditComment(System.Int64,System.String,System.Nullable{System.Int64},System.Collections.Generic.IEnumerable{VkNet.Model.Attachments.MediaAttachment})">
            <summary>
            Редактирует комментарий на стене пользователя или сообщества.
            </summary>
            <param name="ownerId">Идентификатор владельца стены. целое число, по умолчанию идентификатор текущего пользователя (Целое число, по умолчанию идентификатор текущего пользователя).</param>
            <param name="commentId">Идентификатор комментария, который необходимо отредактировать. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <param name="message">Новый текст комментария. строка (Строка).</param>
            <param name="attachments">Новые вложения к комментарию. список строк, разделенных через запятую (Список строк, разделенных через запятую).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/wall.editComment" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.WallCategory.ReportPost(System.Int64,System.Int64,System.Nullable{VkNet.Enums.ReportReason})">
            <summary>
            Позволяет пожаловаться на запись.
            </summary>
            <param name="ownerId">Идентификатор пользователя или сообщества, которому принадлежит запись. целое число, обязательный параметр (Целое число, обязательный параметр).</param>
            <param name="postId">Идентификатор записи. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <param name="reason">Причина жалобы: 
            
            0 — спам; 
            1 — детская порнография; 
            2 — экстремизм; 
            3 — насилие; 
            4 — пропаганда наркотиков; 
            5 — материал для взрослых; 
            6 — оскорбление. 
            положительное число (Положительное число).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/wall.reportPost" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.WallCategory.ReportComment(System.Int64,System.Int64,System.Nullable{VkNet.Enums.ReportReason})">
            <summary>
            Позволяет пожаловаться на комментарий к записи.
            </summary>
            <param name="ownerId">Идентификатор пользователя или сообщества, которому принадлежит комментарий. целое число, обязательный параметр (Целое число, обязательный параметр).</param>
            <param name="commentId">Идентификатор комментария. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <param name="reason">Причина жалобы: 
            
            0 — спам; 
            1 — детская порнография; 
            2 — экстремизм; 
            3 — насилие; 
            4 — пропаганда наркотиков; 
            5 — материал для взрослых; 
            6 — оскорбление. 
            положительное число (Положительное число).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/wall.reportComment" />.
            </remarks>
        </member>
        <member name="T:VkNet.Categories.MarketsCategory">
            <summary>
            Методы для работы с товарами.
            </summary>
        </member>
        <member name="F:VkNet.Categories.MarketsCategory._vk">
            <summary>
            API.
            </summary>
        </member>
        <member name="M:VkNet.Categories.MarketsCategory.#ctor(VkNet.VkApi)">
            <summary>
            Методы для работы с приложениями.
            </summary>
            <param name="vk">API.</param>
        </member>
        <member name="M:VkNet.Categories.MarketsCategory.Get(System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Метод возвращает список товаров в сообществе.
            </summary>
            <param name="ownerId">Идентификатор владельца товаров. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, обязательный параметр (целое число, обязательный параметр).</param>
            <param name="albumId">Идентификатор подборки, товары из которой нужно вернуть. положительное число (положительное число).</param>
            <param name="count">Количество возвращаемых товаров. положительное число, максимальное значение 200, по умолчанию 100 (положительное число, максимальное значение 200, по умолчанию 100).</param>
            <param name="offset">Смещение относительно первого найденного товара для выборки определенного подмножества. положительное число (положительное число).</param>
            <param name="extended">1 — будут возвращены дополнительные поля likes, can_comment, can_repost, ''photos'''. По умолчанию эти поля не возвращается. флаг, может принимать значения 1 или 0 (флаг, может принимать значения 1 или 0).</param>
            <returns>
            После успешного выполнения возвращает список объектов item с дополнительным полем comments, содержащим число комментариев у товара.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/market.get" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MarketsCategory.GetById(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Возвращает информацию о товарах по идентификаторам.
            </summary>
            <param name="itemIds">Перечисленные через запятую идентификаторы — идущие через знак подчеркивания id владельцев товаров и id самих товаров. Если товар принадлежит сообществу, то в качестве первого параметра используется -id сообщества. Пример значения item_ids: -4363_136089719,13245770_137352259 список строк, разделенных через запятую, обязательный параметр, количество элементов должно составлять не более 100 (список строк, разделенных через запятую, обязательный параметр, количество элементов должно составлять не более 100).</param>
            <param name="extended">1 — будут возвращены дополнительные поля likes, can_comment, can_repost, photos. По умолчанию эти поля не возвращается. флаг, может принимать значения 1 или 0 (флаг, может принимать значения 1 или 0).</param>
            <returns>
            После успешного выполнения возвращает список объектов item с дополнительным полем comments, содержащим число комментариев у товара.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/market.getById" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MarketsCategory.Search(VkNet.Model.RequestParams.MarketSearchParams)">
            <summary>
            Поиск товаров в каталоге сообщества.
            </summary>
            <param name="params">Входные параметры запроса.</param>
            <returns>
            Возвращает список объектов item.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/market.search" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MarketsCategory.GetAlbums(System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает список подборок с товарами.
            </summary>
            <param name="ownerId">Идентификатор владельца товаров. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, обязательный параметр (целое число, обязательный параметр).</param>
            <param name="offset">Смещение относительно первой найденной подборки для выборки определенного подмножества. положительное число (положительное число).</param>
            <param name="count">Количество возвращаемых подборок. положительное число, по умолчанию 50, максимальное значение 100 (положительное число, по умолчанию 50, максимальное значение 100).</param>
            <returns>
            После успешного выполнения возвращает список объектов album.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/market.getAlbums" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MarketsCategory.GetAlbumById(System.Int64,System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Метод возвращает данные подборки с товарами.
            </summary>
            <param name="ownerId">Идентификатор владельца подборки. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, обязательный параметр (целое число, обязательный параметр).</param>
            <param name="albumIds">Идентификаторы подборок, данные о которых нужно получить. список положительных чисел, разделенных запятыми, обязательный параметр (список положительных чисел, разделенных запятыми, обязательный параметр).</param>
            <returns>
            Возвращает список объектов album. 
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/market.getAlbumById" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MarketsCategory.CreateComment(VkNet.Model.RequestParams.MarketCreateCommentParams)">
            <summary>
            Создает новый комментарий к товару.
            </summary>
            <param name="params">Входные параметры запроса.</param>
            <returns>
            После успешного выполнения возвращает идентификатор созданного комментария.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/market.createComment" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MarketsCategory.GetComments(VkNet.Model.RequestParams.MarketGetCommentsParams)">
            <summary>
            Возвращает список комментариев к товару.
            </summary>
            <param name="params">Входные параметры запроса.</param>
            <returns>
            Возвращает список объектов комментариев. 
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/market.getComments" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MarketsCategory.DeleteComment(System.Int64,System.Int64)">
            <summary>
            Удаляет комментарий к товару.
            </summary>
            <param name="ownerId">Идентификатор владельца товара. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, обязательный параметр (целое число, обязательный параметр).</param>
            <param name="commentId">Идентификатор комментария. положительное число, обязательный параметр (положительное число, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает 1 (0, если комментарий не найден).
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/market.deleteComment" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MarketsCategory.RestoreComment(System.Int64,System.Int64)">
            <summary>
            Восстанавливает удаленный комментарий к товару.
            </summary>
            <param name="ownerId">Идентификатор владельца товара. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, обязательный параметр (целое число, обязательный параметр).</param>
            <param name="commentId">Идентификатор удаленного комментария. положительное число, обязательный параметр (положительное число, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает 1 (0, если комментарий с таким идентификатором не является удаленным).
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/market.restoreComment" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MarketsCategory.EditComment(System.Int64,System.Int64,System.String,System.Collections.Generic.IEnumerable{VkNet.Model.Attachments.MediaAttachment})">
            <summary>
            Изменяет текст комментария к товару.
            </summary>
            <param name="ownerId">Идентификатор владельца товара. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, обязательный параметр (целое число, обязательный параметр).</param>
            <param name="commentId">Идентификатор комментария. положительное число, обязательный параметр (положительное число, обязательный параметр).</param>
            <param name="message">Новый текст комментария (является обязательным, если не задан параметр attachments). Максимальное количество символов: 2048. строка (строка).</param>
            <param name="attachments">Новый список объектов, приложенных к комментарию и разделённых символом ",". (список строк, разделенных через запятую).</param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/market.editComment" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MarketsCategory.ReportComment(System.Int64,System.Int64,VkNet.Enums.ReportReason)">
            <summary>
            Позволяет оставить жалобу на комментарий к товару.
            </summary>
            <param name="ownerId">Идентификатор владельца товара. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, обязательный параметр (целое число, обязательный параметр).</param>
            <param name="commentId">Идентификатор комментария. положительное число, обязательный параметр (положительное число, обязательный параметр).</param>
            <param name="reason">Причина жалобы (положительное число, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/market.reportComment" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MarketsCategory.Report(System.Int64,System.Int64,VkNet.Enums.ReportReason)">
            <summary>
            Позволяет отправить жалобу на товар.
            </summary>
            <param name="ownerId">Идентификатор владельца товаров. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, обязательный параметр (целое число, обязательный параметр).</param>
            <param name="itemId">Идентификатор товара положительное число, обязательный параметр (положительное число, обязательный параметр).</param>
            <param name="reason">Причина жалобы (положительное число, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/market.report" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MarketsCategory.Add(VkNet.Model.RequestParams.MarketProductParams)">
            <summary>
            Добавляет новый товар.
            </summary>
            <param name="params">Входные параметры запроса.</param>
            <returns>
            После успешного выполнения возвращает идентификатор добавленного товара.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/market.add" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MarketsCategory.Edit(VkNet.Model.RequestParams.MarketProductParams)">
            <summary>
            Редактирует товар.
            </summary>
            <param name="params">Входные параметры запроса.</param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/market.edit" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MarketsCategory.Delete(System.Int64,System.Int64)">
            <summary>
            Удаляет товар.
            </summary>
            <param name="ownerId">Идентификатор владельца товара. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, обязательный параметр (целое число, обязательный параметр).</param>
            <param name="itemId">Идентификатор товара. положительное число, обязательный параметр (положительное число, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/market.delete" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MarketsCategory.Restore(System.Int64,System.Int64)">
            <summary>
            Восстанавливает удаленный товар.
            </summary>
            <param name="ownerId">Идентификатор владельца товара. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, обязательный параметр (целое число, обязательный параметр).</param>
            <param name="itemId">Идентификатор товара. положительное число, обязательный параметр (положительное число, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает 1 (0, если товар не найден среди удаленных).
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/market.restore" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MarketsCategory.ReorderItems(System.Int64,System.Int64,System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Изменяет положение товара в подборке.
            </summary>
            <param name="ownerId">Идентификатор владельца товара. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, обязательный параметр (целое число, обязательный параметр).</param>
            <param name="albumId">Идентификатор подборки, в которой находится товар. целое число, обязательный параметр (целое число, обязательный параметр).</param>
            <param name="itemId">Идентификатор товара. положительное число, обязательный параметр (положительное число, обязательный параметр).</param>
            <param name="before">Идентификатор товара, перед которым следует поместить текущий. положительное число (положительное число).</param>
            <param name="after">Идентификатор товара, после которого следует поместить текущий. положительное число (положительное число).</param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/market.reorderItems" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MarketsCategory.ReorderAlbums(System.Int64,System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Изменяет положение подборки с товарами в списке.
            </summary>
            <param name="ownerId">Идентификатор владельца альбома. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, обязательный параметр (целое число, обязательный параметр).</param>
            <param name="albumId">Идентификатор подборки. целое число, обязательный параметр (целое число, обязательный параметр).</param>
            <param name="before">Идентификатор подборки, перед которой следует поместить текущую. положительное число (положительное число).</param>
            <param name="after">Идентификатор подборки, после которой следует поместить текущую. положительное число (положительное число).</param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/market.reorderAlbums" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MarketsCategory.AddAlbum(System.Int64,System.String,System.Nullable{System.Int64},System.Boolean)">
            <summary>
            Добавляет новую подборку с товарами.
            </summary>
            <param name="ownerId">Идентификатор владельца подборки. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, обязательный параметр (целое число, обязательный параметр).</param>
            <param name="title">Название подборки. строка, обязательный параметр, максимальная длина 128 (строка, обязательный параметр, максимальная длина 128).</param>
            <param name="photoId">Идентификатор фотографии-обложки подборки. положительное число (положительное число).</param>
            <param name="mainAlbum">Назначить подборку основной (1 — назначить, 0 — нет). флаг, может принимать значения 1 или 0 (флаг, может принимать значения 1 или 0).</param>
            <returns>
            После успешного выполнения возвращает идентификатор созданной подборки.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/market.addAlbum" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MarketsCategory.EditAlbum(System.Int64,System.Int64,System.String,System.Nullable{System.Int64})">
            <summary>
            Редактирует подборку с товарами.
            </summary>
            <param name="ownerId">Идентификатор владельца подборки. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, обязательный параметр (целое число, обязательный параметр).</param>
            <param name="albumId">Идентификатор подборки. положительное число, обязательный параметр (положительное число, обязательный параметр).</param>
            <param name="title">Название подборки. строка, обязательный параметр, максимальная длина 128 (строка, обязательный параметр, максимальная длина 128).</param>
            <param name="photoId">Идентификатор фотографии-обложки подборки. положительное число (положительное число).</param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/market.editAlbum" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MarketsCategory.DeleteAlbum(System.Int64,System.Int64)">
            <summary>
            Удаляет подборку с товарами.
            </summary>
            <param name="ownerId">Идентификатор владельца подборки. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, обязательный параметр (целое число, обязательный параметр).</param>
            <param name="albumId">Идентификатор подборки. положительное число, обязательный параметр (положительное число, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/market.deleteAlbum" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MarketsCategory.RemoveFromAlbum(System.Int64,System.Int64,System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Удаляет товар из одной или нескольких выбранных подборок.
            </summary>
            <param name="ownerId">Идентификатор владельца товара. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, обязательный параметр (целое число, обязательный параметр).</param>
            <param name="itemId">Идентификатор товара. положительное число, обязательный параметр (положительное число, обязательный параметр).</param>
            <param name="albumIds">Идентификаторы подборок, из которых нужно удалить товар. список положительных чисел, разделенных запятыми, обязательный параметр (список положительных чисел, разделенных запятыми, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/market.removeFromAlbum" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MarketsCategory.AddToAlbum(System.Int64,System.Int64,System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Добавляет товар в одну или несколько выбранных подборок.
            </summary>
            <param name="ownerId">Идентификатор владельца товара. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, обязательный параметр (целое число, обязательный параметр).</param>
            <param name="itemId">Идентификатор товара. положительное число, обязательный параметр (положительное число, обязательный параметр).</param>
            <param name="albumIds">Идентификаторы подборок, в которые нужно добавить товар. список положительных чисел, разделенных запятыми, обязательный параметр (список положительных чисел, разделенных запятыми, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/market.addToAlbum" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.MarketsCategory.GetCategories(System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Возвращает список категорий для товаров..
            </summary>
            <param name="count">Количество категорий, информацию о которых необходимо вернуть. положительное число, максимальное значение 1000, по умолчанию 10 (Положительное число, максимальное значение 1000, по умолчанию 10).</param>
            <param name="offset">Смещение, необходимое для выборки определенного подмножества категорий. положительное число (Положительное число).</param>
            <returns>
            После успешного выполнения возвращает список объектов category. 
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/market.getCategories" />.
            </remarks>
        </member>
        <member name="T:VkNet.Categories.AuthCategory">
            <summary>
            Методы для работы с авторизацией.
            </summary>
        </member>
        <member name="F:VkNet.Categories.AuthCategory._vk">
            <summary>
            API.
            </summary>
        </member>
        <member name="M:VkNet.Categories.AuthCategory.#ctor(VkNet.VkApi)">
            <summary>
            Методы для работы с подарками.
            </summary>
            <param name="vk">API.</param>
        </member>
        <member name="M:VkNet.Categories.AuthCategory.CheckPhone(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Проверяет правильность введённого номера.
            </summary>
            <param name="phone">Номер телефона регистрируемого пользователя. строка, обязательный параметр (Строка, обязательный параметр).</param>
            <param name="clientId">Идентификатор Вашего приложения. целое число (Целое число).</param>
            <param name="clientSecret">Секретный ключ приложения, доступный в разделе редактирования приложения. строка, обязательный параметр (Строка, обязательный параметр).</param>
            <param name="authByPhone">Флаг, может принимать значения 1 или 0 (Флаг, может принимать значения 1 или 0).</param>
            <returns>
            В случае, если номер пользователя является правильным, будет возвращён <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/auth.checkPhone" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AuthCategory.Signup(VkNet.Model.RequestParams.AuthSignupParams)">
            <summary>
            Регистрирует нового пользователя по номеру телефона.
            </summary>
            <param name="params">Параметры запроса.</param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте <seealso cref="!:https://vk.com/dev/auth.signup" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AuthCategory.Confirm(VkNet.Model.RequestParams.AuthConfirmParams)">
            <summary>
            Завершает регистрацию нового пользователя, начатую методом auth.signup, по коду, полученному через SMS.
            </summary>
            <param name="params">Параметры запроса.</param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте <seealso cref="!:https://vk.com/dev/auth.confirm" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AuthCategory.Restore(System.String)">
            <summary>
            Позволяет восстановить доступ к аккаунту, используя код, полученный через SMS.
            </summary>
            <param name="phone">Номер телефона пользователя.</param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте <seealso cref="!:https://vk.com/dev/auth.restore" />.
            </remarks>
        </member>
        <member name="T:VkNet.Categories.DocsCategory">
            <summary>
            Методы для работы с документами (получение списка, загрузка, удаление и т.д.)
            </summary>
        </member>
        <member name="F:VkNet.Categories.DocsCategory._vk">
            <summary>
            API
            </summary>
        </member>
        <member name="M:VkNet.Categories.DocsCategory.#ctor(VkNet.VkApi)">
            <summary>
            Методы для работы с документами (получение списка, загрузка, удаление и т.д.).
            </summary>
            <param name="vk">API.</param>
        </member>
        <member name="M:VkNet.Categories.DocsCategory.Get(System.Int32@,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Nullable{VkNet.Enums.DocFilter})">
            <summary>
            Возвращает расширенную информацию о документах пользователя или сообщества.
            </summary>
            <param name="totalCount">Общее количество документов.</param>
            <param name="count">Количество документов, информацию о которых нужно вернуть. По умолчанию — все документы.</param>
            <param name="offset">Смещение, необходимое для выборки определенного подмножества документов. Положительное число.</param>
            <param name="ownerId">Идентификатор пользователя или сообщества, которому принадлежат документы. Целое число, по умолчанию идентификатор текущего пользователя.</param>
            <param name="filter">Фильтр по типу документа.</param>
            <returns>
            После успешного выполнения возвращает список объектов документов.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/docs.get" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.DocsCategory.Get(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Nullable{VkNet.Enums.DocFilter})">
            <summary>
            Возвращает расширенную информацию о документах пользователя или сообщества.
            </summary>
            <param name="count">Количество документов, информацию о которых нужно вернуть. По умолчанию — все документы.</param>
            <param name="offset">Смещение, необходимое для выборки определенного подмножества документов. Положительное число.</param>
            <param name="ownerId">Идентификатор пользователя или сообщества, которому принадлежат документы. Целое число, по умолчанию идентификатор текущего пользователя.</param>
            <param name="filter">Фильтр по типу документа.</param>
            <returns>
            После успешного выполнения возвращает список объектов документов.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/docs.get" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.DocsCategory.GetById(System.Collections.Generic.IEnumerable{VkNet.Model.Attachments.Document})">
            <summary>
            Возвращает информацию о документах по их идентификаторам.
            </summary>
            <param name="docs">Идентификаторы документов, информацию о которых нужно вернуть.</param>
            <returns>После успешного выполнения возвращает список объектов документов.</returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/docs.getById"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.DocsCategory.GetUploadServer(System.Nullable{System.Int64})">
            <summary>
            Возвращает адрес сервера для загрузки документов. 
            </summary>
            <param name="groupId">Идентификатор сообщества (если необходимо загрузить документ в список документов сообщества). Если документ нужно загрузить в список пользователя, метод вызывается без дополнительных параметров. Положительное число</param>
            <returns>После успешного выполнения возвращает объект <see cref="T:VkNet.Model.UploadServerInfo"/></returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/docs.getUploadServer"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.DocsCategory.GetWallUploadServer(System.Nullable{System.Int64})">
            <summary>
            Возвращает адрес сервера для загрузки документов в папку Отправленные, для последующей отправки документа на стену или личным сообщением. 
            </summary>
            <param name="groupId">Идентификатор сообщества, в которое нужно загрузить документ. Положительное число.</param>
            <returns>После успешного выполнения возвращает объект <see cref="T:VkNet.Model.UploadServerInfo"/></returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/docs.getWallUploadServer"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.DocsCategory.Save(System.String,System.String,System.String,System.Nullable{System.Int64},System.String)">
            <summary>
            Сохраняет документ после его успешной загрузки на сервер.
            </summary>
            <param name="file">Параметр, возвращаемый в результате загрузки файла на сервер. Обязательный параметр.</param>
            <param name="title">Название документа.</param>
            <param name="tags">Метки для поиска.</param>
            <param name="captchaSid">Id капчи (только если для вызова метода необходимо ввести капчу)</param>
            <param name="captchaKey">Текст капчи (только если для вызова метода необходимо ввести капчу)</param>
            <returns>Возвращает массив с загруженными объектами. </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/docs.save"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.DocsCategory.Delete(System.Int64,System.Int64)">
            <summary>
            Удаляет документ пользователя или группы. 
            </summary>
            <param name="ownerId">Идентификатор пользователя или сообщества, которому принадлежит документ. Целое число, обязательный параметр</param>
            <param name="docId">Идентификатор документа. Положительное число, обязательный параметр</param>
            <returns>После успешного выполнения возвращает 1. </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/docs.delete"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.DocsCategory.Add(System.Int64,System.Int64,System.String)">
            <summary>
            Копирует документ в документы текущего пользователя.
            </summary>
            <param name="ownerId">Идентификатор пользователя или сообщества, которому принадлежит документ. Целое число, обязательный параметр</param>
            <param name="docId">Идентификатор документа. Положительное число, обязательный параметр</param>
            <param name="accessKey">Ключ доступа документа. Этот параметр следует передать, если вместе с остальными данными о документе было возвращено поле access_key.</param>
            <returns>После успешного выполнения возвращает идентификатор созданного документа (did).</returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/docs.add"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.DocsCategory.GetTypes(System.Int64)">
            <summary>
            Возвращает доступные типы документы для пользователя.
            </summary>
            <param name="ownerId">Идентификатор пользователя или сообщества, которому принадлежат документы. целое число, по умолчанию идентификатор текущего пользователя, обязательный параметр (Целое число, по умолчанию идентификатор текущего пользователя, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает список объектов type. 
            Объект type — тип документов.  
            id идентификатор типа. 
            положительное число name название типа. 
            строка count число документов; 
            int (числовое значение).
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/docs.getTypes" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.DocsCategory.Search(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Возвращает результаты поиска по документам.
            </summary>
            <param name="query">Строка поискового запроса. Например, зеленые тапочки. строка, обязательный параметр, максимальная длина 512 (Строка, обязательный параметр, максимальная длина 512).</param>
            <param name="count">Количество документов, информацию о которых нужно вернуть. положительное число (Положительное число).</param>
            <param name="offset">Смещение, необходимое для выборки определенного подмножества документов. положительное число (Положительное число).</param>
            <returns>
            После успешного выполнения возвращает список объектов документов.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/docs.search" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.DocsCategory.Edit(System.Int64,System.Int64,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Редактирует документ пользователя или группы.
            </summary>
            <param name="ownerId">Идентификатор пользователя или сообщества, которому принадлежит документ. 
            Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор текущего пользователя, обязательный параметр (Целое число, по умолчанию идентификатор текущего пользователя, обязательный параметр).</param>
            <param name="docId">Идентификатор документа. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <param name="title">Название документа. строка, максимальная длина 128 (Строка, максимальная длина 128).</param>
            <param name="tags">Метки для поиска. список слов, разделенных через запятую (Список слов, разделенных через запятую).</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/docs.edit" />.
            </remarks>
        </member>
        <member name="T:VkNet.Categories.AppsCategory">
            <summary>
            Методы для работы с приложениями.
            </summary>
        </member>
        <member name="F:VkNet.Categories.AppsCategory._vk">
            <summary>
            API.
            </summary>
        </member>
        <member name="M:VkNet.Categories.AppsCategory.#ctor(VkNet.VkApi)">
            <summary>
            Методы для работы с приложениями.
            </summary>
            <param name="vk">API.</param>
        </member>
        <member name="M:VkNet.Categories.AppsCategory.GetCatalog(System.Int64@,VkNet.Model.RequestParams.AppGetCatalogParams)">
            <summary>
            Возвращает список приложений, доступных для пользователей сайта через каталог приложений.
            </summary>
            <param name="totalCount">Количество приложений.</param>
            <param name="params">Параметры запроса.</param>
            <returns>
            После успешного выполнения возвращает общее число найденных приложений и массив объектов приложений.
            </returns>
            <remarks>
            К методу можно делать не более 60 запросов в минуту с одного IP или id.
            Страница документации ВКонтакте <seealso cref="!:https://vk.com/dev/apps.getCatalog" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AppsCategory.Get(System.Int64@,VkNet.Model.RequestParams.AppGetParams)">
            <summary>
            Возвращает данные о запрошенном приложении на платформе ВКонтакте
            </summary>
            <param name="totalCount">Количество приложений.</param>
            <param name="params">Параметры запроса.</param>
            <returns>
            После успешного выполнения возвращает объект приложения.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/apps.get" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AppsCategory.SendRequest(VkNet.Model.RequestParams.AppSendRequestParams)">
            <summary>
            Позволяет отправить запрос другому пользователю в приложении, использующем авторизацию ВКонтакте.
            </summary>
            <param name="params">Параметры запроса.</param>
            <returns>
            В случае удачного выполнения метод возвращает идентификатор созданного запроса, например: 
            10013.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/apps.sendRequest" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AppsCategory.DeleteAppRequests">
            <summary>
            Удаляет все уведомления о запросах, отправленных из текущего приложения.
            </summary>
            <returns>
            В случае успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/apps.deleteAppRequests" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AppsCategory.GetFriendsList(System.Int64@,VkNet.Enums.AppRequestType,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Nullable{System.Int64},VkNet.Enums.Filters.UsersFields)">
            <summary>
            Создает список друзей, который будет использоваться при отправке пользователем приглашений в приложение.
            </summary>
            <param name="totalCount">Количество приложений.</param>
            <param name="count">Количество пользователей в создаваемом списке.</param>
            <param name="offset">Смещение относительно первого пользователя для выборки определенного подмножества.</param>
            <param name="type">Tип создаваемого списка друзей.</param>
            <param name="fields">Список дополнительных полей профилей, которые необходимо вернуть. См. подробное описание. </param>
            <returns>
            После успешного выполнения возвращает список пользователей.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/apps.getFriendsList" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AppsCategory.GetLeaderboard(VkNet.Enums.AppRatingType,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Возвращает рейтинг пользователей в игре.
            </summary>
            <param name="type">Level — рейтинг по уровням, 
            points — рейтинг по очкам, начисленным за выполнение миссий. 
            score — рейтинг по очкам, начисленным напрямую (apps.getScore). строка, обязательный параметр (Строка, обязательный параметр).</param>
            <param name="global">1 — глобальный рейтинг по всем игрокам, 
            0 — рейтинг по друзьям пользователя флаг, может принимать значения 1 или 0, по умолчанию 1 (Флаг, может принимать значения 1 или 0, по умолчанию 1).</param>
            <param name="extended">1 — дополнительно возвращает информацию о пользователе. флаг, может принимать значения 1 или 0, по умолчанию 0 (Флаг, может принимать значения 1 или 0, по умолчанию 0).</param>
            <returns>
            После успешного выполнения возвращает список друзей с текущим уровнем и количеством очков в игре, отсортированный по убыванию текущего уровня или количества очков.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/apps.getLeaderboard" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.AppsCategory.GetScore(System.Int64)">
            <summary>
            Метод возвращает количество очков пользователя в этой игре.
            </summary>
            <param name="userId">Идентификатор пользователя. положительное число, по умолчанию идентификатор текущего пользователя, обязательный параметр (Положительное число, по умолчанию идентификатор текущего пользователя, обязательный параметр).</param>
            <returns>
            После успешного выполнения возвращает число очков для пользователя.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/apps.getScore" />.
            </remarks>
        </member>
        <member name="T:VkNet.Categories.NewsFeedCategory">
            <summary>
            Методы для работы с новостной лентой пользователя.
            </summary>
        </member>
        <member name="F:VkNet.Categories.NewsFeedCategory._vk">
            <summary>
            API.
            </summary>
        </member>
        <member name="M:VkNet.Categories.NewsFeedCategory.#ctor(VkNet.VkApi)">
            <summary>
            Методы для работы с новостной лентой пользователя.
            </summary>
            <param name="vk">API.</param>
        </member>
        <member name="M:VkNet.Categories.NewsFeedCategory.Get(VkNet.Model.RequestParams.NewsFeedGetParams)">
            <summary>
            Возвращает данные, необходимые для показа списка новостей для текущего пользователя.
            </summary>
            <param name="params">Параметры запроса.</param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте <seealso cref="!:http://vk.com/dev/newsfeed.get" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.NewsFeedCategory.GetRecommended(VkNet.Model.RequestParams.NewsFeedGetRecommendedParams)">
            <summary>
            Получает список новостей, рекомендованных пользователю.
            </summary>
            <param name="params">Параметры запроса.</param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте <seealso cref="!:http://vk.com/dev/newsfeed.getRecommended" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.NewsFeedCategory.GetComments(VkNet.Model.RequestParams.NewsFeedGetCommentsParams)">
            <summary>
            Возвращает данные, необходимые для показа раздела комментариев в новостях пользователя.
            </summary>
            <param name="params">Параметры запроса.</param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте <seealso cref="!:http://vk.com/dev/newsfeed.getComments" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.NewsFeedCategory.GetMentions(System.Int32@,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Возвращает список записей пользователей на своих стенах, в которых упоминается указанный пользователь.
            </summary>
            <param name="total">Количество.</param>
            <param name="ownerId">Идентификатор группы или сообщества. по умолчанию идентификатор текущего пользователя</param>
            <param name="startTime">Время в формате unixtime начиная с которого следует получать упоминания о пользователе.</param>
            <param name="endTime">Время, в формате unixtime, до которого следует получать упоминания о пользователе.</param>
            <param name="offset">Смещение, необходимое для выборки определенного подмножества новостей. По умолчанию 0.</param>
            <param name="count">Количество возвращаемых записей. Если параметр не задан, то считается, что он равен 20. Максимальное значение параметра 50.</param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте <seealso cref="!:http://vk.com/dev/newsfeed.getMentions" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.NewsFeedCategory.GetBanned">
            <summary>
            Возвращает список пользователей и групп, которые текущий пользователь скрыл из ленты новостей.
            </summary>
            <returns>Возвращает результат выполнения метода.</returns>
            <remarks>
            Страница документации ВКонтакте <seealso cref="!:http://vk.com/dev/newsfeed.getBanned" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.NewsFeedCategory.GetBannedEx(VkNet.Enums.Filters.UsersFields,VkNet.Enums.SafetyEnums.NameCase)">
            <summary>
            Возвращает список пользователей и групп, которые текущий пользователь скрыл из ленты новостей.
            </summary>
            <param name="fields">Список дополнительных полей профилей, которые необходимо вернуть. </param>
            <param name="nameCase">Падеж для склонения имени и фамилии пользователя. </param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте <seealso cref="!:http://vk.com/dev/newsfeed.getBanned" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.NewsFeedCategory.AddBan(System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Запрещает показывать новости от заданных пользователей и групп в ленте новостей текущего пользователя.
            </summary>
            <param name="userIds">Перечисленные через запятую идентификаторы друзей пользователя, новости от которых необходимо скрыть из ленты новостей текущего пользователя.</param>
            <param name="groupIds">Перечисленные через запятую идентификаторы групп пользователя, новости от которых необходимо скрыть из ленты новостей текущего пользователя.</param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте <seealso cref="!:http://vk.com/dev/newsfeed.addBan" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.NewsFeedCategory.DeleteBan(System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Разрешает показывать новости от заданных пользователей и групп в ленте новостей текущего пользователя.
            </summary>
            <param name="userIds">Идентификаторы пользователей, новости от которых необходимо вернуть в ленту.</param>
            <param name="groupIds">Идентификаторы сообществ, новости от которых необходимо вернуть в ленту.</param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте <seealso cref="!:http://vk.com/dev/newsfeed.deleteBan" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.NewsFeedCategory.IgnoreItem(VkNet.Enums.SafetyEnums.NewsObjectTypes,System.Int64,System.Int64)">
            <summary>
            Позволяет скрыть объект из ленты новостей.
            </summary>
            <param name="type">Тип объекта.</param>
            <param name="ownerId">Идентификатор владельца объекта (пользователь или сообщество).</param>
            <param name="itemId">Идентификатор объекта. </param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте <seealso cref="!:http://vk.com/dev/newsfeed.ignoreItem" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.NewsFeedCategory.UnignoreItem(VkNet.Enums.SafetyEnums.NewsObjectTypes,System.Int64,System.Int64)">
            <summary>
            Позволяет вернуть ранее скрытый объект в ленту новостей.
            </summary>
            <returns>Возвращает результат выполнения метода.</returns>
            <param name="type">Тип объекта.</param>
            <param name="ownerId">Идентификатор владельца объекта (пользователь или сообщество).</param>
            <param name="itemId">Идентификатор объекта. </param>
            <remarks>
            Страница документации ВКонтакте <seealso cref="!:http://vk.com/dev/newsfeed.unignoreItem" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.NewsFeedCategory.Search(VkNet.Model.RequestParams.NewsFeedSearchParams)">
            <summary>
            Возвращает результаты поиска по статусам. Новости возвращаются в порядке от более новых к более старым.
            </summary>
            <param name="params">Параметры запроса.</param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте <seealso cref="!:http://vk.com/dev/newsfeed.search" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.NewsFeedCategory.GetLists(System.Int32@,System.Collections.Generic.IEnumerable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Возвращает пользовательские списки новостей.
            </summary>
            <param name="total">Количество пользовательских списков.</param>
            <param name="listIds">Идентификаторы списков.</param>
            <param name="extended"><c>true</c> — вернуть дополнительную информацию о списке (значения source_ids и no_reposts).</param>
            <returns>
            Метод возвращает список объектов пользовательских списков.
            </returns>
            <remarks>
            Страница документации ВКонтакте <seealso cref="!:http://vk.com/dev/newsfeed.getLists" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.NewsFeedCategory.SaveList(System.String,System.Collections.Generic.IEnumerable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Метод позволяет создавать или редактировать пользовательские списки для просмотра новостей.
            </summary>
            <param name="title">Название списка.</param>
            <param name="sourceIds">Идентификаторы пользователей и сообществ, которые должны быть включены в список. Идентификаторы сообществ нужно указывать со знаком «минус».</param>
            <param name="listId">Числовой идентификатор списка (если не передан, будет назначен автоматически).</param>
            <param name="noReposts">Нужно ли отображать копии постов в списке (<c>true</c> — не нужно).</param>
            <returns>
            После успешного выполнения возвращает Идентификатор списка.
            </returns>
            <remarks>
            Страница документации ВКонтакте <seealso cref="!:http://vk.com/dev/newsfeed.saveList" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.NewsFeedCategory.DeleteList(System.Int64)">
            <summary>
            Метод позволяет удалить пользовательский список новостей
            </summary>
            <param name="listId">Числовой идентификатор списка .</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <seealso cref="!:http://vk.com/dev/newsfeed.deleteList" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.NewsFeedCategory.Unsubscribe(VkNet.Enums.SafetyEnums.CommentObjectType,System.Int64,System.Nullable{System.Int64})">
            <summary>
            Отписывает текущего пользователя от комментариев к заданному объекту.
            </summary>
            <param name="type">Тип объекта, от комментариев к которому необходимо отписаться.</param>
            <param name="ownerId">Идентификатор владельца объекта.</param>
            <param name="itemId">Идентификатор объекта.</param>
            <returns>
            После успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <seealso cref="!:http://vk.com/dev/newsfeed.unsubscribe" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.NewsFeedCategory.GetSuggestedSources(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Boolean},VkNet.Enums.Filters.UsersFields)">
            <summary>
            Возвращает сообщества и пользователей, на которые текущему пользователю рекомендуется подписаться.
            </summary>
            <param name="offset">Отступ, необходимый для выборки определенного подмножества сообществ или пользователей. положительное число (Положительное число).</param>
            <param name="count">Количество сообществ или пользователей, которое необходимо вернуть. положительное число, максимальное значение 1000, по умолчанию 20 (Положительное число, максимальное значение 1000, по умолчанию 20).</param>
            <param name="shuffle">Перемешивать ли возвращаемый список. флаг, может принимать значения 1 или 0 (Флаг, может принимать значения 1 или 0).</param>
            <param name="fields">Список дополнительных полей, которые необходимо вернуть. См. возможные поля для пользователей и сообществ. список слов, разделенных через запятую (Список слов, разделенных через запятую).</param>
            <returns>
            Список объектов пользователей и групп.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/newsfeed.getSuggestedSources" />.
            </remarks>
        </member>
        <member name="T:VkNet.Categories.GiftsCategory">
            <summary>
            Методы для работы с подарками.
            </summary>
        </member>
        <member name="F:VkNet.Categories.GiftsCategory._vk">
            <summary>
            API.
            </summary>
        </member>
        <member name="M:VkNet.Categories.GiftsCategory.#ctor(VkNet.VkApi)">
            <summary>
            Методы для работы с подарками.
            </summary>
            <param name="vk">API.</param>
        </member>
        <member name="M:VkNet.Categories.GiftsCategory.Get(System.Int32@,System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает список полученных подарков пользователя.
            </summary>
            <param name="totalCount">Количество полученных подарков.</param>
            <param name="userId">Идентификатор пользователя, для которого необходимо получить список подарков.</param>
            <param name="count">Количество подарков, которое нужно вернуть.</param>
            <param name="offset">Смещение, необходимое для выборки определенного подмножества подарков.</param>
            <returns>
            В случае успешного вступления в группу метод вернёт <c>true</c>, иначе <c>false</c>.
            Возвращает список объектов gift_item, каждый из которых содержит следующие поля:
            id — идентификатор полученного подарка;
            from_id — идентификатор пользователя, который отправил подарок, или 0, если отправитель скрыт;
            message — текст сообщения, приложенного к подарку;
            date — время отправки подарка в формате unixtime;
            gift — объект подарка в следующем формате:
            id — номер подарка;
            thumb_256 — url изображения подарка размером 256x256px;
            thumb_96 — url изображения подарка размером 96x96px;
            thumb_48 — url изображения подарка размером 48x48px;
            privacy — значение приватности подарка(только для текущего пользователя; возможные значения: 0 — имя отправителя и сообщение видно всем; 1 — имя отправителя видно всем, сообщение видно только получателю; 2 — имя отправителя скрыто, сообщение видно только получателю).
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/gifts.get" />.
            </remarks>
        </member>
        <member name="T:VkNet.Categories.LikesCategory">
            <summary>
            API для работы с лайками.
            </summary>
        </member>
        <member name="F:VkNet.Categories.LikesCategory._vk">
            <summary>
            API
            </summary>
        </member>
        <member name="M:VkNet.Categories.LikesCategory.#ctor(VkNet.VkApi)">
            <summary>
            API для работы с лайками.
            </summary>
            <param name="vk">The vk.</param>
        </member>
        <member name="M:VkNet.Categories.LikesCategory.GetList(VkNet.Model.RequestParams.LikesGetListParams)">
            <summary>
            Получает список идентификаторов пользователей или сообществ, которые добавили заданный объект в свой список Мне нравится.
            </summary>
            <param name="params">Параметры запроса.</param>
            <returns>
            Возвращает список идентификаторов пользователей или сообществ, которые добавили заданный объект в свой список Мне нравится.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/likes.getList"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.LikesCategory.GetListEx(VkNet.Model.RequestParams.LikesGetListParams)">
            <summary>
            Получает список идентификаторов пользователей или сообществ, которые добавили заданный объект в свой список Мне нравится.
            </summary>
            <param name="params">Параметры запроса.</param>
            <returns>
            Возвращает список пользователей и сообществ, которые добавили заданный объект в свой список Мне нравится.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/likes.getList"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.LikesCategory.Add(VkNet.Model.RequestParams.LikesAddParams)">
            <summary>
            Добавляет указанный объект в список Мне нравится текущего пользователя.
            </summary>
            <param name="params">Параметры запроса.</param>
            <returns>
            В случае успеха возвращает объект с полем likes, в котором находится текущее количество пользователей, которые добавили данный объект в свой список Мне нравится.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/likes.add" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.LikesCategory.Delete(VkNet.Enums.SafetyEnums.LikeObjectType,System.Int64,System.Nullable{System.Int64})">
            <summary>
            Удаляет указанный объект из списка Мне нравится текущего пользователя
            </summary>
            <param name="type">Тип объекта <see cref="T:VkNet.Enums.SafetyEnums.LikeObjectType"/></param>
            <param name="itemId">Идентификатор объекта. положительное число, обязательный параметр</param>
            <param name="ownerId">Идентификатор владельца объекта. целое число, по умолчанию идентификатор текущего пользователя</param>
            <returns>В случае успеха возвращает объект с полем likes, в котором находится текущее количество пользователей, которые добавили данный объект в свой список Мне нравится. </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/likes.delete"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.LikesCategory.IsLiked(System.Boolean@,VkNet.Enums.SafetyEnums.LikeObjectType,System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Проверяет, находится ли объект в списке Мне нравится заданного пользователя.
            </summary>
            <param name="copied">Сделан ли репост текущим пользователем.</param>
            <param name="type">Тип объекта <see cref="T:VkNet.Enums.SafetyEnums.LikeObjectType" /></param>
            <param name="itemId">Идентификатор объекта. положительное число, обязательный параметр</param>
            <param name="userId">Идентификатор пользователя, у которого необходимо проверить наличие объекта в списке «Мне нравится». Если параметр не задан, то считается, что он равен идентификатору текущего пользователя. положительное число, по умолчанию идентификатор текущего пользователя</param>
            <param name="ownerId">Идентификатор владельца Like-объекта. Если параметр не задан, то считается, что он равен идентификатору текущего пользователя. целое число, по умолчанию идентификатор текущего пользователя</param>
            <returns>
            В случае успеха возвращает одно из следующих числовых значений:
            false — указанный Like-объект не входит в список Мне нравится пользователя с идентификатором user_id.
            true — указанный Like-объект находится в списке Мне нравится пользователя с идентификатором user_id.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/likes.isLiked" />.
            </remarks>
        </member>
        <member name="T:VkNet.Categories.StatsCategory">
            <summary>
            Методы для работы со статистикой.
            </summary>
        </member>
        <member name="F:VkNet.Categories.StatsCategory._vk">
            <summary>
            API.
            </summary>
        </member>
        <member name="M:VkNet.Categories.StatsCategory.#ctor(VkNet.VkApi)">
            <summary>
            Методы для работы со статистикой.
            </summary>
            <param name="vk">API.</param>
        </member>
        <member name="M:VkNet.Categories.StatsCategory.Get(System.DateTime,System.Nullable{System.DateTime},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Возвращает статистику сообщества или приложения.
            </summary>
            <param name="groupId">Идентификатор сообщества.</param>
            <param name="appId">Идентификатор приложения.</param>
            <param name="dateFrom">Начальная дата выводимой статистики в формате YYYY-MM-DD.</param>
            <param name="dateTo">Конечная дата выводимой статистики в формате YYYY-MM-DD.</param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте <seealso cref="!:https://vk.com/dev/stats.get" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.StatsCategory.GetByGroup(System.Int64,System.DateTime,System.Nullable{System.DateTime})">
            <summary>
            Возвращает статистику сообщества или приложения.
            </summary>
            <param name="groupId">Идентификатор сообщества.</param>
            <param name="dateFrom">The date from.</param>
            <param name="dateTo">The date to.</param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте <seealso cref="!:https://vk.com/dev/stats.get" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.StatsCategory.GetByApp(System.Int64,System.DateTime,System.Nullable{System.DateTime})">
            <summary>
            Возвращает статистику сообщества или приложения.
            </summary>
            <param name="appId">Идентификатор приложения.</param>
            <param name="dateFrom">The date from.</param>
            <param name="dateTo">The date to.</param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте <seealso cref="!:https://vk.com/dev/stats.get" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.StatsCategory.TrackVisitor">
            <summary>
            Добавляет данные о текущем сеансе в статистику посещаемости приложения..
            </summary>
            <returns>
            В случае успешной обработки данных метод вернет <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/stats.trackVisitor" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.StatsCategory.GetPostReach(System.Int64,System.Int64)">
            <summary>
            Возвращает статистику для записи на стене.
            </summary>
            <param name="ownerId">Идентификатор сообщества — владельца записи. Указывается со знаком «минус».</param>
            <param name="postId">Идентификатор записи. Обратите внимание — данные по статистике доступны только для 300 последних(самых свежих) записей на стене сообщества.</param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Необходимо входить в число руководителей этого сообщества.
            Страница документации ВКонтакте <seealso cref="!:https://vk.com/dev/stats.getPostReach" />.
            </remarks>
        </member>
        <member name="T:VkNet.Categories.DatabaseCategory">
            <summary>
            Методы для получения справочной информации (страны, города, школы, учебные заведения и т.п.).
            </summary>
        </member>
        <member name="M:VkNet.Categories.DatabaseCategory.GetCountries(System.Nullable{System.Boolean},System.Collections.Generic.List{VkNet.Enums.Iso3166},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает список стран.
            </summary>
            <param name="needAll">Флаг - вернуть список всех стран.</param>
            <param name="codes">Перечисленные через запятую двухбуквенные коды стран в стандарте ISO 3166-1 alpha-2 
            <see href="http://vk.com/dev/country_codes"/>.</param>
            <param name="offset">Отступ, необходимый для выбора определенного подмножества стран.</param>
            <param name="count">Количество стран, которое необходимо вернуть (по умолчанию 100, максимальное значение 1000).</param>
            <remarks>
            Если не заданы параметры needAll и code, то возвращается краткий список стран, расположенных наиболее близко к стране 
            текущего пользователя. Если задан параметр needAll, то будет возвращен список всех стран. Если задан параметр code, 
            то будут возвращены только страны с перечисленными ISO 3166-1 alpha-2 кодами.
            Страница документации ВКонтакте <see href="http://vk.com/dev/database.getCountries"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.DatabaseCategory.GetRegions(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает список регионов.
            </summary>
            <param name="countryId">Идентификатор страны.</param>
            <param name="query">Строка поискового запроса.</param>
            <param name="count">Количество регионов, которое необходимо вернуть.</param>
            <param name="offset">Отступ, необходимый для выбора определенного подмножества регионов.</param>
            <returns>Список регионов.</returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/database.getRegions"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.DatabaseCategory.GetStreetsById(System.Int32[])">
            <summary>
            Возвращает информацию об улицах по их идентификаторам.
            </summary>
            <param name="streetIds">Идентификаторы улиц.</param>
            <returns>Информация об улицах.</returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/database.getStreetsById"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.DatabaseCategory.GetCountriesById(System.Int32[])">
            <summary>
            Возвращает информацию о странах по их идентификаторам.
            </summary>
            <param name="countryIds">Идентификаторы стран.</param>
            <returns>Информация о странах.</returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/database.getCountriesById"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.DatabaseCategory.GetCities(System.Int32,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает список городов.
            </summary>
            <param name="countryId">Идентификатор страны.</param>
            <param name="regionId">Идентификатор региона.</param>
            <param name="query">Строка поискового запроса. Например, Санкт.</param>
            <param name="needAll"><c>true</c> – возвращать все города. <c>false</c> – возвращать только основные города.</param>
            <param name="count">Количество городов, которые необходимо вернуть.</param>
            <param name="offset">Отступ, необходимый для получения определенного подмножества городов.</param>
            <returns>Cписок городов</returns>
            <remarks>
            Возвращает коллекцию городов, каждый из которых содержит поля <see cref="P:VkNet.Model.City.Id"/> и <see cref="P:VkNet.Model.City.Title"/>. 
            При наличии информации о регионе и/или области, в которых находится данный город, в объекте могут дополнительно 
            включаться поля <see cref="P:VkNet.Model.City.Area"/> и <see cref="P:VkNet.Model.City.Region"/>. 
            Если не задан параметр <paramref name="query"/>, то будет возвращен список самых крупных городов в заданной стране. 
            Если задан параметр <paramref name="query"/>, то будет возвращен список городов, которые релевантны поисковому запросу.
            Страница документации ВКонтакте <see href="http://vk.com/dev/database.getCities"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.DatabaseCategory.GetCitiesById(System.Int32[])">
            <summary>
            Возвращает информацию о городах по их идентификаторам.
            </summary>
            <param name="cityIds">Идентификаторы городов.</param>
            <returns>Информация о городах.</returns>
            <remarks>
            Идентификаторы городов могут быть получены с помощью методов <see cref="M:VkNet.Categories.UsersCategory.Get(System.Int64,VkNet.Enums.Filters.ProfileFields,VkNet.Enums.SafetyEnums.NameCase)"/>"/>, 
            places.getById, places.search, places.getCheckins.
            Страница документации ВКонтакте <see href="http://vk.com/dev/database.getCitiesById"/>. 
            </remarks>
        </member>
        <member name="M:VkNet.Categories.DatabaseCategory.GetUniversities(System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает список высших учебных заведений.
            </summary>
            <param name="countryId">Идентификатор страны, учебные заведения которой необходимо вернуть.</param>
            <param name="cityId">Идентификатор города, учебные заведения которого необходимо вернуть.</param>
            <param name="query">Строка поискового запроса. Например, СПБ.</param>
            <param name="offset">Отступ, необходимый для получения определенного подмножества учебных заведений.</param>
            <param name="count">Количество учебных заведений, которое необходимо вернуть.</param>
            <returns>Список высших учебных заведений, удовлетворяющих заданным условиям.</returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/database.getUniversities"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.DatabaseCategory.GetSchools(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает список школ.
            </summary>
            <param name="cityId">Идентификатор города, школы которого необходимо вернуть.</param>
            <param name="query">Строка поискового запроса. Например, гимназия.</param>
            <param name="offset">Отступ, необходимый для получения определенного подмножества школ.</param>
            <param name="count">Количество школ, которое необходимо вернуть.</param>
            <returns>Cписок школ.</returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/database.getSchools"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.DatabaseCategory.GetFaculties(System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает список факультетов.
            </summary>
            <param name="universityId">Идентификатор университета, факультеты которого необходимо получить.</param>
            <param name="count">Отступ, необходимый для получения определенного подмножества факультетов.</param>
            <param name="offset">Количество факультетов которое необходимо получить.</param>
            <returns>Cписок факультетов.</returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/database.getFaculties"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.DatabaseCategory.GetSchoolClasses(System.Int64)">
            <summary>
            Возвращает список классов, характерных для школ определенной страны.
            </summary>
            <param name="countryId">Идентификатор страны, доступные классы в которой необходимо вернуть.</param>
            <returns>Возвращает массив, каждый элемент которого представляет собой пару: идентификатор и строковое обозначение класса.</returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/database.getSchoolClasses"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.DatabaseCategory.GetChairs(System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает список кафедр университета по указанному факультету.
            </summary>
            <param name="facultyId">Идентификатор факультета, кафедры которого необходимо получить.</param>
            <param name="count">Количество кафедр которое необходимо получить.</param>
            <param name="offset">Отступ, необходимый для получения определенного подмножества кафедр.</param>
            <returns>
            Возвращает массив, каждый элемент которого представляет собой пару: идентификатор и строковое обозначение класса.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/database.getChairs" />.
            </remarks>
        </member>
        <member name="T:VkNet.Categories.FaveCategory">
            <summary>
            Категория работы с закладками.
            </summary>
        </member>
        <member name="F:VkNet.Categories.FaveCategory._vk">
            <summary>
            API
            </summary>
        </member>
        <member name="M:VkNet.Categories.FaveCategory.#ctor(VkNet.VkApi)">
            <summary>
            Методы для работы с закладками.
            </summary>
            <param name="vk">API.</param>
        </member>
        <member name="M:VkNet.Categories.FaveCategory.GetUsers(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает список пользователей, добавленных текущим пользователем в закладки.
            </summary>
            <param name="offset">Смещение, необходимое для выборки определенного подмножества пользователей. По умолчанию — 0. положительное число (Положительное число).</param>
            <param name="count">Количество пользователей, информацию о которых необходимо вернуть. положительное число, по умолчанию 50 (Положительное число, по умолчанию 50).</param>
            <returns>
            После успешного выполнения возвращает список объектов пользователей.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/fave.getUsers" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.FaveCategory.GetPhotos(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Возвращает фотографии, на которых текущий пользователь поставил отметку "Мне нравится".
            </summary>
            <param name="offset">Смещение, необходимое для выборки определенного подмножества фотографий.
            По умолчанию 0. положительное число (Положительное число).</param>
            <param name="count">Число фотографий, информацию о которых необходимо вернуть. положительное число, по умолчанию 50 (Положительное число, по умолчанию 50).</param>
            <param name="photoSizes">Параметр, указывающий нужно ли возвращать ли доступные размеры фотографии в специальном формате. флаг, может принимать значения 1 или 0 (Флаг, может принимать значения 1 или 0).</param>
            <returns>
            После успешного выполнения возвращает список объектов фотографий.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/fave.getPhotos" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.FaveCategory.GetPosts(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает записи, на которых текущий пользователь поставил отметку «Мне нравится».
            </summary>
            <param name="offset">Смещение, необходимо для выборки определенного подмножества записей. По умолчанию — 0. положительное число (Положительное число).</param>
            <param name="count">Количество записей, информацию о которых нужно вернуть (но не более 100). положительное число, по умолчанию 50 (Положительное число, по умолчанию 50).</param>
            <returns>
            После успешного выполнения возвращает список объектов записей на стене.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/fave.getPosts" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.FaveCategory.GetPostsEx(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает записи, на которых текущий пользователь поставил отметку «Мне нравится».
            </summary>
            <param name="offset">Смещение, необходимо для выборки определенного подмножества записей. По умолчанию — 0. положительное число (Положительное число).</param>
            <param name="count">Количество записей, информацию о которых нужно вернуть (но не более 100). положительное число, по умолчанию 50 (Положительное число, по умолчанию 50).</param>
            <returns>
            После успешного выполнения возвращает список объектов записей на стене.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/fave.getPosts" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.FaveCategory.GetVideos(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает список видеозаписей, на которых текущий пользователь поставил отметку «Мне нравится».
            </summary>
            <param name="offset">Смещение, необходимое для выборки определенного подмножества видеозаписей. положительное число (Положительное число).</param>
            <param name="count">Количество видеозаписей, информацию о которых необходимо вернуть. положительное число, по умолчанию 50 (Положительное число, по умолчанию 50).</param>
            <returns>
            После успешного выполнения возвращает список объектов видеозаписей.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/fave.getVideos" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.FaveCategory.GetVideosEx(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает список видеозаписей, на которых текущий пользователь поставил отметку «Мне нравится».
            </summary>
            <param name="offset">Смещение, необходимое для выборки определенного подмножества видеозаписей. положительное число (Положительное число).</param>
            <param name="count">Количество видеозаписей, информацию о которых необходимо вернуть. положительное число, по умолчанию 50 (Положительное число, по умолчанию 50).</param>
            <returns>
            После успешного выполнения возвращает список объектов видеозаписей.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/fave.getVideos" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.FaveCategory.GetLinks(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает ссылки, добавленные в закладки текущим пользователем.
            </summary>
            <param name="offset">Смещение, необходимое для выборки определенного подмножества ссылок. положительное число (Положительное число).</param>
            <param name="count">Количество ссылок, информацию о которых необходимо вернуть. положительное число, по умолчанию 50 (Положительное число, по умолчанию 50).</param>
            <returns>
            После успешного выполнения возвращает общее количество ссылок и массив объектов link, каждый из которых содержит поля id, url, title, description, photo_50 и photo_100.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/fave.getLinks" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.FaveCategory.AddUser(System.Int64)">
            <summary>
            Добавляет пользователя в закладки.
            </summary>
            <param name="userId">Идентификатор пользователя, которого нужно добавить в закладки. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <returns>
            В случае успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/fave.addUser" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.FaveCategory.RemoveUser(System.Int64)">
            <summary>
            Удаляет пользователя из закладок.
            </summary>
            <param name="userId">Идентификатор пользователя, которого нужно удалить из закладок. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <returns>
            В случае успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/fave.removeUser" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.FaveCategory.AddGroup(System.Int64)">
            <summary>
            Добавляет сообщество в закладки.
            </summary>
            <param name="groupId">Идентификатор сообщества, которое нужно добавить в закладки. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <returns>
            В случае успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/fave.addGroup" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.FaveCategory.RemoveGroup(System.Int64)">
            <summary>
            Удаляет сообщество из закладок.
            </summary>
            <param name="groupId">Идентификатор сообщества, которое нужно удалить из закладок. положительное число, обязательный параметр (Положительное число, обязательный параметр).</param>
            <returns>
            В случае успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/fave.removeGroup" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.FaveCategory.AddLink(System.Security.Policy.Url,System.String)">
            <summary>
            Добавляет ссылку в закладки.
            </summary>
            <param name="link">Адрес добавляемой ссылки. Поддерживаются только внутренние ссылки на http://vk.com/. строка, обязательный параметр (Строка, обязательный параметр).</param>
            <param name="text">Текст ссылки. строка (Строка).</param>
            <returns>
            В случае успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/fave.addLink" />.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.FaveCategory.RemoveLink(System.String)">
            <summary>
            Удаляет ссылку из закладок.
            </summary>
            <param name="linkId">Идентификатор ссылки, которую нужно удалить, полученный методом fave.getLinks. строка, обязательный параметр (Строка, обязательный параметр).</param>
            <returns>
            В случае успешного выполнения возвращает <c>true</c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/fave.removeLink" />.
            </remarks>
        </member>
        <member name="T:VkNet.Categories.UtilsCategory">
            <summary>
            Служебные методы.
            </summary>
        </member>
        <member name="M:VkNet.Categories.UtilsCategory.CheckLink(System.String)">
            <summary>
            Возвращает информацию о том, является ли внешняя ссылка заблокированной на сайте ВКонтакте.
            </summary>
            <param name="url">Внешняя ссылка, которую необходимо проверить.</param>
            <returns>Статус ссылки</returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/utils.checkLink"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.UtilsCategory.CheckLink(System.Uri)">
            <summary>
            Возвращает информацию о том, является ли внешняя ссылка заблокированной на сайте ВКонтакте.
            </summary>
            <param name="url">Внешняя ссылка, которую необходимо проверить.</param>
            <returns>Статус ссылки</returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/utils.checkLink"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.UtilsCategory.ResolveScreenName(System.String)">
            <summary>
            Определяет тип объекта (пользователь, сообщество, приложение) и его идентификатор по короткому имени ScreenName.
            </summary>
            <param name="screenName">Короткое имя</param>
            <returns>Тип объекта</returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/utils.resolveScreenName"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Categories.UtilsCategory.GetServerTime">
            <summary>
            Возвращает текущее время на сервере ВКонтакте в unixtime.
            </summary>
            <returns>Время на сервере ВКонтакте в unixtime</returns>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/utils.getServerTime"/>.
            </remarks>
        </member>
        <member name="T:VkNet.Enums.DocFilter">
            <summary>
            Фильтр по типу документа. 
            </summary>
        </member>
        <member name="F:VkNet.Enums.DocFilter.Text">
            <summary>
            1 - текстовые документы
            </summary>
        </member>
        <member name="F:VkNet.Enums.DocFilter.Archive">
            <summary>
            2 - архивы
            </summary>
        </member>
        <member name="F:VkNet.Enums.DocFilter.Gif">
            <summary>
            3 - gif
            </summary>
        </member>
        <member name="F:VkNet.Enums.DocFilter.Image">
            <summary>
            4 - изображения
            </summary>
        </member>
        <member name="F:VkNet.Enums.DocFilter.Audio">
            <summary>
            5 - аудио
            </summary>
        </member>
        <member name="F:VkNet.Enums.DocFilter.Video">
            <summary>
            6 - видео
            </summary>
        </member>
        <member name="F:VkNet.Enums.DocFilter.EBook">
            <summary>
            7 - электронные книги
            </summary>
        </member>
        <member name="F:VkNet.Enums.DocFilter.Unknown">
            <summary>
            8 - неизвестно
            </summary>
        </member>
        <member name="T:VkNet.Enums.SafetyEnums.FeedType">
            <summary>
            Порядок сортировки членов группы.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.FeedType.Photo">
            <summary>
            По возрастанию численных значений идентификаторов.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.FeedType.PhotoTag">
            <summary>
            По убыванию численных значений идентификаторов.
            </summary>
        </member>
        <member name="T:VkNet.Enums.SafetyEnums.VideoCatalogItemType">
            <summary>
            Тип элемента каталога.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.VideoCatalogItemType.Video">
            <summary>
            Видеоролик.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.VideoCatalogItemType.Album">
            <summary>
            Альбом.
            </summary>
        </member>
        <member name="M:VkNet.Enums.SafetyEnums.VideoCatalogItemType.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Enums.SafetyEnums.VideoCatalogType">
            <summary>
            Возможные значения параметра VideoCatalogType, задающего внешний вид окна авторизации.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.VideoCatalogType.Channel">
            <summary>
            Видеозаписи сообщества.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.VideoCatalogType.Category">
            <summary>
            Подборки видеозаписей.
            </summary>
        </member>
        <member name="M:VkNet.Enums.SafetyEnums.VideoCatalogType.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Enums.SafetyEnums.PostType">
            <summary>
            Тип записи post, copy, reply, postpone, suggest
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.PostType.Post">
            <summary>
            Популярные за день (по умолчанию);
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.PostType.Copy">
            <summary>
            По посещаемости
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.PostType.Reply">
            <summary>
            По посещаемости
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.PostType.Postpone">
            <summary>
            По посещаемости
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.PostType.Suggest">
            <summary>
            По посещаемости
            </summary>
        </member>
        <member name="M:VkNet.Enums.SafetyEnums.PostType.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Enums.SafetyEnums.FriendsFilter">
            <summary>
            Типы предлагаемых друзей, которые нужно вернуть, перечисленные через запятую. 
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.FriendsFilter.Mutual">
            <summary>
            Пользователи, с которыми много общих друзей; 
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.FriendsFilter.Contacts">
            <summary>
            Пользователи, найденные с помощью метода account.importContacts; 
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.FriendsFilter.MutualContacts">
            <summary>
            Пользователи, которые импортировали те же контакты, что и текущий пользователь, используя метод account.importContacts;
            </summary>
        </member>
        <member name="T:VkNet.Enums.SafetyEnums.Deactivated">
            <summary>
            Возможные значения параметра display, задающего внешний вид окна авторизации.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.Deactivated.Deleted">
            <summary>
            Удалено.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.Deactivated.Banned">
            <summary>
            Заблокировано.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.Deactivated.Activated">
            <summary>
            Активно.
            </summary>
        </member>
        <member name="M:VkNet.Enums.SafetyEnums.Deactivated.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.Platform.Android">
            <summary>
            Android.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.Platform.IPhone">
            <summary>
            iPhone.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.Platform.WindowsPhone">
            <summary>
            wphone.
            </summary>
        </member>
        <member name="M:VkNet.Enums.SafetyEnums.Platform.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Enums.SafetyEnums.RelativeType">
            <summary>
            Тип родственных связей.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.RelativeType.Sibling">
            <summary>
            Брат/Сестра.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.RelativeType.Parent">
            <summary>
            Родитель.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.RelativeType.Child">
            <summary>
            Ребенок.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.RelativeType.Grandparent">
            <summary>
            Дедушка/Бабушка.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.RelativeType.Grandchild">
            <summary>
            Внук.
            </summary>
        </member>
        <member name="M:VkNet.Enums.SafetyEnums.RelativeType.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Enums.SafetyEnums.CommentObjectType">
            <summary>
            Тип комментариев.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.CommentObjectType.Post">
            <summary>
            Запись на стене пользователя или группы.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.CommentObjectType.Photo">
            <summary>
            Фотография.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.CommentObjectType.Video">
            <summary>
            Видеозапись.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.CommentObjectType.Topic">
            <summary>
            Обсуждение.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.CommentObjectType.Note">
            <summary>
            Заметка.
            </summary>
        </member>
        <member name="T:VkNet.Enums.SafetyEnums.PhotoSearchRadius">
            <summary>
            Радиус поиска в метрах.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.PhotoSearchRadius.Ten">
            <summary>
            10.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.PhotoSearchRadius.OneHundred">
            <summary>
            100.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.PhotoSearchRadius.Eighty">
            <summary>
            800.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.PhotoSearchRadius.SixThousand">
            <summary>
            6000.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.PhotoSearchRadius.FiftyThousand">
            <summary>
            50000.
            </summary>
        </member>
        <member name="T:VkNet.Enums.SafetyEnums.PhotoSizeType">
            <summary>
            Порядок сортировки членов группы.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.PhotoSizeType.S">
            <summary>
            Пропорциональная копия изображения с максимальной шириной 75px.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.PhotoSizeType.M">
            <summary>
            Пропорциональная копия изображения с максимальной шириной 130px.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.PhotoSizeType.X">
            <summary>
            Пропорциональная копия изображения с максимальной шириной 604px.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.PhotoSizeType.O">
            <summary>
            Если соотношение "ширина/высота" исходного изображения меньше или равно 3:2, то пропорциональная копия с максимальной шириной 130px. Если соотношение "ширина/высота" больше 3:2, то копия обрезанного слева изображения с максимальной шириной 130px и соотношением сторон 3:2.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.PhotoSizeType.P">
            <summary>
            Если соотношение "ширина/высота" исходного изображения меньше или равно 3:2, то пропорциональная копия с максимальной шириной 200px. Если соотношение "ширина/высота" больше 3:2, то копия обрезанного слева и справа изображения с максимальной шириной 200px и соотношением сторон 3:2.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.PhotoSizeType.Q">
            <summary>
            Если соотношение "ширина/высота" исходного изображения меньше или равно 3:2, то пропорциональная копия с максимальной шириной 320px. Если соотношение "ширина/высота" больше 3:2, то копия обрезанного слева и справа изображения с максимальной шириной 320px и соотношением сторон 3:2.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.PhotoSizeType.R">
            <summary>
            Если соотношение "ширина/высота" исходного изображения меньше или равно 3:2, то пропорциональная копия с максимальной шириной 510px. Если соотношение "ширина/высота" больше 3:2, то копия обрезанного слева и справа изображения с максимальной шириной 510px и соотношением сторон 3:2.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.PhotoSizeType.Y">
            <summary>
            Пропорциональная копия изображения с максимальной стороной 807px.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.PhotoSizeType.Z">
            <summary>
            Пропорциональная копия изображения с максимальным размером 1280x1024.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.PhotoSizeType.W">
            <summary>
            Пропорциональная копия изображения с максимальным размером 2560x2048px.
            </summary>
        </member>
        <member name="M:VkNet.Enums.SafetyEnums.PhotoSizeType.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Enums.SafetyEnums.NewsObjectTypes">
            <summary>
            Названия списков новостей, которые необходимо получить.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.NewsObjectTypes.Wall">
            <summary>
            Запись на стене.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.NewsObjectTypes.Tag">
            <summary>
            Отметка на фотографии.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.NewsObjectTypes.ProfilePhoto">
            <summary>
            Фотография профиля.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.NewsObjectTypes.Video">
            <summary>
            Видеозапись.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.NewsObjectTypes.Photo">
            <summary>
            Фотография.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.NewsObjectTypes.Audio">
            <summary>
            Аудиозапись.
            </summary>
        </member>
        <member name="M:VkNet.Enums.SafetyEnums.NewsObjectTypes.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Enums.SafetyEnums.LikesFilter">
            <summary>
            Указывает, следует ли вернуть всех пользователей, добавивших объект в список "Мне нравится" или только тех, которые рассказали о нем друзьям
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.LikesFilter.Likes">
            <summary>
            Возвращать информацию обо всех пользователях
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.LikesFilter.Copies">
            <summary>
            Возвращать информацию только о пользователях, рассказавших об объекте друзьям.
            </summary>
        </member>
        <member name="M:VkNet.Enums.SafetyEnums.LikesFilter.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Enums.SafetyEnums.PostTypeOrder">
            <summary>
            Способ сортировки приложений
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.PostTypeOrder.Post">
            <summary>
            Популярные за день (по умолчанию);
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.PostTypeOrder.Copy">
            <summary>
            По посещаемости
            </summary>
        </member>
        <member name="M:VkNet.Enums.SafetyEnums.PostTypeOrder.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Enums.SafetyEnums.Privacy">
            <summary>
            Уровень доступа к комментированию альбома
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.Privacy.All">
            <summary>
            Доступно всем пользователям.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.Privacy.Friends">
            <summary>
            Доступно друзьям текущего пользователя.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.Privacy.FriendsOfFriends">
            <summary>
            Доступно друзьям и друзьям друзей.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.Privacy.FriendsOfFriendsOnly">
            <summary>
            Доступно друзьям друзей текущего пользователя.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.Privacy.Nobody">
            <summary>
            Недоступно никому.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.Privacy.OnlyMe">
            <summary>
            Доступно только мне.
            </summary>
        </member>
        <member name="M:VkNet.Enums.SafetyEnums.Privacy.AvailableForList(System.Int64)">
            <summary>
            Доступно для списка
            </summary>
            <param name="number">Номер списка.</param>
            <returns>Номер списка.</returns>
        </member>
        <member name="M:VkNet.Enums.SafetyEnums.Privacy.UnAvailableForList(System.Int64)">
            <summary>
            Недоступно для списка
            </summary>
            <param name="number">Номер списка.</param>
            <returns>Номер списка.</returns>
        </member>
        <member name="M:VkNet.Enums.SafetyEnums.Privacy.AvailableForUser(System.Int64)">
            <summary>
            Доступно для пользователя
            </summary>
            <param name="number">Номер списка.</param>
            <returns>Номер списка.</returns>
        </member>
        <member name="M:VkNet.Enums.SafetyEnums.Privacy.UnAvailableForUser(System.Int64)">
            <summary>
            Недоступно для пользователя
            </summary>
            <param name="number">Номер списка.</param>
            <returns>Номер списка.</returns>
        </member>
        <member name="M:VkNet.Enums.SafetyEnums.Privacy.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Enums.SafetyEnums.Services">
            <summary>
            Сервисы
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.Services.Email">
            <summary>
            The email
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.Services.Phone">
            <summary>
            The phone
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.Services.Twitter">
            <summary>
            The twitter
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.Services.Facebook">
            <summary>
            The facebook
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.Services.Odnoklassniki">
            <summary>
            The odnoklassniki
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.Services.Instagram">
            <summary>
            The instagram
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.Services.Google">
            <summary>
            The google
            </summary>
        </member>
        <member name="T:VkNet.Enums.SafetyEnums.UserSection">
            <summary>
            Разделы среди которых нужно осуществить поиск, перечисленные через запятую: friends – искать среди друзей subscriptions – искать среди друзей и подписок пользователя список строк, разделенных через запятую.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.UserSection.Friends">
            <summary>
            Искать среди друзей.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.UserSection.Subscriptions">
            <summary>
            Искать среди друзей и подписок пользователя список строк, разделенных через запятую.
            </summary>
        </member>
        <member name="T:VkNet.Enums.SafetyEnums.NewsTypes">
            <summary>
            Названия списков новостей, которые необходимо получить.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.NewsTypes.Post">
            <summary>
            Новые записи со стен.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.NewsTypes.Photo">
            <summary>
            Новые фотографии.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.NewsTypes.PhotoTag">
            <summary>
            Новые отметки на фотографиях.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.NewsTypes.WallPhoto">
            <summary>
            Новые фотографии на стенах.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.NewsTypes.Friend">
            <summary>
            Новые друзья.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.NewsTypes.Note">
            <summary>
            Новые заметки.
            </summary>
        </member>
        <member name="M:VkNet.Enums.SafetyEnums.NewsTypes.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Enums.SafetyEnums.LikeObjectType">
            <summary>
            Тип объекта (исп. в категории Likes)
            </summary>
            <remarks>
            Возможные типы:
            post — запись на стене пользователя или группы;
            comment — комментарий к записи на стене;
            photo — фотография;
            audio — аудиозапись;
            video — видеозапись;
            note — заметка;
            market — товар;
            photo_comment — комментарий к фотографии;
            video_comment — комментарий к видеозаписи;
            topic_comment — комментарий в обсуждении;
            market_comment — комментарий к товару;
            </remarks>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.LikeObjectType.Post">
            <summary>
            Запись на стене пользователя или группы
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.LikeObjectType.Comment">
            <summary>
            Комментарий к записи на стене
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.LikeObjectType.Photo">
            <summary>
            Фотография
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.LikeObjectType.Audio">
            <summary>
            Аудиозапись
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.LikeObjectType.Video">
            <summary>
            Видеозапись
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.LikeObjectType.Note">
            <summary>
            Заметка
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.LikeObjectType.PhotoComment">
            <summary>
            Комментарий к фотографии
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.LikeObjectType.VideoComment">
            <summary>
            Комментарий к видеозаписи
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.LikeObjectType.TopicComment">
            <summary>
            Комментарий в обсуждении
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.LikeObjectType.SitePage">
            <summary>
            Страница сайта, на котором установлен виджет «Мне нравится»
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.LikeObjectType.Market">
            <summary>
            Товар
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.LikeObjectType.MarketComment">
            <summary>
            Комментарий к товару.
            </summary>
        </member>
        <member name="T:VkNet.Enums.SafetyEnums.PhotoAlbumType">
            <summary>
            Тип служебного альбома с фотографиями
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.PhotoAlbumType.Wall">
            <summary>
            Фотографии со стены
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.PhotoAlbumType.Profile">
            <summary>
            Аватары
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.PhotoAlbumType.Saved">
            <summary>
            Сохраненные фотографии
            </summary>
        </member>
        <member name="M:VkNet.Enums.SafetyEnums.PhotoAlbumType.Id(System.Int64)">
            <summary>
            Идентификатор альбома
            </summary>
            <param name="number">Номер списка.</param>
            <returns>Номер списка.</returns>
        </member>
        <member name="T:VkNet.Enums.SafetyEnums.PhotoFeedType">
            <summary>
            Тип канала новостей.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.PhotoFeedType.Photo">
            <summary>
            Фото.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.PhotoFeedType.PhotoTag">
            <summary>
            Тег фото.
            </summary>
        </member>
        <member name="T:VkNet.Enums.SafetyEnums.SafetyEnum`1">
            <summary>
            Аналог enum, типобезопасен.
            </summary>
            <typeparam name="TFilter">Непосредственно наследник</typeparam>
        </member>
        <member name="M:VkNet.Enums.SafetyEnums.SafetyEnum`1.#ctor">
            <summary>
            Аналог enum, типобезопасен.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.SafetyEnum`1.PossibleValues">
            <summary>
            Возможные значения
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.SafetyEnum`1._mask">
            <summary>
            Маска.
            </summary>
        </member>
        <member name="M:VkNet.Enums.SafetyEnums.SafetyEnum`1.CreateFromMask(System.UInt64)">
            <summary>
            Создать из маски.
            </summary>
            <param name="mask">Маска.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">mask</exception>
        </member>
        <member name="P:VkNet.Enums.SafetyEnums.SafetyEnum`1.Mask">
            <summary>
            Маска.
            </summary>
        </member>
        <member name="M:VkNet.Enums.SafetyEnums.SafetyEnum`1.RegisterPossibleValue(System.UInt64,System.String)">
            <summary>
            Регистрирует возможное значение.
            </summary>
            <param name="mask">Маска.</param>
            <param name="value">Значение.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">Mask must be a power of 2 (i.e. only one bit must be equal to 1);mask</exception>
        </member>
        <member name="M:VkNet.Enums.SafetyEnums.SafetyEnum`1.RegisterPossibleValue(System.String)">
            <summary>
            Регистрирует возможное значение.
            </summary>
            <param name="value">Значение.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">Mask must be a power of 2 (i.e. only one bit must be equal to 1);mask</exception>
        </member>
        <member name="M:VkNet.Enums.SafetyEnums.SafetyEnum`1.ToString">
            <summary>
            Преобразовать в строку.
            </summary>
        </member>
        <member name="M:VkNet.Enums.SafetyEnums.SafetyEnum`1.op_Equality(VkNet.Enums.SafetyEnums.SafetyEnum{`0},VkNet.Enums.SafetyEnums.SafetyEnum{`0})">
            <summary>
            Реализация оператора ==.
            </summary>
            <param name="left">Левая часть.</param>
            <param name="right">Правая часть.</param>
            <returns>
            Результат.
            </returns>
        </member>
        <member name="M:VkNet.Enums.SafetyEnums.SafetyEnum`1.op_Inequality(VkNet.Enums.SafetyEnums.SafetyEnum{`0},VkNet.Enums.SafetyEnums.SafetyEnum{`0})">
            <summary>
            Реализация оператора !=.
            </summary>
            <param name="left">Левая часть.</param>
            <param name="right">Правая часть.</param>
            <returns>
            Результат.
            </returns>
        </member>
        <member name="M:VkNet.Enums.SafetyEnums.SafetyEnum`1.Equals(VkNet.Enums.SafetyEnums.SafetyEnum{`0})">
            <summary>
            Сравнение с другим перечислением.
            </summary>
            <param name="other">Другое перечисление.</param>
            <returns></returns>
        </member>
        <member name="M:VkNet.Enums.SafetyEnums.SafetyEnum`1.Equals(System.Object)">
            <summary>
            Сравнение с другим перечислением.
            </summary>
            <param name="obj">Другое перечисление.</param>
            <returns></returns>
        </member>
        <member name="M:VkNet.Enums.SafetyEnums.SafetyEnum`1.GetHashCode">
            <summary>
            Возвращает хэш-код для этого экземпляра.
            </summary>
            <returns>
            Хэш-код для этого экземпляра, подходит для использования в алгоритмах хэширования и структуры данных, как хэш-таблицы.
            </returns>
        </member>
        <member name="T:VkNet.Enums.SafetyEnums.CommentsSort">
            <summary>
            Порядок сортировки комментариев к записи.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.CommentsSort.Asc">
            <summary>
            В хронологическом порядке (от старых к новым).
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.CommentsSort.Desc">
            <summary>
            В порядке, обратном хронологическому (от новых к старым).
            </summary>
        </member>
        <member name="T:VkNet.Enums.SafetyEnums.Display">
            <summary>
            Возможные значения параметра display, задающего внешний вид окна авторизации.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.Display.Page">
            <summary>
            Обычная страница.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.Display.Popup">
            <summary>
            Всплывающее окно.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.Display.Wap">
            <summary>
            Для мобильных устройств.
            </summary>
        </member>
        <member name="T:VkNet.Enums.SafetyEnums.GroupsSort">
            <summary>
            Порядок сортировки членов группы.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.GroupsSort.IdAsc">
            <summary>
            По возрастанию численных значений идентификаторов.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.GroupsSort.IdDesc">
            <summary>
            По убыванию численных значений идентификаторов.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.GroupsSort.TimeAsc">
            <summary>
            По возрастанию времени присоединения к группе.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.GroupsSort.TimeDesc">
            <summary>
            По убыванию времени присоединения к группе.
            </summary>
        </member>
        <member name="T:VkNet.Enums.SafetyEnums.GroupType">
            <summary>
            Тип сообщества
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.GroupType.Page">
            <summary>
            Публичная страница.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.GroupType.Group">
            <summary>
            Группа.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.GroupType.Event">
            <summary>
            Мероприятие.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.GroupType.Undefined">
            <summary>
            Не определено.
            </summary>
        </member>
        <member name="T:VkNet.Enums.SafetyEnums.LinkAccessType">
            <summary>
            Возвращает информацию о том, является ли внешняя ссылка заблокированной на сайте ВКонтакте.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.LinkAccessType.NotBanned">
            <summary>
            Cсылка не заблокирована
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.LinkAccessType.Banned">
            <summary>
            Cсылка заблокирована
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.LinkAccessType.Processing">
            <summary>
            Cсылка проверяется; необходимо выполнить повторный запрос через несколько секунд
            </summary>
        </member>
        <member name="M:VkNet.Enums.SafetyEnums.LinkAccessType.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Enums.SafetyEnums.FriendsOrder">
            <summary>
            Порядок, в котором необходимо вернуть список друзей.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.FriendsOrder.Name">
            <summary>
            Сортировать по имени (работает только при переданном параметре fields).
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.FriendsOrder.Hints">
            <summary>
            Сортировать по рейтингу, аналогично тому, как друзья сортируются в разделе "Мои друзья".
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.FriendsOrder.Random">
            <summary>
            Возвращает друзей в случайном порядке.
            </summary>
        </member>
        <member name="T:VkNet.Enums.SafetyEnums.NameCase">
            <summary>
            Падеж.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.NameCase.Nom">
            <summary>
            Именительный.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.NameCase.Gen">
            <summary>
            Родительный.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.NameCase.Dat">
            <summary>
            Дательный.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.NameCase.Acc">
            <summary>
            Винительный.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.NameCase.Ins">
            <summary>
            Творительный.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.NameCase.Abl">
            <summary>
            Предложный.
            </summary>
        </member>
        <member name="T:VkNet.Enums.SafetyEnums.ReportType">
            <summary>
            Тип жалобы.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.ReportType.Porn">
            <summary>
            Порнография.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.ReportType.Spam">
            <summary>
            Рассылка спама.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.ReportType.Insult">
            <summary>
            Оскорбительное поведение.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.ReportType.Advertisment">
            <summary>
            Рекламная страница, засоряющая поиск.
            </summary>
        </member>
        <member name="T:VkNet.Enums.SafetyEnums.PostSourceType">
            <summary>
            На данный момент поддерживаются следующие типы источников записи на стене, значение которых указываются в поле type:
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.PostSourceType.Vk">
            <summary>
            Запись создана через основной интерфейс сайта (http://vk.com/).
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.PostSourceType.Widget">
            <summary>
            Запись создана через виджет на стороннем сайте.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.PostSourceType.Api">
            <summary>
            Запись создана приложением через API.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.PostSourceType.Rss">
            <summary>
            Запись создана посредством импорта RSS-ленты со стороннего сайта.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.PostSourceType.Sms">
            <summary>
            Запись создана посредством отправки SMS-сообщения на специальный номер.
            </summary>
        </member>
        <member name="M:VkNet.Enums.SafetyEnums.PostSourceType.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Enums.SafetyEnums.OccupationType">
            <summary>
            Информация о текущем роде занятия пользователя.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.OccupationType.Work">
            <summary>
            Работа.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.OccupationType.School">
            <summary>
            Школа.
            </summary>
        </member>
        <member name="F:VkNet.Enums.SafetyEnums.OccupationType.University">
            <summary>
            ВУЗ.
            </summary>
        </member>
        <member name="M:VkNet.Enums.SafetyEnums.OccupationType.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Enums.MainSection">
            <summary>
            Информация о главной секции в сообществе
            </summary>
        </member>
        <member name="F:VkNet.Enums.MainSection.NoSection">
            <summary>
            Главная секция отсутствует
            </summary>
        </member>
        <member name="F:VkNet.Enums.MainSection.Photo">
            <summary>
            Фотографии
            </summary>
        </member>
        <member name="F:VkNet.Enums.MainSection.Post">
            <summary>
            Обсуждения
            </summary>
        </member>
        <member name="F:VkNet.Enums.MainSection.Audio">
            <summary>
            Аудиозаписи
            </summary>
        </member>
        <member name="F:VkNet.Enums.MainSection.Video">
            <summary>
            Видеозаписи
            </summary>
        </member>
        <member name="F:VkNet.Enums.MainSection.Goods">
            <summary>
            Товары
            </summary>
        </member>
        <member name="T:VkNet.Enums.ProductSort">
            <summary>
            Вид сортировки товаров.
            </summary>
        </member>
        <member name="F:VkNet.Enums.ProductSort.UserSort">
            <summary>
            0 — пользовательская расстановка
            </summary>
        </member>
        <member name="F:VkNet.Enums.ProductSort.ByAdd">
            <summary>
            1 — по дате добавления товара
            </summary>
        </member>
        <member name="F:VkNet.Enums.ProductSort.ByCost">
            <summary>
            2 — по цене 
            </summary>
        </member>
        <member name="F:VkNet.Enums.ProductSort.ByPopularity">
            <summary>
            3 — по популярности
            </summary>
        </member>
        <member name="T:VkNet.Enums.AccessPages">
            <summary>
            Уровень доступа для взаимодействия со страницей.
            </summary>
        </member>
        <member name="F:VkNet.Enums.AccessPages.Leaders">
            <summary>
            Только руководители сообщества.
            </summary>
        </member>
        <member name="F:VkNet.Enums.AccessPages.Participants">
            <summary>
            Только участники сообщества.
            </summary>
        </member>
        <member name="F:VkNet.Enums.AccessPages.All">
            <summary>
            Все пользователи.
            </summary>
        </member>
        <member name="T:VkNet.Enums.AppFilter">
            <summary>
            Тип фильтрации для приложений.
            </summary>
        </member>
        <member name="F:VkNet.Enums.AppFilter.Installed">
            <summary>
            Возвращает список установленных приложений (только для мобильных приложений),
            </summary>
        </member>
        <member name="F:VkNet.Enums.AppFilter.Featured">
            <summary>
            Возвращает список приложений, установленных в "Выбор редакции" (только для мобильных приложений)
            </summary>
        </member>
        <member name="T:VkNet.Enums.Filters.AccountFields">
            <summary>
            Поля информации о аккаунте.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.AccountFields.Country">
            <summary>
            Страна.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.AccountFields.HttpsRequired">
            <summary>
            Обязательно HTTPS.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.AccountFields.OwnPostsDefault">
            <summary>
            По умолчанию посты только владелец.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.AccountFields.NoWallReplies">
            <summary>
            Не комментировать стену.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.AccountFields.Intro">
            <summary>
            Вступление.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.AccountFields.Language">
            <summary>
            Язык.
            </summary>
        </member>
        <member name="T:VkNet.Enums.Filters.CountersFilter">
            <summary>
            Ôèëüòðû ñ÷åò÷èêîâ
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.CountersFilter.Friends">
            <summary>
            Êîëè÷åñòâî çàÿâîê â äðóçüÿ
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.CountersFilter.Messages">
            <summary>
            Êîëè÷åñòâî íåïðî÷èòàííûõ ñîîáùåíèé
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.CountersFilter.Photos">
            <summary>
            Êîëè÷åñòâî ôîòî
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.CountersFilter.Videos">
            <summary>
            Êîëè÷åñòâî âèäåî
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.CountersFilter.Notes">
            <summary>
            Êîëè÷åñòâî çàìåòîê
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.CountersFilter.Gifts">
            <summary>
            Êîëè÷åñòâî ïîäàðêîâ
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.CountersFilter.Events">
            <summary>
            Êîëè÷åñòâî ñîáûòèé
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.CountersFilter.Groups">
            <summary>
            Êîëè÷åñòâî ãðóïï
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.CountersFilter.Notifications">
            <summary>
            Êîëè÷åñòâî óâåäîìëåíèé
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.CountersFilter.All">
            <summary>
            Âñå ôèëüòðû
            </summary>
        </member>
        <member name="T:VkNet.Enums.Filters.GroupSubType">
            <summary>
            Вид публичной страницы: (учитывается только при создании публичных страниц)
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupSubType.PlaceOrSmallCompany">
            <summary>
            1 – Место или небольшая компания
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupSubType.OrganizationOrWebsite">
            <summary>
            2 – Компания, организация или веб-сайт
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupSubType.PersonOrTeam">
            <summary>
            3 – Известная личность или коллектив
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupSubType.ProductOrProducts">
            <summary>
            4 – Произведение или продукция
            </summary>
        </member>
        <member name="T:VkNet.Enums.Filters.UsersFields">
            <summary>
            Описание дополнительных полей сообщества, используемых в параметре fields (например, в методе <see cref="M:VkNet.Categories.GroupsCategory.Get(System.Int64,System.Boolean,VkNet.Enums.Filters.GroupsFilters,VkNet.Enums.Filters.GroupsFields,System.UInt32,System.UInt32)"/>).
            См. описание <see href="http://vk.com/dev/groups.get"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.UsersFields.Nickname">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.User.Nickname"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.UsersFields.Domain">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.User.Domain"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.UsersFields.Sex">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.User.Sex"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.UsersFields.BirthDate">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.User.BirthDate"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.UsersFields.City">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.User.City"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.UsersFields.Country">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.User.Country"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.UsersFields.Timezone">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.User.Timezone"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.UsersFields.Photo50">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.User.Photo50"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.UsersFields.Photo100">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.User.Photo100"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.UsersFields.Photo200Orig">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.User.Photo200Orig"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.UsersFields.Photo200">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.User.Photo200"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.UsersFields.Photo400Orig">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.User.Photo400Orig"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.UsersFields.PhotoMax">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.User.PhotoMax"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.UsersFields.PhotoMaxOrig">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.User.PhotoMaxOrig"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.UsersFields.HasMobile">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.User.HasMobile"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.UsersFields.Contacts">
            <summary>
            Для получения дополнительного поля <see cref="!:User.contacts"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.UsersFields.Education">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.User.Education"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.UsersFields.Online">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.User.Online"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.UsersFields.OnlineMobile">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.User.OnlineMobile"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.UsersFields.FriendLists">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.User.FriendLists"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.UsersFields.Relation">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.User.Relation"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.UsersFields.LastSeen">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.User.LastSeen"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.UsersFields.Status">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.User.Status"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.UsersFields.CanWritePrivateMessage">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.User.CanWritePrivateMessage"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.UsersFields.CanSeeAllPosts">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.User.CanSeeAllPosts"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.UsersFields.CanPost">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.User.CanPost"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.UsersFields.Universities">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.User.Universities"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.UsersFields.Connections">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.User.Connections"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.UsersFields.Site">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.User.Site"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.UsersFields.Schools">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.User.Schools"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.UsersFields.CanSeeAudio">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.User.CanSeeAudio"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.UsersFields.CommonCount">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.User.CommonCount"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.UsersFields.Relatives">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.User.Relatives"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.UsersFields.Counters">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.User.Counters"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.UsersFields.All">
            <summary>
            Для получения всех дополнительных полей.
            </summary>
        </member>
        <member name="T:VkNet.Enums.Filters.GroupSort">
            <summary>
            Сортировка результатов поиска.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupSort.Normal">
            <summary>
            Сортировать по умолчанию
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupSort.Growth">
            <summary>
            Сортировать по скорости роста
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupSort.Relation">
            <summary>
            Сортировать по отношению дневной посещаемости к количеству пользователей
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupSort.Likes">
            <summary>
            Сортировать по отношению количества лайков к количеству пользователей
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupSort.Comments">
            <summary>
            Сортировать по отношению количества комментариев к количеству пользователей
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupSort.Records">
            <summary>
            Сортировать по отношению количества записей в обсуждениях к количеству пользователей
            </summary>
        </member>
        <member name="T:VkNet.Enums.Filters.MultivaluedFilter`1">
            <summary>
            Фильтр, хранящий несколько значений и представляющий их в виде набора строковых представлений каждого возможного значения фильтра.
            Аналог enum с атрибутом [Flags].
            </summary>
            <typeparam name="TFilter">Непосредственно наследник</typeparam>
        </member>
        <member name="M:VkNet.Enums.Filters.MultivaluedFilter`1.op_BitwiseOr(VkNet.Enums.Filters.MultivaluedFilter{`0},VkNet.Enums.Filters.MultivaluedFilter{`0})">
            <summary>
            Объединяет наборы фильтров
            </summary>
            <param name="left">Первый набор фильтров</param>
            <param name="right">Второй набор фильтров</param>
            <returns>Объединенный набор фильтров</returns>
        </member>
        <member name="T:VkNet.Enums.Filters.GroupsFields">
            <summary>
            Описание дополнительных полей сообщества, используемых в параметре fields (например, в методе <see cref="M:VkNet.Categories.GroupsCategory.Get(System.Int64,System.Boolean,VkNet.Enums.Filters.GroupsFilters,VkNet.Enums.Filters.GroupsFields,System.UInt32,System.UInt32)"/>).
            См. описание <see href="http://vk.com/dev/groups.get"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupsFields.CityId">
            <summary>
            Для получения дополнительного поля <see cref="!:Group.CityId"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupsFields.CountryId">
            <summary>
            Для получения дополнительного поля <see cref="!:Group.CountryId"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupsFields.Place">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.Group.Place"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupsFields.Description">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.Group.Description"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupsFields.WikiPage">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.Group.WikiPage"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupsFields.MembersCount">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.Group.MembersCount"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupsFields.Counters">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.Group.Counters"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupsFields.StartDate">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.Group.StartDate"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupsFields.EndDate">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.Group.EndDate"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupsFields.CanPost">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.Group.CanPost"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupsFields.CanSeelAllPosts">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.Group.CanSeelAllPosts"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupsFields.CanUploadDocuments">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.Group.CanUploadDocuments"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupsFields.CanCreateTopic">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.Group.CanCreateTopic"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupsFields.Activity">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.Group.Activity"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupsFields.Status">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.Group.Status"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupsFields.Contacts">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.Group.Contacts"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupsFields.Links">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.Group.Links"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupsFields.FixedPostId">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.Group.FixedPostId"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupsFields.IsVerified">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.Group.IsVerified"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupsFields.Site">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.Group.Site"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupsFields.BanInfo">
            <summary>
            Для получения дополнительного поля <see cref="P:VkNet.Model.Group.BanInfo"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupsFields.All">
            <summary>
            Для получения всех дополнительных полей.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupsFields.AllUndocumented">
            <summary>
            Для получения всех дополнительных полей (оказалаось, что некоторые поля пропущены в документации).
            </summary>
        </member>
        <member name="T:VkNet.Enums.Filters.GroupsFilters">
            <summary>
            Фильтры сообществ пользователя.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupsFilters.Administrator">
            <summary>
            Вернуть все сообщества, в которых пользователь является администратором.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupsFilters.Editor">
            <summary>
            Вернуть все сообщества, в которых пользователь является администратором или редактором.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupsFilters.Moderator">
            <summary>
            Вернуть все сообщества, в которых пользователь является администратором, редактором или модератором.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupsFilters.Groups">
            <summary>
            Вернуть все группы, в которые входит пользователь.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupsFilters.Publics">
            <summary>
            Вернуть все публичные страницы пользователя ???
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupsFilters.Events">
            <summary>
            Вернуть все события, в которых участвует пользователь.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.GroupsFilters.All">
            <summary>
            Вернуть все сообщества, в которых задействован пользователь.
            </summary>
        </member>
        <member name="T:VkNet.Enums.Filters.ProfileFields">
            <summary>
            Требуемые для получения поля профиля.
            См. описание <see href="http://vk.com/pages?oid=-1&amp;p=Описание_полей_параметра_fields"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.Uid">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.Id"/>. Это поле возвращается всегда, поэтому его можно не указывать.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.FirstName">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.FirstName"/>. Это поле возвращается всегда, поэтому его можно не указывать.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.LastName">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.LastName"/>. Это поле возвращается всегда, поэтому его можно не указывать.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.Sex">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.Sex"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.BirthDate">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.BirthDate"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.City">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.City"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.Country">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.Country"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.Photo50">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.Previews.Photo50"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.Photo100">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.Previews.Photo100"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.Photo200">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.Previews.Photo200"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.Photo200Orig">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.Previews.Photo200"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.Photo400Orig">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.Previews.Photo400"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.PhotoMax">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.Previews.PhotoMax"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.PhotoMaxOrig">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.Previews.PhotoMax"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.Online">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.Online"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.FriendLists">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.FriendLists"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.Domain">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.Domain"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.HasMobile">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.HasMobile"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.Contacts">
            <summary>
            Для получения полей <see cref="P:VkNet.Model.User.MobilePhone"/> и <see cref="P:VkNet.Model.User.HomePhone"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.Connections">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.Connections"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.Site">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.Site"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.Education">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.Education"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.Universities">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.Universities"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.Schools">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.Schools"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.CanPost">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.CanPost"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.CanSeeAllPosts">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.CanSeeAllPosts"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.CanSeeAudio">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.CanSeeAudio"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.CanWritePrivateMessage">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.CanWritePrivateMessage"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.Status">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.Status"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.LastSeen">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.LastSeen"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.CommonCount">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.CommonCount"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.Relation">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.Relation"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.Relatives">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.Relatives"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.Counters">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.Counters"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.Nickname">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.Nickname"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.Timezone">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.Timezone"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.Language">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.Language"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.OnlineMobile">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.OnlineMobile"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.OnlineApp">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.OnlineApp"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.RelationPartner">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.RelationPartner"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.StandInLife">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.StandInLife"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.Interests">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.Interests"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.Music">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.Music"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.Activities">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.Activities"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.Movies">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.Movies"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.Tv">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.Tv"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.Books">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.Books"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.Games">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.Games"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.About">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.About"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.Quotes">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.Quotes"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.InvitedBy">
            <summary>
            Для получения поля <see cref="P:VkNet.Model.User.InvitedBy"/>.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.All">
            <summary>
            Для получения всех документированных полей.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.ProfileFields.AllUndocumented">
            <summary>
            Для получения всех полей, вколючая недокументированные.
            </summary>
        </member>
        <member name="T:VkNet.Enums.Filters.Settings">
            <summary>
            Права доступа приложений.
            См. описание <see href="http://vk.com/pages?oid=-1&amp;p=Права_доступа_приложений"/>.
            </summary>
        </member>
        <member name="P:VkNet.Enums.Filters.Settings.Value">
            <summary>
            Объединенные права доступа.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.Settings.Notify">
            <summary>
            Пользователь разрешил отправлять ему уведомления.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.Settings.Friends">
            <summary>
            Доступ к друзьям.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.Settings.Photos">
            <summary>
            Доступ к фотографиям.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.Settings.Audio">
            <summary>
            Доступ к аудиозаписям.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.Settings.Video">
            <summary>
            Доступ к видеозаписям.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.Settings.Pages">
            <summary>
            Доступ к wiki-страницам.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.Settings.AddLinkToLeftMenu">
            <summary>
            Добавление ссылки на приложение в меню слева.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.Settings.Status">
            <summary>
            Доступ к статусу пользователя.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.Settings.Notes">
            <summary>
            Доступ заметкам пользователя.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.Settings.Messages">
            <summary>
            Доступ к расширенным методам работы с сообщениями.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.Settings.Wall">
            <summary>
            Доступ к обычным и расширенным методам работы со стеной.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.Settings.Ads">
            <summary>
            Доступ к расширенным методам работы с рекламным API.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.Settings.Offline">
            <summary>
            Доступ к API в любое время со стороннего сервера.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.Settings.Documents">
            <summary>
            Доступ к документам.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.Settings.Groups">
            <summary>
            Доступ к группам пользователя.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.Settings.Notifications">
            <summary>
            Доступ к оповещениям об ответах пользователю.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.Settings.Statistic">
            <summary>
            Доступ к статистике групп и приложений пользователя, администратором которых он является.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.Settings.Email">
            <summary>
            Доступ к email пользователя. Доступно только для сайтов.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.Settings.Market">
            <summary>
            Доступ к товарам. Доступно только для сайтов.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.Settings.All">
            <summary>
            Доступ ко всем возможным операциям (без Offline и NoHttps).
            </summary>
        </member>
        <member name="T:VkNet.Enums.Filters.SubscribeFilter">
            <summary>
            Список типов уведомлений.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.SubscribeFilter.Message">
            <summary>
            Сообщение.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.SubscribeFilter.Friend">
            <summary>
            Друг.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.SubscribeFilter.Call">
            <summary>
            Вызов.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.SubscribeFilter.Reply">
            <summary>
            Ответ.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.SubscribeFilter.Mention">
            <summary>
            Упоминание.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.SubscribeFilter.Group">
            <summary>
            Группа.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.SubscribeFilter.Like">
            <summary>
            Лайк.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.SubscribeFilter.All">
            <summary>
            Все.
            </summary>
        </member>
        <member name="T:VkNet.Enums.Filters.VideoFilters">
            <summary>
            Cписок критериев, по которым требуется отфильтровать видео.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.VideoFilters.Mp4">
            <summary>
            Возвращать видео в формате mp4 (воспроиводимое на iOS).
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.VideoFilters.Youtube">
            <summary>
            Возвращать youtube видео.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.VideoFilters.Vimeo">
            <summary>
            Возвращать vimeo видео.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.VideoFilters.Short">
            <summary>
            Возвращать короткие видеозаписи.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.VideoFilters.Long">
            <summary>
            Возвращать длинные видеозаписи
            </summary>
        </member>
        <member name="F:VkNet.Enums.Filters.VideoFilters.All">
            <summary>
            Возвращать все доступные виды видео.
            </summary>
        </member>
        <member name="T:VkNet.Enums.Iso3166">
            <summary>
            ISO 3166-1 alpha-2 — часть международного стандарта ISO 3166-1, определяющая двухсимвольные кодовые обозначения государств и зависимых территорий. 
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.AU">
            <summary>
            Австралия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.AT">
            <summary>
            Австрия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.AZ">
            <summary>
            Азербайджан.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.AX">
            <summary>
            Аландские острова.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.AL">
            <summary>
            Албания.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.DZ">
            <summary>
            Алжир.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.UM">
            <summary>
            Внешние малые острова (США).
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.VI">
            <summary>
            Американские Виргинские острова.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.AS">
            <summary>
            Американское Самоа.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.AI">
            <summary>
            Ангилья.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.AO">
            <summary>
            Ангола.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.AD">
            <summary>
            Андорра.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.AQ">
            <summary>
            Антарктида.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.AG">
            <summary>
            Антигуа и Барбуда.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.AR">
            <summary>
            Аргентина.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.AM">
            <summary>
            Армения.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.AW">
            <summary>
            Аруба.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.AF">
            <summary>
            Афганистан.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.BS">
            <summary>
            Багамы.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.BD">
            <summary>
            Бангладеш.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.BB">
            <summary>
            Барбадос.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.BH">
            <summary>
            Бахрейн.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.BZ">
            <summary>
            Белиз.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.BY">
            <summary>
            Белоруссия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.BE">
            <summary>
            Бельгия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.BJ">
            <summary>
            Бенин.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.BM">
            <summary>
            Бермуды.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.BG">
            <summary>
            Болгария.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.BO">
            <summary>
            Боливия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.BA">
            <summary>
            Босния и Герцеговина.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.BW">
            <summary>
            Ботсвана.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.BR">
            <summary>
            Бразилия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.IO">
            <summary>
            Британская территория в Индийском океане.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.VG">
            <summary>
            Британские Виргинские острова.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.BN">
            <summary>
            Бруней.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.BF">
            <summary>
            Буркина Фасо.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.BI">
            <summary>
            Бурунди.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.BT">
            <summary>
            Бутан.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.VU">
            <summary>
            Вануату.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.VA">
            <summary>
            Ватикан.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.GB">
            <summary>
            Великобритания.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.HU">
            <summary>
            Венгрия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.VE">
            <summary>
            Венесуэла.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.TL">
            <summary>
            Восточный Тимор.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.VN">
            <summary>
            Вьетнам.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.GA">
            <summary>
            Габон.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.HT">
            <summary>
            Гаити.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.GY">
            <summary>
            Гайана.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.GM">
            <summary>
            Гамбия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.GH">
            <summary>
            Гана.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.GP">
            <summary>
            Гваделупа.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.GT">
            <summary>
            Гватемала.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.GN">
            <summary>
            Гвинея.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.GW">
            <summary>
            Гвинея-Бисау.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.DE">
            <summary>
            Германия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.GI">
            <summary>
            Гибралтар.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.HN">
            <summary>
            Гондурас.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.HK">
            <summary>
            Гонконг.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.GD">
            <summary>
            Гренада.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.GL">
            <summary>
            Гренландия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.GR">
            <summary>
            Греция.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.GE">
            <summary>
            Грузия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.GU">
            <summary>
            Гуам.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.DK">
            <summary>
            Дания.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.CD">
            <summary>
            ДР Конго.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.DJ">
            <summary>
            Джибути.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.DM">
            <summary>
            Доминика.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.DO">
            <summary>
            Доминиканская Республика.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.EU">
            <summary>
            Европейский союз.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.EG">
            <summary>
            Египет.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.ZM">
            <summary>
            Замбия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.EH">
            <summary>
            Западная Сахара.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.ZW">
            <summary>
            Зимбабве.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.IL">
            <summary>
            Израиль.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.IN">
            <summary>
            Индия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.ID">
            <summary>
            Индонезия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.JO">
            <summary>
            Иордания.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.IQ">
            <summary>
            Ирак.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.IR">
            <summary>
            Иран.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.IE">
            <summary>
            Ирландия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.IS">
            <summary>
            Исландия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.ES">
            <summary>
            Испания.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.IT">
            <summary>
            Италия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.YE">
            <summary>
            Йемен.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.KP">
            <summary>
            КНДР.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.CV">
            <summary>
            Кабо-Верде.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.KZ">
            <summary>
            Казахстан.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.KY">
            <summary>
            Каймановы острова.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.KH">
            <summary>
            Камбоджа.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.CM">
            <summary>
            Камерун.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.CA">
            <summary>
            Канада.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.QA">
            <summary>
            Катар.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.KE">
            <summary>
            Кения.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.CY">
            <summary>
            Кипр.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.KG">
            <summary>
            Киргизия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.KI">
            <summary>
            Кирибати.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.CN">
            <summary>
            КНР.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.CC">
            <summary>
            Кокосовые острова.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.CO">
            <summary>
            Колумбия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.KM">
            <summary>
            Коморы.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.CR">
            <summary>
            Коста-Рика.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.CI">
            <summary>
            Кот-д’Ивуар.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.CU">
            <summary>
            Куба.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.KW">
            <summary>
            Кувейт.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.LA">
            <summary>
            Лаос.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.LV">
            <summary>
            Латвия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.LS">
            <summary>
            Лесото.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.LR">
            <summary>
            Либерия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.LB">
            <summary>
            Ливан.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.LY">
            <summary>
            Ливия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.LT">
            <summary>
            Литва.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.LI">
            <summary>
            Лихтенштейн.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.LU">
            <summary>
            Люксембург.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.MU">
            <summary>
            Маврикий.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.MR">
            <summary>
            Мавритания.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.MG">
            <summary>
            Мадагаскар.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.YT">
            <summary>
            Майотта.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.MO">
            <summary>
            Макао.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.MK">
            <summary>
            Республика Македония.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.MW">
            <summary>
            Малави.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.MY">
            <summary>
            Малайзия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.ML">
            <summary>
            Мали.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.MV">
            <summary>
            Мальдивы.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.MT">
            <summary>
            Мальта.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.MA">
            <summary>
            Марокко.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.MQ">
            <summary>
            Мартиника.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.MH">
            <summary>
            Маршалловы Острова.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.MX">
            <summary>
            Мексика.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.MZ">
            <summary>
            Мозамбик.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.MD">
            <summary>
            Молдавия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.MC">
            <summary>
            Монако.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.MN">
            <summary>
            Монголия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.MS">
            <summary>
            Монтсеррат.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.MM">
            <summary>
            Мьянма.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.NA">
            <summary>
            Намибия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.NR">
            <summary>
            Науру.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.NP">
            <summary>
            Непал.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.NE">
            <summary>
            Нигер.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.NG">
            <summary>
            Нигерия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.AN">
            <summary>
            Нидерландские Антильские острова.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.NL">
            <summary>
            Нидерланды.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.NI">
            <summary>
            Никарагуа.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.NU">
            <summary>
            Ниуэ.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.NC">
            <summary>
            Новая Каледония.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.NZ">
            <summary>
            Новая Зеландия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.NO">
            <summary>
            Норвегия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.AE">
            <summary>
            ОАЭ.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.OM">
            <summary>
            Оман.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.CX">
            <summary>
            Остров Рождества.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.CK">
            <summary>
            Острова Кука.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.HM">
            <summary>
            Херд и Макдональд.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.PK">
            <summary>
            Пакистан.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.PW">
            <summary>
            Палау.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.PS">
            <summary>
            Палестина.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.PA">
            <summary>
            Панама.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.PG">
            <summary>
            Папуа — Новая Гвинея.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.PY">
            <summary>
            Парагвай.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.PE">
            <summary>
            Перу.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.PN">
            <summary>
            Острова Питкэрн.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.PL">
            <summary>
            Польша.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.PT">
            <summary>
            Португалия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.PR">
            <summary>
            Пуэрто-Рико.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.CG">
            <summary>
            Республика Конго.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.RE">
            <summary>
            Реюньон.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.RU">
            <summary>
            Россия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.RW">
            <summary>
            Руанда.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.RO">
            <summary>
            Румыния.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.US">
            <summary>
            США.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.SV">
            <summary>
            Сальвадор.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.WS">
            <summary>
            Самоа.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.SM">
            <summary>
            Сан-Марино.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.ST">
            <summary>
            Сан-Томе и Принсипи.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.SA">
            <summary>
            Саудовская Аравия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.SZ">
            <summary>
            Свазиленд.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.SJ">
            <summary>
            Шпицберген и Ян-Майен.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.MP">
            <summary>
            Северные Марианские острова.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.SC">
            <summary>
            Сейшельские Острова.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.SN">
            <summary>
            Сенегал.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.VC">
            <summary>
            Сент-Винсент и Гренадины.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.KN">
            <summary>
            Сент-Китс и Невис.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.LC">
            <summary>
            Сент-Люсия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.PM">
            <summary>
            Сен-Пьер и Микелон.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.RS">
            <summary>
            Сербия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.CS">
            <summary>
            Сербия и Черногория (действовал до сентября 2006 года).
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.SG">
            <summary>
            Сингапур.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.SY">
            <summary>
            Сирия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.SK">
            <summary>
            Словакия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.SI">
            <summary>
            Словения.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.SB">
            <summary>
            Соломоновы Острова.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.SO">
            <summary>
            Сомали.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.SD">
            <summary>
            Судан.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.SR">
            <summary>
            Суринам.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.SL">
            <summary>
            Сьерра-Леоне.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.SU">
            <summary>
            СССР (действовал до сентября 1992 года).
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.TJ">
            <summary>
            Таджикистан.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.TH">
            <summary>
            Таиланд.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.TW">
            <summary>
            Китайская Республика.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.TZ">
            <summary>
            Танзания.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.TG">
            <summary>
            Того.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.TK">
            <summary>
            Токелау.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.TO">
            <summary>
            Тонга.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.TT">
            <summary>
            Тринидад и Тобаго.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.TV">
            <summary>
            Тувалу.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.TN">
            <summary>
            Тунис.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.TM">
            <summary>
            Туркмения.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.TR">
            <summary>
            Турция.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.UG">
            <summary>
            Уганда.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.UZ">
            <summary>
            Узбекистан.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.UA">
            <summary>
            Украина.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.UY">
            <summary>
            Уругвай.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.FO">
            <summary>
            Фарерские острова.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.FM">
            <summary>
            Микронезия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.FJ">
            <summary>
            Фиджи.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.PH">
            <summary>
            Филиппины.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.FI">
            <summary>
            Финляндия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.FK">
            <summary>
            Фолклендские острова.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.FR">
            <summary>
            Франция.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.GF">
            <summary>
            Французская Гвиана.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.PF">
            <summary>
            Французская Полинезия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.TF">
            <summary>
            Французские Южные и Антарктические Территории.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.HR">
            <summary>
            Хорватия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.CF">
            <summary>
            ЦАР.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.TD">
            <summary>
            Чад.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.ME">
            <summary>
            Черногория.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.CZ">
            <summary>
            Чехия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.CL">
            <summary>
            Чили.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.CH">
            <summary>
            Швейцария.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.SE">
            <summary>
            Швеция.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.LK">
            <summary>
            Шри-Ланка.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.EC">
            <summary>
            Эквадор.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.GQ">
            <summary>
            Экваториальная Гвинея.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.ER">
            <summary>
            Эритрея.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.EE">
            <summary>
            Эстония.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.ET">
            <summary>
            Эфиопия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.ZA">
            <summary>
            ЮАР.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.KR">
            <summary>
            Республика Корея.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.GS">
            <summary>
            Южная Георгия и Южные Сандвичевы острова.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.JM">
            <summary>
            Ямайка.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.JP">
            <summary>
            Япония.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.BV">
            <summary>
            Остров Буве.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.NF">
            <summary>
            Остров Норфолк.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.SH">
            <summary>
            Остров Святой Елены.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.TC">
            <summary>
            Тёркс и Кайкос.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Iso3166.WF">
            <summary>
            Уоллис и Футуна.
            </summary>
        </member>
        <member name="T:VkNet.Enums.MaritalStatus">
            <summary>
            Семейное положение: 1 — Не женат, 2 — Встречается, 3 — Помолвлен, 4 — Женат, 7 — Влюблён, 5 — Всё сложно, 6 — В активном поиске.
            </summary>
        </member>
        <member name="F:VkNet.Enums.MaritalStatus.Single">
            <summary>
            Не женат
            </summary>
        </member>
        <member name="F:VkNet.Enums.MaritalStatus.Meets">
            <summary>
            Встречается
            </summary>
        </member>
        <member name="F:VkNet.Enums.MaritalStatus.Engaged">
            <summary>
            Помолвлен
            </summary>
        </member>
        <member name="F:VkNet.Enums.MaritalStatus.Married">
            <summary>
            Женат
            </summary>
        </member>
        <member name="F:VkNet.Enums.MaritalStatus.ItsComplicated">
            <summary>
            Всё сложно
            </summary>
        </member>
        <member name="F:VkNet.Enums.MaritalStatus.TheActiveSearch">
            <summary>
            В активном поиске
            </summary>
        </member>
        <member name="F:VkNet.Enums.MaritalStatus.InLove">
            <summary>
            Влюблён
            </summary>
        </member>
        <member name="T:VkNet.Enums.AppPlatforms">
            <summary>
            Платформа для которой необходимо вернуть приложения.
            </summary>
            <remarks>
            По умолчанию используется web.
            </remarks>
        </member>
        <member name="F:VkNet.Enums.AppPlatforms.Ios">
            <summary>
            Популярные за день (по умолчанию);
            </summary>
        </member>
        <member name="F:VkNet.Enums.AppPlatforms.Android">
            <summary>
            По посещаемости
            </summary>
        </member>
        <member name="F:VkNet.Enums.AppPlatforms.WinPhone">
            <summary>
            По дате создания приложения
            </summary>
        </member>
        <member name="F:VkNet.Enums.AppPlatforms.Web">
            <summary>
            По скорости роста
            </summary>
        </member>
        <member name="T:VkNet.Enums.AppRequestType">
            <summary>
            Тип запроса для приложений
            </summary>
        </member>
        <member name="F:VkNet.Enums.AppRequestType.Invite">
            <summary>
            В случае если запрос отправляется пользователю, не установившему приложение
            </summary>
        </member>
        <member name="F:VkNet.Enums.AppRequestType.Request">
            <summary>
            В случае если пользователь уже установил приложение
            </summary>
        </member>
        <member name="T:VkNet.Enums.AppRatingType">
            <summary>
            Рейтинг приложений
            </summary>
        </member>
        <member name="F:VkNet.Enums.AppRatingType.Level">
            <summary>
            Рейтинг по уровням
            </summary>
        </member>
        <member name="F:VkNet.Enums.AppRatingType.Points">
            <summary>
            Рейтинг по очкам
            </summary>
        </member>
        <member name="T:VkNet.Enums.AppSort">
            <summary>
            Способ сортировки приложений
            </summary>
        </member>
        <member name="F:VkNet.Enums.AppSort.PopularToday">
            <summary>
            Популярные за день (по умолчанию);
            </summary>
        </member>
        <member name="F:VkNet.Enums.AppSort.Visitors">
            <summary>
            По посещаемости
            </summary>
        </member>
        <member name="F:VkNet.Enums.AppSort.CreateDate">
            <summary>
            По дате создания приложения
            </summary>
        </member>
        <member name="F:VkNet.Enums.AppSort.GrowthRate">
            <summary>
            По скорости роста
            </summary>
        </member>
        <member name="F:VkNet.Enums.AppSort.PopularWeek">
            <summary>
            Популярные за неделю.
            </summary>
        </member>
        <member name="T:VkNet.Enums.ContentAccess">
            <summary>
            Уровень доступа к содержимому.
            </summary>
        </member>
        <member name="F:VkNet.Enums.ContentAccess.Off">
            <summary>
            Выключены
            </summary>
        </member>
        <member name="F:VkNet.Enums.ContentAccess.Opened">
            <summary>
            Открытые
            </summary>
        </member>
        <member name="F:VkNet.Enums.ContentAccess.Restricted">
            <summary>
            Ограниченные
            </summary>
        </member>
        <member name="T:VkNet.Enums.AddFriendStatus">
            <summary>
            Статус, возвращаемый после отправки запроса на добавления в друзья
            </summary>
        </member>
        <member name="F:VkNet.Enums.AddFriendStatus.Unknown">
            <summary>
            Статус в случае ошибки ответа
            </summary>
        </member>
        <member name="F:VkNet.Enums.AddFriendStatus.Sended">
            <summary>
            Заявка на добавление данного пользователя в друзья отправлена
            </summary>
        </member>
        <member name="F:VkNet.Enums.AddFriendStatus.Accepted">
            <summary>
            Заявка на добавление в друзья от данного пользователя одобрена
            </summary>
        </member>
        <member name="F:VkNet.Enums.AddFriendStatus.Resubmit">
            <summary>
            Повторная отправка заявки
            </summary>
        </member>
        <member name="T:VkNet.Enums.AdminLevel">
            <summary>
            Административные полномочия пользователя в сообществе.
            </summary>
        </member>
        <member name="F:VkNet.Enums.AdminLevel.Moderator">
            <summary>
            Пользователь является модератором собщества.
            </summary>
        </member>
        <member name="F:VkNet.Enums.AdminLevel.Editor">
            <summary>
            Пользователь является редактором сообщества.
            </summary>
        </member>
        <member name="F:VkNet.Enums.AdminLevel.Administrator">
            <summary>
            Пользователь является администратором сообщества.
            </summary>
        </member>
        <member name="T:VkNet.Enums.Attitude">
            <summary>
            Отношение к чему-либо (алкоголю, курению и т.п.).
            </summary>
        </member>
        <member name="F:VkNet.Enums.Attitude.Unknown">
            <summary>
            Не указано.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Attitude.VeryNegative">
            <summary>
            Резко негативное.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Attitude.Negative">
            <summary>
            Негативное.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Attitude.Compromise">
            <summary>
            Компромиссное.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Attitude.Neutral">
            <summary>
            Нейтральное.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Attitude.Positive">
            <summary>
            Положительное.
            </summary>
        </member>
        <member name="T:VkNet.Enums.AudioGenre">
            <summary>
            Идентификаторы жанров музыки.
            </summary>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/audio_object#/dev/audio_genres"/>.
            </remarks>
        </member>
        <member name="F:VkNet.Enums.AudioGenre.Rock">
            <summary>
            Рок музыка.
            </summary>
        </member>
        <member name="F:VkNet.Enums.AudioGenre.Pop">
            <summary>
            Популярная музыка.
            </summary>
        </member>
        <member name="F:VkNet.Enums.AudioGenre.RapAndHipHop">
            <summary>
            Реп и хип-хоп.
            </summary>
        </member>
        <member name="F:VkNet.Enums.AudioGenre.EasyListening">
            <summary>
            Легкая музыка.
            </summary>
        </member>
        <member name="F:VkNet.Enums.AudioGenre.DanceAndHouse">
            <summary>
            Танцевальная и хаус музыка.
            </summary>
        </member>
        <member name="F:VkNet.Enums.AudioGenre.Instrumental">
            <summary>
            Инструментальная музыка.
            </summary>
        </member>
        <member name="F:VkNet.Enums.AudioGenre.Metal">
            <summary>
            Метал.
            </summary>
        </member>
        <member name="F:VkNet.Enums.AudioGenre.Alternative">
            <summary>
            Альтернативная музыка.
            </summary>
        </member>
        <member name="F:VkNet.Enums.AudioGenre.Dubstep">
            <summary>
            Дабстеп.
            </summary>
        </member>
        <member name="F:VkNet.Enums.AudioGenre.JazzAndBlues">
            <summary>
            Джаз и блюз.
            </summary>
        </member>
        <member name="F:VkNet.Enums.AudioGenre.DrumAndBass">
            <summary>
            Драм-н-бэйс.
            </summary>
        </member>
        <member name="F:VkNet.Enums.AudioGenre.Trance">
            <summary>
            Транс.
            </summary>
        </member>
        <member name="F:VkNet.Enums.AudioGenre.Chanson">
            <summary>
            Шансон.
            </summary>
        </member>
        <member name="F:VkNet.Enums.AudioGenre.Ethnic">
            <summary>
            Этническая музыка.
            </summary>
        </member>
        <member name="F:VkNet.Enums.AudioGenre.AcousticAndVocal">
            <summary>
            Акустическая музыка и вокал.
            </summary>
        </member>
        <member name="F:VkNet.Enums.AudioGenre.Reggae">
            <summary>
            Регги.
            </summary>
        </member>
        <member name="F:VkNet.Enums.AudioGenre.Classical">
            <summary>
            Классическая музыка.
            </summary>
        </member>
        <member name="F:VkNet.Enums.AudioGenre.IndiePop">
            <summary>
            Инди-поп.
            </summary>
        </member>
        <member name="F:VkNet.Enums.AudioGenre.Speech">
            <summary>
            Спич.
            </summary>
        </member>
        <member name="F:VkNet.Enums.AudioGenre.ElectropopAndDisco">
            <summary>
            Электро-поп и диско.
            </summary>
        </member>
        <member name="F:VkNet.Enums.AudioGenre.Other">
            <summary>
            Другая музыка.
            </summary>
        </member>
        <member name="T:VkNet.Enums.AudioSort">
            <summary>
            Способ сортировки аудиозаписей.
            </summary>
        </member>
        <member name="F:VkNet.Enums.AudioSort.AddedDate">
            <summary>
            Сортировать по дате добавления.
            </summary>
        </member>
        <member name="F:VkNet.Enums.AudioSort.Duration">
            <summary>
            Сортировать подлительности.
            </summary>
        </member>
        <member name="F:VkNet.Enums.AudioSort.Popularity">
            <summary>
            Сортировать по популярности.
            </summary>
        </member>
        <member name="T:VkNet.Enums.BanReason">
            <summary>
            Причина бана
            </summary>
        </member>
        <member name="F:VkNet.Enums.BanReason.Other">
            <summary>
            Другое.
            </summary>
        </member>
        <member name="F:VkNet.Enums.BanReason.Spam">
            <summary>
            Спам.
            </summary>
        </member>
        <member name="F:VkNet.Enums.BanReason.VerbalAbuse">
            <summary>
            Оскорбление участников.
            </summary>
        </member>
        <member name="F:VkNet.Enums.BanReason.StrongLanguage">
            <summary>
            Нецензурные выражения.
            </summary>
        </member>
        <member name="F:VkNet.Enums.BanReason.IrrelevantMessages">
            <summary>
            Сообщения не по теме.
            </summary>
        </member>
        <member name="T:VkNet.Enums.BirthdayVisibility">
            <summary>
            Видимость даты рождения
            </summary>
        </member>
        <member name="F:VkNet.Enums.BirthdayVisibility.Invisible">
            <summary>
            Не показывать дату рождения.
            </summary>
        </member>
        <member name="F:VkNet.Enums.BirthdayVisibility.Full">
            <summary>
            ПОказывать дату рождения.
            </summary>
        </member>
        <member name="F:VkNet.Enums.BirthdayVisibility.OnlyDayAndMonth">
            <summary>
            Показывать только месяц и день.
            </summary>
        </member>
        <member name="T:VkNet.Enums.ChangeNameStatus">
            <summary>
            Статус заявки на изменение имени
            </summary>
        </member>
        <member name="F:VkNet.Enums.ChangeNameStatus.Processing">
            <summary>
            Заявка рассматривается
            </summary>
        </member>
        <member name="F:VkNet.Enums.ChangeNameStatus.Declined">
            <summary>
            Заявка отклонена
            </summary>
        </member>
        <member name="F:VkNet.Enums.ChangeNameStatus.Success">
            <summary>
            Имя было успешно изменено
            </summary>
        </member>
        <member name="F:VkNet.Enums.ChangeNameStatus.WasAccepted">
            <summary>
            Недавно уже была одобрена заявка, повторную заявку можно подать не раньше даты, указанной в поле <see cref="P:VkNet.Model.ChangeNameRequest.RepeatDate"/>
            </summary>
        </member>
        <member name="F:VkNet.Enums.ChangeNameStatus.WasDeclined">
            <summary>
            Предыдущая заявка была отклонена, повторную заявку можно подать не раньше даты, указанной в поле <see cref="P:VkNet.Model.ChangeNameRequest.RepeatDate"/>
            </summary>
        </member>
        <member name="T:VkNet.Enums.DeleteFriendStatus">
            <summary>
            Возвращаемый статус после удаления пользователя из списка друзей
            </summary>
        </member>
        <member name="F:VkNet.Enums.DeleteFriendStatus.Unknown">
            <summary>
            Неопределенный статус ответа
            </summary>
        </member>
        <member name="F:VkNet.Enums.DeleteFriendStatus.UserIsDeleted">
            <summary>
            Пользователь удален из списка друзей
            </summary>
        </member>
        <member name="F:VkNet.Enums.DeleteFriendStatus.RequestRejected">
            <summary>
            Заявка на добавление в друзья от данного пользователя отклонена
            </summary>
        </member>
        <member name="F:VkNet.Enums.DeleteFriendStatus.RecommendationDeleted">
            <summary>
            Рекомендация добавить в друзья данного пользователя удалена
            </summary>
        </member>
        <member name="T:VkNet.Enums.FriendStatus">
            <summary>
            Состояние дружбы с пользователями.
            </summary>
        </member>
        <member name="F:VkNet.Enums.FriendStatus.NotFriend">
            <summary>
            Пользователь не является другом.
            </summary>
        </member>
        <member name="F:VkNet.Enums.FriendStatus.OutputRequest">
            <summary>
            Пользователю отправлена заявка/подписка.
            </summary>
        </member>
        <member name="F:VkNet.Enums.FriendStatus.InputRequest">
            <summary>
            Имеется входящая заявка/подписка от пользователя.
            </summary>
        </member>
        <member name="F:VkNet.Enums.FriendStatus.Friend">
            <summary>
            Пользователь является другом.
            </summary>
        </member>
        <member name="T:VkNet.Enums.GiftPrivacy">
            <summary>
            Значение приватности подарка (только для текущего пользователя).
            </summary>
        </member>
        <member name="F:VkNet.Enums.GiftPrivacy.All">
            <summary>
            0 — имя отправителя и сообщение видно всем
            </summary>
        </member>
        <member name="F:VkNet.Enums.GiftPrivacy.NameAllMessageUser">
            <summary>
            1 — имя отправителя видно всем, сообщение видно только получателю
            </summary>
        </member>
        <member name="F:VkNet.Enums.GiftPrivacy.NameHideMessageUser">
            <summary>
            2 — имя отправителя скрыто, сообщение видно только получателю
            </summary>
        </member>
        <member name="T:VkNet.Enums.GroupSubjects">
            <summary>
            Тематика сообщества.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.AutoMoto">
            <summary>
            Авто/мото.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.Leisure">
            <summary>
            Активный отдых.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.Business">
            <summary>
            Бизнес.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.DomesticAnimals">
            <summary>
            Домашние животные.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.Health">
            <summary>
            Здоровье.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.MeetAndChat">
            <summary>
            Знакомство и общение.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.Games">
            <summary>
            Игры.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.IT">
            <summary>
            ИТ.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.Cinema">
            <summary>
            Кино.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.BeautyAndFashion">
            <summary>
            Красота и мода.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.Cookery">
            <summary>
            Кулинария.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.CultureAndArt">
            <summary>
            Культура и искусство.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.References">
            <summary>
            Литература.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.MobileTelephonyAndInternet">
            <summary>
            Мобильная связь и интернет.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.Music">
            <summary>
            Музыка.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.ScienceAndTechnology">
            <summary>
            Наука и техника.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.RealEstate">
            <summary>
            Недвижимость.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.NewsAndMedia">
            <summary>
            Новости и СМИ.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.Security">
            <summary>
            Безопасность.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.Forming">
            <summary>
            Образование.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.ConstructionAndRepair">
            <summary>
            Обустройство и ремонт.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.Policy">
            <summary>
            Политика.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.FoodItems">
            <summary>
            Продукты питания.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.Industry">
            <summary>
            Промышленность.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.Travels">
            <summary>
            Путешествия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.Job">
            <summary>
            Работа.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.Entertainment">
            <summary>
            Развлечения.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.Religion">
            <summary>
            Религия.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.HomeAndFamily">
            <summary>
            Дом и семья.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.Sports">
            <summary>
            Спорт.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.Coverage">
            <summary>
            Страхование.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.TV">
            <summary>
            Телевидение.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.GoodsAndServices">
            <summary>
            Товары и услуги.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.InterestsAndHobbies">
            <summary>
            Увлечения и хобби.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.Finances">
            <summary>
            Финансы.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.Photography">
            <summary>
            Фото.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.Esoterics">
            <summary>
            Эзотерика.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.ElectronicsAndAppliances">
            <summary>
            Электроника и бытовая техника.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.Erotica">
            <summary>
            Эротика.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.Humor">
            <summary>
            Юмор.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.SocietyHumanities">
            <summary>
            Общество, гуманитарные науки.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupSubjects.DesignAndGraphics">
            <summary>
            Дизайн и графика.
            </summary>
        </member>
        <member name="T:VkNet.Enums.GroupPublicity">
            <summary>
            Информация о публичности сообщества.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupPublicity.Public">
            <summary>
            Сообщество является публичным.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupPublicity.Closed">
            <summary>
            Сообщество является закрытым.
            </summary>
        </member>
        <member name="F:VkNet.Enums.GroupPublicity.Private">
            <summary>
            Сообщество является частным.
            </summary>
        </member>
        <member name="T:VkNet.Enums.LeaderboardTypes">
            <summary>
            Тип турнирной таблицы
            </summary>
        </member>
        <member name="F:VkNet.Enums.LeaderboardTypes.NotSupported">
            <summary>
            Не поддерживается
            </summary>
        </member>
        <member name="F:VkNet.Enums.LeaderboardTypes.ByLevel">
            <summary>
            По уровню
            </summary>
        </member>
        <member name="F:VkNet.Enums.LeaderboardTypes.ByPoints">
            <summary>
            По очкам
            </summary>
        </member>
        <member name="T:VkNet.Enums.LifeMain">
            <summary>
            Главное в жизни.
            </summary>
        </member>
        <member name="F:VkNet.Enums.LifeMain.Unknown">
            <summary>
            Не указано.
            </summary>
        </member>
        <member name="F:VkNet.Enums.LifeMain.FamilyAndChildren">
            <summary>
            Семья и дети.
            </summary>
        </member>
        <member name="F:VkNet.Enums.LifeMain.CareerAndMoney">
            <summary>
            Карьера и деньги.
            </summary>
        </member>
        <member name="F:VkNet.Enums.LifeMain.Activities">
            <summary>
            Развлечения и отдых.
            </summary>
        </member>
        <member name="F:VkNet.Enums.LifeMain.ScienceAndResearch">
            <summary>
            Наука и исследования.
            </summary>
        </member>
        <member name="F:VkNet.Enums.LifeMain.ImprovingTheWorld">
            <summary>
            Совершенствование мира.
            </summary>
        </member>
        <member name="F:VkNet.Enums.LifeMain.SelfDevelopment">
            <summary>
            Саморазвитие.
            </summary>
        </member>
        <member name="F:VkNet.Enums.LifeMain.BeautyAndArt">
            <summary>
            Красота и искусство.
            </summary>
        </member>
        <member name="F:VkNet.Enums.LifeMain.FameAndInfluence">
            <summary>
            Слава и влияние.
            </summary>
        </member>
        <member name="T:VkNet.Enums.MessageReadState">
            <summary>
            Информация о том прочитано ли сообщение.
            </summary>
        </member>
        <member name="F:VkNet.Enums.MessageReadState.Unreaded">
            <summary>
            Сообщение не прочитано.
            </summary>
        </member>
        <member name="F:VkNet.Enums.MessageReadState.Readed">
            <summary>
            Сообщение прочитано.
            </summary>
        </member>
        <member name="T:VkNet.Enums.MessagesFilter">
            <summary>
            Фильтр для отбора сообщений.
            </summary>
        </member>
        <member name="F:VkNet.Enums.MessagesFilter.All">
            <summary>
            Все сообщения
            </summary>
        </member>
        <member name="F:VkNet.Enums.MessagesFilter.Important">
            <summary>
            Важные сообщения
            </summary>
        </member>
        <member name="T:VkNet.Enums.MessageType">
            <summary>
            Тип сообщения.
            </summary>
        </member>
        <member name="F:VkNet.Enums.MessageType.Received">
            <summary>
            Полученное сообщение.
            </summary>
        </member>
        <member name="F:VkNet.Enums.MessageType.Sended">
            <summary>
            Отправленное сообщение.
            </summary>
        </member>
        <member name="T:VkNet.Enums.PageAccessKind">
            <summary>
            Режим доступа к странице
            </summary>
        </member>
        <member name="F:VkNet.Enums.PageAccessKind.OnlyAdministrators">
            <summary>
            Доступ только руководителям сообщества.
            </summary>
        </member>
        <member name="F:VkNet.Enums.PageAccessKind.OnlyMembers">
            <summary>
            Доступ только членам сообщества.
            </summary>
        </member>
        <member name="F:VkNet.Enums.PageAccessKind.Unrestricted">
            <summary>
            Неограниченный доступ.
            </summary>
        </member>
        <member name="T:VkNet.Enums.PeopleMain">
            <summary>
            Главное в людях.
            </summary>
        </member>
        <member name="F:VkNet.Enums.PeopleMain.Unknown">
            <summary>
            Не указано.
            </summary>
        </member>
        <member name="F:VkNet.Enums.PeopleMain.MindAndCreativity">
            <summary>
            Ум и креативность.
            </summary>
        </member>
        <member name="F:VkNet.Enums.PeopleMain.KindnessAndHonesty">
            <summary>
            Доброта и честность.
            </summary>
        </member>
        <member name="F:VkNet.Enums.PeopleMain.HealthAndBeauty">
            <summary>
            Красота и здоровье.
            </summary>
        </member>
        <member name="F:VkNet.Enums.PeopleMain.PowerAndWealth">
            <summary>
            Власть и богатство.
            </summary>
        </member>
        <member name="F:VkNet.Enums.PeopleMain.CourageAndPersistence">
            <summary>
            Смелость и упорство.
            </summary>
        </member>
        <member name="F:VkNet.Enums.PeopleMain.HumorAndLoveForLife">
            <summary>
            Юмор и жизнелюбие.
            </summary>
        </member>
        <member name="T:VkNet.Enums.PoliticalPreferences">
            <summary>
            Политические предпочтения.
            </summary>
        </member>
        <member name="F:VkNet.Enums.PoliticalPreferences.Unknown">
            <summary>
            Не указаны.
            </summary>
        </member>
        <member name="F:VkNet.Enums.PoliticalPreferences.Communist">
            <summary>
            Коммунистические.
            </summary>
        </member>
        <member name="F:VkNet.Enums.PoliticalPreferences.Socialist">
            <summary>
            Социалистические.
            </summary>
        </member>
        <member name="F:VkNet.Enums.PoliticalPreferences.Moderate">
            <summary>
            Умеренные.
            </summary>
        </member>
        <member name="F:VkNet.Enums.PoliticalPreferences.Liberal">
            <summary>
            Либеральные.
            </summary>
        </member>
        <member name="F:VkNet.Enums.PoliticalPreferences.Conservative">
            <summary>
            Консервативные.
            </summary>
        </member>
        <member name="F:VkNet.Enums.PoliticalPreferences.Monarchist">
            <summary>
            Монархические.
            </summary>
        </member>
        <member name="F:VkNet.Enums.PoliticalPreferences.Ultraconservative">
            <summary>
            Ультраконсервативные.
            </summary>
        </member>
        <member name="F:VkNet.Enums.PoliticalPreferences.Apathetic">
            <summary>
            Индифферентные.
            </summary>
        </member>
        <member name="F:VkNet.Enums.PoliticalPreferences.Libertarian">
            <summary>
            Либертантские.
            </summary>
        </member>
        <member name="T:VkNet.Enums.RelationType">
            <summary>
            Семейное положение.
            </summary>
        </member>
        <member name="F:VkNet.Enums.RelationType.Unknown">
            <summary>
            Не указано.
            </summary>
        </member>
        <member name="F:VkNet.Enums.RelationType.NotMarried">
            <summary>
            Не женат/не замужем.
            </summary>
        </member>
        <member name="F:VkNet.Enums.RelationType.HasFriend">
            <summary>
            Встречаюсь.
            </summary>
        </member>
        <member name="F:VkNet.Enums.RelationType.Engaged">
            <summary>
            Помолвлен/помолвлена.
            </summary>
        </member>
        <member name="F:VkNet.Enums.RelationType.Married">
            <summary>
            Женат/замужем.
            </summary>
        </member>
        <member name="F:VkNet.Enums.RelationType.ItsComplex">
            <summary>
            Всё сложно.
            </summary>
        </member>
        <member name="F:VkNet.Enums.RelationType.InActiveSearch">
            <summary>
            В активном поиске.
            </summary>
        </member>
        <member name="F:VkNet.Enums.RelationType.Amorous">
            <summary>
            Влюблен/влюблена.
            </summary>
        </member>
        <member name="T:VkNet.Enums.Sex">
            <summary>
            Пол.
            </summary>
        </member>
        <member name="F:VkNet.Enums.Sex.Unknown">
            <summary>
            Не указан
            </summary>
        </member>
        <member name="F:VkNet.Enums.Sex.Female">
            <summary>
            Женский
            </summary>
        </member>
        <member name="F:VkNet.Enums.Sex.Male">
            <summary>
            Мужской
            </summary>
        </member>
        <member name="T:VkNet.Enums.SortOrderBy">
            <summary>
            Порядок сортировки
            </summary>
        </member>
        <member name="F:VkNet.Enums.SortOrderBy.Desc">
            <summary>
            По убыванию
            </summary>
        </member>
        <member name="F:VkNet.Enums.SortOrderBy.Asc">
            <summary>
            По возрастанию
            </summary>
        </member>
        <member name="T:VkNet.Enums.UserSort">
            <summary>
            Сортировка результатов: 1 - по дате регистрации, 0 - по популярности целое число.
            </summary>
        </member>
        <member name="F:VkNet.Enums.UserSort.ByPopularity">
            <summary>
            По популярности
            </summary>        
        </member>
        <member name="F:VkNet.Enums.UserSort.ByRegDate">
            <summary>
            По дате регистрации
            </summary>
        </member>
        <member name="T:VkNet.Enums.ReportReason">
            <summary>
            Причина жалобы.
            </summary>
        </member>
        <member name="F:VkNet.Enums.ReportReason.Spam">
            <summary>
            Это спам.
            </summary>
        </member>
        <member name="F:VkNet.Enums.ReportReason.ChildPornography">
            <summary>
            Детская порнография.
            </summary>
        </member>
        <member name="F:VkNet.Enums.ReportReason.Extremism">
            <summary>
            Экстремизм.
            </summary>
        </member>
        <member name="F:VkNet.Enums.ReportReason.Violence">
            <summary>
            Насилие.
            </summary>
        </member>
        <member name="F:VkNet.Enums.ReportReason.DrugPropaganda">
            <summary>
            Пропаганда наркотиков.
            </summary>
        </member>
        <member name="F:VkNet.Enums.ReportReason.AdultMaterial">
            <summary>
            Материал для взрослых.
            </summary>
        </member>
        <member name="F:VkNet.Enums.ReportReason.Abuse">
            <summary>
            Оскорбление.
            </summary>
        </member>
        <member name="T:VkNet.Enums.VideoSort">
            <summary>
            Способ сортировки видеозаписей.
            </summary>
        </member>
        <member name="F:VkNet.Enums.VideoSort.AddedDate">
            <summary>
            По дате добавления видеозаписи.
            </summary>
        </member>
        <member name="F:VkNet.Enums.VideoSort.Duration">
            <summary>
            По длительности видеозаписи.
            </summary>
        </member>
        <member name="F:VkNet.Enums.VideoSort.Relevance">
            <summary>
            По релевантности видеозаписи запросу.
            </summary>
        </member>
        <member name="T:VkNet.Enums.VideoWidth">
            <summary>
            Информация о ширине видео в пикселах.
            </summary>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.get"/>.
            </remarks>
        </member>
        <member name="F:VkNet.Enums.VideoWidth.Small130">
            <summary>
            130 пикселов.
            </summary>
        </member>
        <member name="F:VkNet.Enums.VideoWidth.Medium160">
            <summary>
            160 пикселов.
            </summary>
        </member>
        <member name="F:VkNet.Enums.VideoWidth.Large320">
            <summary>
            320 пикселов.
            </summary>
        </member>
        <member name="T:VkNet.Enums.VkObjectType">
            <summary>
            Определяет тип объекта
            </summary>
        </member>
        <member name="F:VkNet.Enums.VkObjectType.User">
            <summary>
            Пользователь
            </summary>
        </member>
        <member name="F:VkNet.Enums.VkObjectType.Group">
            <summary>
            Группа
            </summary>
        </member>
        <member name="F:VkNet.Enums.VkObjectType.Application">
            <summary>
            Приложение
            </summary>
        </member>
        <member name="T:VkNet.Enums.WallFilter">
            <summary>
            Фильтр для задания типов сообщений, которые необходимо получить со стены.
            </summary>
        </member>
        <member name="F:VkNet.Enums.WallFilter.Owner">
            <summary>
            Необходимо получить сообщения на стене только от ее владельца.
            </summary>
        </member>
        <member name="F:VkNet.Enums.WallFilter.Others">
            <summary>
            Необходимо получить сообщения на стене не от владельца стены.
            </summary>
        </member>
        <member name="F:VkNet.Enums.WallFilter.All">
            <summary>
            Необходимо получить все сообщения на стене (Owner + Others).
            </summary>
        </member>
        <member name="F:VkNet.Enums.WallFilter.Suggests">
            <summary>
            Отложенные записи
            </summary>
        </member>
        <member name="F:VkNet.Enums.WallFilter.Postponed">
            <summary>
            Предложенные записи на стене сообщества
            </summary>
        </member>
        <member name="T:VkNet.Enums.ProductAvailability">
            <summary>
            Статус доступности товара
            </summary>
        </member>
        <member name="F:VkNet.Enums.ProductAvailability.Available">
            <summary>
            Товар доступен
            </summary>
        </member>
        <member name="F:VkNet.Enums.ProductAvailability.Removed">
            <summary>
            Товар удален
            </summary>
        </member>
        <member name="F:VkNet.Enums.ProductAvailability.Unavailable">
            <summary>
            Товар недоступен
            </summary>
        </member>
        <member name="T:VkNet.Exception.OutOfLimitsException">
            <summary>
            103 - Out of limits
            </summary>
            <seealso cref="T:VkNet.Exception.VkApiException" />
        </member>
        <member name="M:VkNet.Exception.OutOfLimitsException.#ctor(System.String)">
            <summary>
            Конструктор.
            </summary>
            <param name="message">Описание исключения.</param>
        </member>
        <member name="T:VkNet.Exception.AccessDeniedException">
            <summary>
            Исключение, которое выбрасывается при отказе в доступе на выполнение операции сервером ВКонтакте.
            </summary>
        </member>
        <member name="M:VkNet.Exception.AccessDeniedException.#ctor">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:VkNet.Exception.AccessDeniedException"/>.
            </summary>
        </member>
        <member name="M:VkNet.Exception.AccessDeniedException.#ctor(System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:VkNet.Exception.AccessDeniedException"/> с указанным описанием.
            </summary>
            <param name="message">Описание исключения.</param>
        </member>
        <member name="M:VkNet.Exception.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:VkNet.Exception.AccessDeniedException"/> с указанным описанием и внутренним исключением.
            </summary>
            <param name="message">Описание исключения.</param>
            <param name="innerException">Внутреннее исключение.</param>
        </member>
        <member name="M:VkNet.Exception.AccessDeniedException.#ctor(System.String,System.Int32)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:VkNet.Exception.AccessDeniedException"/> с указанным описанием и кодом ошибки.
            </summary>
            <param name="message">Описание исключения.</param>
            <param name="code">Код ошибки, полученный от сервера ВКонтакте.</param>
        </member>
        <member name="M:VkNet.Exception.AccessDeniedException.#ctor(System.String,System.Int32,System.Exception)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:VkNet.Exception.AccessDeniedException"/> с указанным описанием, кодом ошибки и внутренним исключением.
            </summary>
            <param name="message">Описание исключения.</param>
            <param name="code">Код ошибки, полученный от сервера ВКонтакте.</param>
            <param name="innerException">Внутреннее исключение.</param>
        </member>
        <member name="M:VkNet.Exception.AccessDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:VkNet.Exception.AccessDeniedException"/> на основе ранее сериализованных данных.
            </summary>
            <param name="info">Содержит все данные, необходимые для десериализации.</param>
            <param name="context">Описывает источник и назначение данного сериализованного потока и предоставляет дополнительный,
            определяемый вызывающим, контекст.</param>
        </member>
        <member name="T:VkNet.Exception.AccessTokenInvalidException">
            <summary>
            Исключение, которое выбрасывается, в случае, если предоставленный маркер доступа является недействительным.
            </summary>
        </member>
        <member name="M:VkNet.Exception.AccessTokenInvalidException.#ctor">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:VkNet.Exception.AccessTokenInvalidException"/>.
            </summary>
        </member>
        <member name="M:VkNet.Exception.AccessTokenInvalidException.#ctor(System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:VkNet.Exception.AccessTokenInvalidException"/> с указанным описанием.
            </summary>
            <param name="message">Описание исключения.</param>
        </member>
        <member name="M:VkNet.Exception.AccessTokenInvalidException.#ctor(System.String,System.Exception)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:VkNet.Exception.AccessTokenInvalidException"/> с указанным описанием и внутренним исключением.
            </summary>
            <param name="message">Описание исключения.</param>
            <param name="innerException">Внутреннее исключение.</param>
        </member>
        <member name="M:VkNet.Exception.AccessTokenInvalidException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:VkNet.Exception.AccessTokenInvalidException"/> на основе ранее сериализованных данных.
            </summary>
            <param name="info">Содержит все данные, необходимые для десериализации.</param>
            <param name="context">Описывает источник и назначение данного сериализованного потока и предоставляет дополнительный,
            определяемый вызывающим, контекст.</param>
        </member>
        <member name="T:VkNet.Exception.CaptchaNeededException">
            <summary>
            Исключение, выбрасываемое при необходимости ввода капчи для вызова метода
            </summary>
        </member>
        <member name="P:VkNet.Exception.CaptchaNeededException.Sid">
            <summary>
            Идентификатор капчи
            </summary>
        </member>
        <member name="P:VkNet.Exception.CaptchaNeededException.Img">
            <summary>
            Url-адрес изображения с капчей
            </summary>
        </member>
        <member name="M:VkNet.Exception.CaptchaNeededException.#ctor(System.Int64,System.String)">
            <summary>
            Создания экземпляра <see cref="T:VkNet.Exception.CaptchaNeededException"/>
            </summary>
            <param name="sid">Сид</param>
            <param name="img">Url-адрес изображения с капчей</param>
        </member>
        <member name="M:VkNet.Exception.CaptchaNeededException.#ctor(System.Int64,System.Uri)">
            <summary>
            Создания экземпляра <see cref="T:VkNet.Exception.CaptchaNeededException"/>
            </summary>
            <param name="sid">Сид</param>
            <param name="img">Url-адрес изображения с капчей</param>
        </member>
        <member name="T:VkNet.Exception.InvalidParameterException">
            <summary>
            Исключение, которое выбрасывается в случае, если параметр принимал недействительное значение.
            </summary>
        </member>
        <member name="M:VkNet.Exception.InvalidParameterException.#ctor">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:VkNet.Exception.InvalidParameterException"/>.
            </summary>
        </member>
        <member name="M:VkNet.Exception.InvalidParameterException.#ctor(System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:VkNet.Exception.InvalidParameterException"/> с указанным описанием.
            </summary>
            <param name="message">Описание исключения.</param>
        </member>
        <member name="M:VkNet.Exception.InvalidParameterException.#ctor(System.String,System.Exception)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:VkNet.Exception.InvalidParameterException"/> с указанным описанием и внутренним исключением.
            </summary>
            <param name="message">Описание исключения.</param>
            <param name="innerException">Внутреннее исключение.</param>
        </member>
        <member name="M:VkNet.Exception.InvalidParameterException.#ctor(System.String,System.Int32)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:VkNet.Exception.InvalidParameterException"/> с указанным описанием и кодом ошибки.
            </summary>
            <param name="message">Описание исключения.</param>
            <param name="code">Код ошибки, полученный от сервера ВКонтакте.</param>
        </member>
        <member name="M:VkNet.Exception.InvalidParameterException.#ctor(System.String,System.Int32,System.Exception)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:VkNet.Exception.InvalidParameterException"/> с указанным описанием, кодом ошибки и внутренним исключением.
            </summary>
            <param name="message">Описание исключения.</param>
            <param name="code">Код ошибки, полученный от сервера ВКонтакте.</param>
            <param name="innerException">Внутреннее исключение.</param>
        </member>
        <member name="M:VkNet.Exception.InvalidParameterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:VkNet.Exception.InvalidParameterException"/> на основе ранее сериализованных данных.
            </summary>
            <param name="info">Содержит все данные, необходимые для десериализации.</param>
            <param name="context">Описывает источник и назначение данного сериализованного потока и предоставляет дополнительный,
            определяемый вызывающим, контекст.</param>
        </member>
        <member name="T:VkNet.Exception.PostLimitException">
            <summary>
            Исключение, выбрасываемое при исчерпании лимита публикации постов в день
            </summary>
        </member>
        <member name="T:VkNet.Exception.TooManyRequestsException">
            <summary>
            Исключение, которые выбрасывается при попытке выполнить запрос с частотой, превышающей максимально допустимую ВКонтакте.
            В настоящее время действует ограничение (один раз в три секунды) на количество однотипных запросов (вызовов методов
            с одним и тем же именем). Если это ограничение превышается, то сервер ВКонтакте возвращает ошибку с кодом 6 -
            Too many requests per second.
            </summary>
        </member>
        <member name="M:VkNet.Exception.TooManyRequestsException.#ctor">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:VkNet.Exception.TooManyRequestsException"/>.
            </summary>
        </member>
        <member name="M:VkNet.Exception.TooManyRequestsException.#ctor(System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:VkNet.Exception.TooManyRequestsException"/> с указанным описанием.
            </summary>
            <param name="message">Описание исключения.</param>
        </member>
        <member name="M:VkNet.Exception.TooManyRequestsException.#ctor(System.String,System.Exception)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:VkNet.Exception.TooManyRequestsException"/> с указанным описанием и внутренним исключением.
            </summary>
            <param name="message">Описание исключения.</param>
            <param name="innerException">Внутреннее исключение.</param>
        </member>
        <member name="M:VkNet.Exception.TooManyRequestsException.#ctor(System.String,System.Int32)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:VkNet.Exception.TooManyRequestsException"/> с указанным описанием и кодом ошибки.
            </summary>
            <param name="message">Описание исключения.</param>
            <param name="code">Код ошибки, полученный от сервера ВКонтакте.</param>
        </member>
        <member name="M:VkNet.Exception.TooManyRequestsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:VkNet.Exception.TooManyRequestsException"/> на основе ранее сериализованных данных.
            </summary>
            <param name="info">Содержит все данные, необходимые для десериализации.</param>
            <param name="context">Описывает источник и назначение данного сериализованного потока и предоставляет дополнительный,
            определяемый вызывающим, контекст.</param>
        </member>
        <member name="T:VkNet.Exception.UserAuthorizationFailException">
            <summary>
            Исключение, которое выбрасывается при отсутствии авторизации на выполнение запрошенной операции.
            </summary>
        </member>
        <member name="M:VkNet.Exception.UserAuthorizationFailException.#ctor(System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:VkNet.Exception.UserAuthorizationFailException"/>.
            </summary>
        </member>
        <member name="M:VkNet.Exception.UserAuthorizationFailException.#ctor(System.String,System.Int32)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:VkNet.Exception.UserAuthorizationFailException"/> с указанным описанием и кодом ошибки.
            </summary>
            <param name="message">Описание исключения.</param>
            <param name="code">Код ошибки, полученный от сервера ВКонтакте.</param>
        </member>
        <member name="M:VkNet.Exception.UserAuthorizationFailException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:VkNet.Exception.UserAuthorizationFailException"/> на основе ранее сериализованных данных.
            </summary>
            <param name="info">Содержит все данные, необходимые для десериализации.</param>
            <param name="context">Описывает источник и назначение данного сериализованного потока и предоставляет дополнительный,
            определяемый вызывающим, контекст.</param>
        </member>
        <member name="T:VkNet.Exception.VkApiMethodInvokeException">
            <summary>
            Базовый класс, для всех исключений, которые могут произойти при вызове методов API ВКонтакте.
            </summary>
        </member>
        <member name="P:VkNet.Exception.VkApiMethodInvokeException.ErrorCode">
            <summary>
            Код ошибки, полученный от сервера ВКонтакте.
            </summary>
        </member>
        <member name="M:VkNet.Exception.VkApiMethodInvokeException.#ctor">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:VkNet.Exception.VkApiMethodInvokeException"/>.
            </summary>
        </member>
        <member name="M:VkNet.Exception.VkApiMethodInvokeException.#ctor(System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:VkNet.Exception.VkApiMethodInvokeException"/> с указанным описанием.
            </summary>
            <param name="message">Описание исключения.</param>
        </member>
        <member name="M:VkNet.Exception.VkApiMethodInvokeException.#ctor(System.String,System.Exception)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:VkNet.Exception.VkApiMethodInvokeException"/> с указанным описанием и внутренним исключением.
            </summary>
            <param name="message">Описание исключения.</param>
            <param name="innerException">Внутреннее исключение.</param>
        </member>
        <member name="M:VkNet.Exception.VkApiMethodInvokeException.#ctor(System.String,System.Int32)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:VkNet.Exception.VkApiMethodInvokeException"/> с указанным описанием и кодом ошибки.
            </summary>
            <param name="message">Описание исключения.</param>
            <param name="code">Код ошибки, полученный от сервера ВКонтакте.</param>
        </member>
        <member name="M:VkNet.Exception.VkApiMethodInvokeException.#ctor(System.String,System.Int32,System.Exception)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:VkNet.Exception.VkApiMethodInvokeException"/> с указанным описанием, кодом ошибки и внутренним исключением.
            </summary>
            <param name="message">Описание исключения.</param>
            <param name="code">Код ошибки, полученный от сервера ВКонтакте.</param>
            <param name="innerException">Внутреннее исключение.</param>
        </member>
        <member name="M:VkNet.Exception.VkApiMethodInvokeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:VkNet.Exception.VkApiMethodInvokeException"/> на основе ранее сериализованных данных.
            </summary>
            <param name="info">Содержит все данные, необходимые для десериализации.</param>
            <param name="context">Описывает источник и назначение данного сериализованного потока и предоставляет дополнительный,
            определяемый вызывающим, контекст.</param>
        </member>
        <member name="T:VkNet.Exception.VkApiAuthorizationException">
            <summary>
            Исключение, которое выбрасывается при попытке неудачной авторизации, когда указан неправильный логин или пароль
            при вызове метода <see cref="!:VkApi.Authorize(int,string,string,Settings,long?,string)"/>.
            </summary>
        </member>
        <member name="P:VkNet.Exception.VkApiAuthorizationException.Email">
            <summary>
            Логин, который был указан при попытке авторизации.
            </summary>
        </member>
        <member name="P:VkNet.Exception.VkApiAuthorizationException.Password">
            <summary>
            Пароль, который был указан при попытке авторизации.
            </summary>
        </member>
        <member name="M:VkNet.Exception.VkApiAuthorizationException.#ctor(System.String,System.String,System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:VkNet.Exception.VkApiAuthorizationException"/>.
            </summary>
            <param name="message">Описание исключения.</param>
            <param name="email">Логин, который был указан при попытке авторизации.</param>
            <param name="password">Пароль, который был указан при попытке авторизации.</param>
        </member>
        <member name="M:VkNet.Exception.VkApiAuthorizationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:VkNet.Exception.AccessTokenInvalidException"/> на основе ранее сериализованных данных.
            </summary>
            <param name="info">Содержит все данные, необходимые для десериализации.</param>
            <param name="context">Описывает источник и назначение данного сериализованного потока и предоставляет дополнительный,
            определяемый вызывающим, контекст.</param>
        </member>
        <member name="T:VkNet.Exception.VkApiException">
            <summary>
            Базовый класс для всех исключений, выбрасываемых библиотекой.
            </summary>
        </member>
        <member name="M:VkNet.Exception.VkApiException.#ctor">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:VkNet.Exception.VkApiException"/>.
            </summary>
        </member>
        <member name="M:VkNet.Exception.VkApiException.#ctor(System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:VkNet.Exception.VkApiException"/> с указанным описанием.
            </summary>
            <param name="message">Описание исключения.</param>
        </member>
        <member name="M:VkNet.Exception.VkApiException.#ctor(System.String,System.Exception)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:VkNet.Exception.InvalidParameterException"/> с указанным описанием и внутренним исключением.
            </summary>
            <param name="message">Описание исключения.</param>
            <param name="innerException">Внутреннее исключение.</param>
        </member>
        <member name="M:VkNet.Exception.VkApiException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:VkNet.Exception.VkApiException"/> на основе ранее сериализованных данных.
            </summary>
            <param name="info">Содержит все данные, необходимые для десериализации.</param>
            <param name="context">Описывает источник и назначение данного сериализованного потока и предоставляет дополнительный,
            определяемый вызывающим, контекст.</param>
        </member>
        <member name="T:VkNet.Model.AccountChangePasswordResult">
            <summary>
            Результат метода account.changePassword
            </summary>
        </member>
        <member name="P:VkNet.Model.AccountChangePasswordResult.Token">
            <summary>
            Токен.
            </summary>
        </member>
        <member name="P:VkNet.Model.AccountChangePasswordResult.Secret">
            <summary>
            secret в случае, если токен был nohttps.
            </summary>
        </member>
        <member name="M:VkNet.Model.AccountChangePasswordResult.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.DocumentType">
            <summary>
            Тип документа.
            </summary>
        </member>
        <member name="P:VkNet.Model.DocumentType.Id">
            <summary>
            Идентификатор полученного подарка.
            </summary>
        </member>
        <member name="P:VkNet.Model.DocumentType.Name">
            <summary>
            Текст сообщения, приложенного к подарку.
            </summary>
        </member>
        <member name="P:VkNet.Model.DocumentType.Count">
            <summary>
            Количество документов данного типа.
            </summary>
        </member>
        <member name="M:VkNet.Model.DocumentType.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns>Тип документа.</returns>
        </member>
        <member name="T:VkNet.Model.Chair">
            <summary>
            Кафедра
            </summary>
        </member>
        <member name="P:VkNet.Model.Chair.Id">
            <summary>
            Идентификатор факультета
            </summary>
        </member>
        <member name="P:VkNet.Model.Chair.Title">
            <summary>
            Название факультета
            </summary>
        </member>
        <member name="M:VkNet.Model.Chair.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.FriendOnline">
            <summary>
            Ïîëüçîâàòåëè îíëàéí ïî òèïó (ìîáèëüíûå / ïê)
            </summary>
        </member>
        <member name="P:VkNet.Model.FriendOnline.Online">
            <summary>
            Online ñ ÏÊ
            </summary>
        </member>
        <member name="P:VkNet.Model.FriendOnline.MobileOnline">
            <summary>
            Online ñ ìîáèëüíîãî óñòðîéñòâà.
            </summary>
        </member>
        <member name="M:VkNet.Model.FriendOnline.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Ðàçîáðàòü èç json.
            </summary>
            <param name="response">Îòâåò ñåðâåðà.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.AccountSaveProfileInfoParams">
            <summary>
            Параметры метода account.saveProfileInfo
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AccountSaveProfileInfoParams.FirstName">
            <summary>
            Имя пользователя. строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AccountSaveProfileInfoParams.LastName">
            <summary>
            Фамилия пользователя. строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AccountSaveProfileInfoParams.MaidenName">
            <summary>
            Девичья фамилия пользователя (только для женского пола). строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AccountSaveProfileInfoParams.ScreenName">
            <summary>
            Короткое имя страницы. строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AccountSaveProfileInfoParams.Sex">
            <summary>
            Пол пользователя. Возможные значения: 
            
            1 — женский; 
            2 — мужской. 
            положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AccountSaveProfileInfoParams.Relation">
            <summary>
            Семейное положение пользователя. Возможные значения: 
            
            1 — не женат/не замужем; 
            2 — есть друг/есть подруга; 
            3 — помолвлен/помолвлена; 
            4 — женат/замужем; 
            5 — всё сложно; 
            6 — в активном поиске; 
            7 — влюблён/влюблена; 
            0 — не указано. 
            положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AccountSaveProfileInfoParams.RelationPartner">
            <summary>
            Идентификатор пользователя, с которым связано семейное положение. положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AccountSaveProfileInfoParams.BirthDate">
            <summary>
            Дата рождения пользователя в формате DD.MM.YYYY, например "15.11.1984". строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AccountSaveProfileInfoParams.BirthdayVisibility">
            <summary>
            Видимость даты рождения. Возможные значения: 
            
            1 — показывать дату рождения; 
            2 — показывать только месяц и день; 
            0 — не показывать дату рождения. 
            положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AccountSaveProfileInfoParams.HomeTown">
            <summary>
            Родной город пользователя. строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AccountSaveProfileInfoParams.Country">
            <summary>
            Идентификатор страны пользователя. положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AccountSaveProfileInfoParams.City">
            <summary>
            Идентификатор города пользователя. положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AccountSaveProfileInfoParams.Status">
            <summary>
            Статус пользователя, который также может быть изменен методом status.set строка.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.AccountSaveProfileInfoParams.ToVkParameters(VkNet.Model.RequestParams.AccountSaveProfileInfoParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns>Объект типа <see cref="T:VkNet.Model.RequestParams.AccountSaveProfileInfoParams"/></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.AudioEditParams">
            <summary>
            Параметры метода audio.edit
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.AudioEditParams.#ctor(System.Boolean)">
            <summary>
            Параметры метода audio.edit
            </summary>
            <param name="gag">Заглушка для конструктора.</param>
        </member>
        <member name="P:VkNet.Model.RequestParams.AudioEditParams.OwnerId">
            <summary>
            Идентификатор владельца аудиозаписи (пользователь или сообщество). ID сообщества должен быть отрицательным. 
            
            owner_id=1 — пользователь; 
            owner_id=-1 — сообщество.  целое число, обязательный параметр.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AudioEditParams.AudioId">
            <summary>
            Идентификатор аудиозаписи. положительное число, обязательный параметр.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AudioEditParams.Artist">
            <summary>
            Новое название исполнителя. строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AudioEditParams.Title">
            <summary>
            Новое название композиции. строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AudioEditParams.Text">
            <summary>
            Новый текст аудиозаписи. строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AudioEditParams.GenreId">
            <summary>
            Идентификатор жанра из списка аудио жанров. положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AudioEditParams.NoSearch">
            <summary>
            1 — аудиозапись не будет доступна в поиске. По умолчанию — 0. флаг, может принимать значения 1 или 0.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.AudioEditParams.ToVkParameters(VkNet.Model.RequestParams.AudioEditParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.AudioGetParams">
            <summary>
            Параметры метода audio.get
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.AudioGetParams.#ctor(System.Boolean)">
            <summary>
            Параметры метода audio.get
            </summary>
            <param name="gag">Заглушка для конструктора.</param>
        </member>
        <member name="P:VkNet.Model.RequestParams.AudioGetParams.OwnerId">
            <summary>
            Идентификатор владельца аудиозаписей (пользователь или сообщество). Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор текущего пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AudioGetParams.AlbumId">
            <summary>
            Идентификатор альбома с аудиозаписями. целое число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AudioGetParams.AudioIds">
            <summary>
            Идентификаторы аудиозаписей, информацию о которых необходимо вернуть. список положительных чисел, разделенных запятыми.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AudioGetParams.NeedUser">
            <summary>
            1 — возвращать информацию о пользователях, загрузивших аудиозапись. флаг, может принимать значения 1 или 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AudioGetParams.Offset">
            <summary>
            Смещение, необходимое для выборки определенного количества аудиозаписей. По умолчанию — 0. положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AudioGetParams.Count">
            <summary>
            Количество аудиозаписей, информацию о которых необходимо вернуть. Максимальное значение — 6000. положительное число.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.AudioGetParams.ToVkParameters(VkNet.Model.RequestParams.AudioGetParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.FriendsGetMutualParams">
            <summary>
            Параметры метода friends.getMutual
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.FriendsGetMutualParams.#ctor(System.Boolean)">
            <summary>
            Параметры метода friends.getMutual
            </summary>
            <param name="gag">Заглушка для конструктора.</param>
        </member>
        <member name="P:VkNet.Model.RequestParams.FriendsGetMutualParams.SourceUid">
            <summary>
            Идентификатор пользователя, чьи друзья пересекаются с друзьями пользователя с идентификатором target_uid. Если параметр не задан, то считается, что source_uid равен идентификатору текущего пользователя. положительное число, по умолчанию идентификатор текущего пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.FriendsGetMutualParams.TargetUid">
            <summary>
            Идентификатор пользователя, с которым необходимо искать общих друзей. положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.FriendsGetMutualParams.TargetUids">
            <summary>
            Список идентификаторов пользователей, с которыми необходимо искать общих друзей. список положительных чисел, разделенных запятыми.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.FriendsGetMutualParams.Order">
            <summary>
            Порядок, в котором нужно вернуть список общих друзей. Допустимые значения: random - возвращает друзей в случайном порядке. строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.FriendsGetMutualParams.Count">
            <summary>
            Количество общих друзей, которое нужно вернуть. (по умолчанию – все общие друзья) положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.FriendsGetMutualParams.Offset">
            <summary>
            Смещение, необходимое для выборки определенного подмножества общих друзей. положительное число.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.FriendsGetMutualParams.ToVkParameters(VkNet.Model.RequestParams.FriendsGetMutualParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.FriendsGetOnlineParams">
            <summary>
            Параметры метода friends.getOnline
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.FriendsGetOnlineParams.#ctor(System.Boolean)">
            <summary>
            Параметры метода friends.getOnline
            </summary>
            <param name="gag">Заглушка для конструктора.</param>
        </member>
        <member name="P:VkNet.Model.RequestParams.FriendsGetOnlineParams.UserId">
            <summary>
            Идентификатор пользователя, для которого необходимо получить список друзей онлайн. Если параметр не задан, то считается, что он равен идентификатору текущего пользователя. положительное число, по умолчанию идентификатор текущего пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.FriendsGetOnlineParams.ListId">
            <summary>
            Идентификатор списка друзей. Если параметр не задан, возвращается информация обо всех друзьях, находящихся на сайте. положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.FriendsGetOnlineParams.OnlineMobile">
            <summary>
            1 — будет возвращено дополнительное поле online_mobile. 
            По умолчанию — 0. флаг, может принимать значения 1 или 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.FriendsGetOnlineParams.Order">
            <summary>
            Порядок, в котором нужно вернуть список друзей, находящихся на сайте. Допустимые значения: random - возвращает друзей в случайном порядке, hints - сортировать по рейтингу, аналогично тому, как друзья сортируются в разделе Мои друзья (данный параметр доступен только для Desktop-приложений). строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.FriendsGetOnlineParams.Count">
            <summary>
            Количество друзей онлайн, которое нужно вернуть. (по умолчанию – все друзья онлайн) положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.FriendsGetOnlineParams.Offset">
            <summary>
            Смещение, необходимое для выборки определенного подмножества друзей онлайн. положительное число.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.FriendsGetOnlineParams.ToVkParameters(VkNet.Model.RequestParams.FriendsGetOnlineParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.FriendsGetParams">
            <summary>
            Параметры метода friends.get
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.FriendsGetParams.#ctor(System.Boolean)">
            <summary>
            Параметры метода friends.get
            </summary>
            <param name="gag">Заглушка для конструктора.</param>
        </member>
        <member name="P:VkNet.Model.RequestParams.FriendsGetParams.UserId">
            <summary>
            Идентификатор пользователя, для которого необходимо получить список друзей. Если параметр не задан, то считается, что он равен идентификатору текущего пользователя (справедливо для вызова с передачей access_token). целое число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.FriendsGetParams.Order">
            <summary>
            Порядок, в котором нужно вернуть список друзей. Допустимые значения: 
            
            hints - сортировать по рейтингу, аналогично тому, как друзья сортируются в разделе Мои друзья (данный параметр доступен только для Desktop-приложений). 
            random - возвращает друзей в случайном порядке. 
            mobile - возвращает выше тех друзей, у которых установлены мобильные приложения. 
            name - сортировать по имени. Данный тип сортировки работает медленно, так как сервер будет получать всех друзей а не только указанное количество count. (работает только при переданном параметре fields) 
            строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.FriendsGetParams.ListId">
            <summary>
            Идентификатор списка друзей, полученный методом friends.getLists, друзей из которого необходимо получить. Данный параметр учитывается, только когда параметр user_id равен идентификатору текущего пользователя.
            
            Данный параметр доступен только для Desktop-приложений. положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.FriendsGetParams.Count">
            <summary>
            Количество друзей, которое нужно вернуть. (по умолчанию – все друзья) положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.FriendsGetParams.Offset">
            <summary>
            Смещение, необходимое для выборки определенного подмножества друзей. положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.FriendsGetParams.Fields">
            <summary>
            Список дополнительных полей, которые необходимо вернуть. 
            Доступные значения: nickname, domain, sex, bdate, city, country, timezone, photo_50, photo_100, photo_200_orig, has_mobile, contacts, education, online, relation, last_seen, status, can_write_private_message, can_see_all_posts, can_post, universities список строк, разделенных через запятую.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.FriendsGetParams.NameCase">
            <summary>
            Падеж для склонения имени и фамилии пользователя. Возможные значения: именительный – nom, родительный – gen, дательный – dat, винительный – acc, творительный – ins, предложный – abl. По умолчанию nom. строка.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.FriendsGetParams.ToVkParameters(VkNet.Model.RequestParams.FriendsGetParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.FriendsGetRequestsParams">
            <summary>
            Параметры метода friends.getRequests
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.FriendsGetRequestsParams.#ctor(System.Boolean)">
            <summary>
            Параметры метода friends.getRequests
            </summary>
            <param name="gag">Заглушка для конструктора.</param>
        </member>
        <member name="P:VkNet.Model.RequestParams.FriendsGetRequestsParams.Offset">
            <summary>
            Смещение, необходимое для выборки определенного подмножества заявок на добавление в друзья. положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.FriendsGetRequestsParams.Count">
            <summary>
            Максимальное количество заявок на добавление в друзья, которые необходимо получить (не более'''1000). 
            По умолчанию —  100''. положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.FriendsGetRequestsParams.Extended">
            <summary>
            Определяет, требуется ли возвращать в ответе сообщения от пользователей, подавших заявку на добавление в друзья. И отправителя рекомендации при suggested=1. флаг, может принимать значения 1 или 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.FriendsGetRequestsParams.NeedMutual">
            <summary>
            Определяет, требуется ли возвращать в ответе список общих друзей, если они есть. Обратите внимание, что при использовании need_mutual будет возвращено не более 20 заявок. флаг, может принимать значения 1 или 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.FriendsGetRequestsParams.Out">
            <summary>
            0 — возвращать полученные заявки в друзья (по умолчанию), 1 — возвращать отправленные пользователем заявки. флаг, может принимать значения 1 или 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.FriendsGetRequestsParams.Sort">
            <summary>
            0 — сортировать по дате добавления, 1 — сортировать по количеству общих друзей. (Если out = 1, данный параметр не учитывается). положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.FriendsGetRequestsParams.Suggested">
            <summary>
            1 — возвращать рекомендованных другими пользователями друзей, 0 — возвращать заявки в друзья (по умолчанию). флаг, может принимать значения 1 или 0.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.FriendsGetRequestsParams.ToVkParameters(VkNet.Model.RequestParams.FriendsGetRequestsParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.FriendsSearchParams">
            <summary>
            Параметры метода friends.search
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.FriendsSearchParams.#ctor(System.Boolean)">
            <summary>
            Параметры метода friends.search
            </summary>
            <param name="gag">Заглушка для конструктора.</param>
        </member>
        <member name="P:VkNet.Model.RequestParams.FriendsSearchParams.UserId">
            <summary>
            Идентификатор пользователя, по списку друзей которого необходимо произвести поиск. положительное число, по умолчанию идентификатор текущего пользователя, обязательный параметр.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.FriendsSearchParams.Query">
            <summary>
            Строка запроса. строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.FriendsSearchParams.Fields">
            <summary>
            Список дополнительных полей, которые необходимо вернуть. 
            Доступные значения: nickname, screen_name, sex, bdate, city, country, timezone, photo_50, photo_100, photo_200_orig, has_mobile, contacts, education, online, relation, last_seen, status, can_write_private_message, can_see_all_posts, can_post, universities, domain список строк, разделенных через запятую.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.FriendsSearchParams.NameCase">
            <summary>
            Падеж для склонения имени и фамилии пользователя. Возможные значения: именительный – nom, родительный – gen, дательный – dat, винительный – acc, творительный – ins, предложный – abl. По умолчанию nom. строка, по умолчанию Nom.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.FriendsSearchParams.Offset">
            <summary>
            Смещение, необходимое для выборки определенного подмножества друзей. положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.FriendsSearchParams.Count">
            <summary>
            Количество друзей, которое нужно вернуть. положительное число, по умолчанию 20, максимальное значение 1000.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.FriendsSearchParams.ToVkParameters(VkNet.Model.RequestParams.FriendsSearchParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.GroupsBanUserParams">
            <summary>
            Параметры метода groups.banUser
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.GroupsBanUserParams.#ctor(System.Boolean)">
            <summary>
            Параметры метода groups.banUser
            </summary>
            <param name="gag">Заглушка для конструктора.</param>
        </member>
        <member name="P:VkNet.Model.RequestParams.GroupsBanUserParams.GroupId">
            <summary>
            Идентификатор группы. положительное число, обязательный параметр.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.GroupsBanUserParams.UserId">
            <summary>
            Идентификатор пользователя, которого нужно добавить в черный список. положительное число, обязательный параметр.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.GroupsBanUserParams.EndDate">
            <summary>
            Дата завершения срока действия бана в формате unixtime. Максимальный возможный срок окончания бана, который можно указать, — один год с его начала. Если параметр не указан, пользователь будет заблокирован навсегда. положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.GroupsBanUserParams.Reason">
            <summary>
            Причина бана: 
            
            0 — другое (по умолчанию); 
            1 — спам; 
            2 — оскорбление участников; 
            3 — нецензурные выражения; 
            4 — сообщения не по теме. 
            положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.GroupsBanUserParams.Comment">
            <summary>
            Текст комментария к бану. строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.GroupsBanUserParams.CommentVisible">
            <summary>
            1 – текст комментария будет отображаться пользователю. 
            0 – текст комментария не доступен пользователю. (по умолчанию) флаг, может принимать значения 1 или 0.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.GroupsBanUserParams.ToVkParameters(VkNet.Model.RequestParams.GroupsBanUserParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.GroupsEditManagerParams">
            <summary>
            Параметры метода groups.editManager
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.GroupsEditManagerParams.#ctor(System.Boolean)">
            <summary>
            Параметры метода groups.editManager
            </summary>
            <param name="gag">Заглушка для конструктора.</param>
        </member>
        <member name="P:VkNet.Model.RequestParams.GroupsEditManagerParams.GroupId">
            <summary>
            Идентификатор сообщества (указывается без знака «минус»). положительное число, обязательный параметр.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.GroupsEditManagerParams.UserId">
            <summary>
            Идентификатор пользователя, чьи полномочия в сообществе нужно изменить. положительное число, обязательный параметр.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.GroupsEditManagerParams.Role">
            <summary>
            Уровень полномочий: 
            
            moderator — модератор; 
            editor — редактор; 
            administrator — администратор. 
            
            Если параметр не задан, с пользователя user_id снимаются полномочия руководителя. строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.GroupsEditManagerParams.IsContact">
            <summary>
            Отображать ли пользователя в блоке контактов сообщества. флаг, может принимать значения 1 или 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.GroupsEditManagerParams.ContactPosition">
            <summary>
            Должность пользователя, отображаемая в блоке контактов. строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.GroupsEditManagerParams.ContactPhone">
            <summary>
            Телефон пользователя, отображаемый в блоке контактов. строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.GroupsEditManagerParams.ContactEmail">
            <summary>
            Email пользователя, отображаемый в блоке контактов. строка.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.GroupsEditManagerParams.ToVkParameters(VkNet.Model.RequestParams.GroupsEditManagerParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.GroupsGetMembersParams">
            <summary>
            Параметры метода groups.getMembers
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.GroupsGetMembersParams.#ctor(System.Boolean)">
            <summary>
            Параметры метода groups.getMembers
            </summary>
            <param name="gag">Заглушка для конструктора.</param>
        </member>
        <member name="P:VkNet.Model.RequestParams.GroupsGetMembersParams.GroupId">
            <summary>
            Идентификатор или короткое имя сообщества. строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.GroupsGetMembersParams.Sort">
            <summary>
            Сортировка, с которой необходимо вернуть список участников. Может принимать значения: 
            
            id_asc — в порядке возрастания id; 
            id_desc — в порядке убывания id; 
            time_asc — в хронологическом порядке по вступлению в сообщество; 
            time_desc — в антихронологическом порядке по вступлению в сообщество. 
            Сортировка по time_asc и time_desc возможна только при вызове от модератора сообщества. строка, по умолчанию id_asc.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.GroupsGetMembersParams.Offset">
            <summary>
            Смещение, необходимое для выборки определенного подмножества участников. По умолчанию 0. положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.GroupsGetMembersParams.Count">
            <summary>
            Количество участников сообщества, информацию о которых необходимо получить. положительное число, по умолчанию 1000, максимальное значение 1000.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.GroupsGetMembersParams.Fields">
            <summary>
            Список дополнительных полей, которые необходимо вернуть. 
            Доступные значения: sex, bdate, city, country, photo_50, photo_100, photo_200_orig, photo_200, photo_400_orig, photo_max, photo_max_orig, online, online_mobile, lists, domain, has_mobile, contacts, connections, site, education, universities, schools, can_post, can_see_all_posts, can_see_audio, can_write_private_message, status, last_seen, common_count, relation, relatives, counters список строк, разделенных через запятую.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.GroupsGetMembersParams.Filter">
            <summary>
            Friends — будут возвращены только друзья в этом сообществе. 
            unsure — будут возвращены пользователи, которые выбрали «Возможно пойду» (если сообщество относится к мероприятиям). 
            managers — будут возвращены только руководители сообщества (доступно при запросе с передачей access_token от имени администратора сообщества). 
            строка.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.GroupsGetMembersParams.ToVkParameters(VkNet.Model.RequestParams.GroupsGetMembersParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.GroupsGetParams">
            <summary>
            Параметры метода groups.get
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.GroupsGetParams.#ctor(System.Boolean)">
            <summary>
            Параметры метода groups.get
            </summary>
            <param name="gag">Заглушка для конструктора.</param>
        </member>
        <member name="P:VkNet.Model.RequestParams.GroupsGetParams.UserId">
            <summary>
            Идентификатор пользователя, информацию о сообществах которого требуется получить. положительное число, по умолчанию идентификатор текущего пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.GroupsGetParams.Extended">
            <summary>
            Если указать в качестве этого параметра 1, то будет возвращена полная информация о группах пользователя. По умолчанию 0. флаг, может принимать значения 1 или 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.GroupsGetParams.Filter">
            <summary>
            Список фильтров сообществ, которые необходимо вернуть, перечисленные через запятую. Доступны значения admin, editor, moder, groups, publics, events. По умолчанию возвращаются все сообщества пользователя. 
            При указании фильтра admin будут возвращены сообщества, в которых пользователь является администратором, editor — администратором или редактором, moder — администратором, редактором или модератором. список строк, разделенных через запятую.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.GroupsGetParams.Fields">
            <summary>
            Список дополнительных полей, которые необходимо вернуть. Возможные значения: city, country, place, description, wiki_page, members_count, counters, start_date, finish_date, can_post, can_see_all_posts, activity, status, contacts, links, fixed_post, verified, site, can_create_topic. Подробнее см. описание полей объекта group. 
            Обратите внимание, этот параметр учитывается только при extended=1. список строк, разделенных через запятую.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.GroupsGetParams.Offset">
            <summary>
            Смещение, необходимое для выборки определённого подмножества сообществ. положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.GroupsGetParams.Count">
            <summary>
            Количество сообществ, информацию о которых нужно вернуть. положительное число, максимальное значение 1000.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.GroupsGetParams.ToVkParameters(VkNet.Model.RequestParams.GroupsGetParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.GroupsSearchParams">
            <summary>
            Параметры метода groups.search
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.GroupsSearchParams.#ctor(System.Boolean)">
            <summary>
            Параметры метода groups.search
            </summary>
            <param name="gag">Заглушка для конструктора.</param>
        </member>
        <member name="P:VkNet.Model.RequestParams.GroupsSearchParams.Query">
            <summary>
            Текст поискового запроса. строка, обязательный параметр.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.GroupsSearchParams.Type">
            <summary>
            Тип сообщества. Возможные значения: group, page, event. строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.GroupsSearchParams.CountryId">
            <summary>
            Идентификатор страны. положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.GroupsSearchParams.CityId">
            <summary>
            Идентификатор города. При передаче этого параметра поле country_id игнорируется. положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.GroupsSearchParams.Future">
            <summary>
            При передаче значения 1 будут выведены предстоящие события. Учитывается только при передаче в качестве type значения event. флаг, может принимать значения 1 или 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.GroupsSearchParams.Sort">
            <summary>
            0 — сортировать по умолчанию (аналогично результатам поиска в полной версии сайта); 
            1 — сортировать по скорости роста; 
            2 — сортировать по отношению дневной посещаемости к количеству пользователей; 
            3 — сортировать по отношению количества лайков к количеству пользователей; 
            4 — сортировать по отношению количества комментариев к количеству пользователей; 
            5 — сортировать по отношению количества записей в обсуждениях к количеству пользователей. 
            целое число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.GroupsSearchParams.Offset">
            <summary>
            Смещение, необходимое для выборки определённого подмножества результатов поиска. По умолчанию — 0. положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.GroupsSearchParams.Count">
            <summary>
            Количество результатов поиска, которое необходимо вернуть. Обратите внимание — даже при использовании параметра offset для получения информации доступны только первые 1000 результатов. 
             положительное число, по умолчанию 20, максимальное значение 1000.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.GroupsSearchParams.ToVkParameters(VkNet.Model.RequestParams.GroupsSearchParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.LikesAddParams">
            <summary>
            Параметры метода likes.add
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.LikesAddParams.#ctor(System.Boolean)">
            <summary>
            Параметры метода Параметры метода likes.add
            </summary>
            <param name="gag">Заглушка для конструктора.</param>
        </member>
        <member name="P:VkNet.Model.RequestParams.LikesAddParams.Type">
            <summary>
            Тип объекта. 
            </summary>
            <remarks>
            Возможные типы:
            post — запись на стене пользователя или группы;
            comment — комментарий к записи на стене;
            photo — фотография;
            audio — аудиозапись;
            video — видеозапись;
            note — заметка;
            market — товар;
            photo_comment — комментарий к фотографии;
            video_comment — комментарий к видеозаписи;
            topic_comment — комментарий в обсуждении;
            market_comment — комментарий к товару; строка, обязательный параметр (Строка, обязательный параметр).
            </remarks>
        </member>
        <member name="P:VkNet.Model.RequestParams.LikesAddParams.ItemId">
            <summary>
            Идентификатор объекта. положительное число, обязательный параметр (Положительное число, обязательный параметр).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.LikesAddParams.OwnerId">
            <summary>
            Идентификатор владельца объекта. целое число, по умолчанию идентификатор текущего пользователя (Целое число, по умолчанию идентификатор текущего пользователя).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.LikesAddParams.AccessKey">
            <summary>
            Ключ доступа в случае работы с приватными объектами. строка (Строка).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.LikesAddParams.Reference">
            <summary>
            Ссылка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.LikesAddParams.CaptchaSid">
            <summary>
            Идентификатор капчи
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.LikesAddParams.CaptchaKey">
            <summary>
            текст, который ввел пользователь
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.LikesAddParams.ToVkParameters(VkNet.Model.RequestParams.LikesAddParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.PagesGetParams">
            <summary>
            Параметры метода pages.get
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.PagesGetParams.#ctor(System.Boolean)">
            <summary>
            Параметры метода pages.get
            </summary>
            <param name="gag">Заглушка для конструктора.</param>
        </member>
        <member name="P:VkNet.Model.RequestParams.PagesGetParams.OwnerId">
            <summary>
            Идентификатор владельца вики-страницы. целое число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PagesGetParams.PageId">
            <summary>
            Идентификатор вики-страницы. целое число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PagesGetParams.Global">
            <summary>
            1 — требуется получить информацию о глобальной вики-странице. флаг, может принимать значения 1 или 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PagesGetParams.SitePreview">
            <summary>
            1 — получаемая wiki страница является предпросмотром для прикрепленной ссылки. флаг, может принимать значения 1 или 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PagesGetParams.Title">
            <summary>
            Название страницы. строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PagesGetParams.NeedSource">
            <summary>
            1 —  требуется вернуть содержимое страницы в вики-формате. флаг, может принимать значения 1 или 0, доступен начиная с версии 5.20.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PagesGetParams.NeedHtml">
            <summary>
            1 —  требуется вернуть html-представление страницы. флаг, может принимать значения 1 или 0.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.PagesGetParams.ToVkParameters(VkNet.Model.RequestParams.PagesGetParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns>Объект типа <see cref="T:VkNet.Model.RequestParams.PagesGetParams"/></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.UsersGetNearbyParams">
            <summary>
            Параметры метода users.getNearby
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.UsersGetNearbyParams.#ctor(System.Boolean)">
            <summary>
            Параметры метода users.getNearby
            </summary>
            <param name="gag">Заглушка для конструктора.</param>
        </member>
        <member name="P:VkNet.Model.RequestParams.UsersGetNearbyParams.Latitude">
            <summary>
            Географическая широта точки, в которой в данный момент находится пользователь, заданная в градусах (от -90 до 90). дробное число, обязательный параметр.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.UsersGetNearbyParams.Longitude">
            <summary>
            Географическая долгота точки, в которой в данный момент находится пользователь, заданная в градусах (от -180 до 180). дробное число, обязательный параметр.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.UsersGetNearbyParams.Accuracy">
            <summary>
            Точность текущего местоположения пользователя в метрах. положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.UsersGetNearbyParams.Timeout">
            <summary>
            Время в секундах через которое пользователь должен перестать находиться через поиск по местоположению. положительное число, по умолчанию 7200.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.UsersGetNearbyParams.Radius">
            <summary>
            Тип радиуса зоны поиска (от 1 до 4) 
            
            1 — 300 метров; 
            2 — 2400 метров; 
            3 — 18 километров; 
            4 — 150 километров. 
            положительное число, по умолчанию 1.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.UsersGetNearbyParams.Fields">
            <summary>
            Список дополнительных полей профилей, которые необходимо вернуть. См. подробное описание. 
            Доступные значения: photo_id, verified, sex, bdate, city, country, home_town, has_photo, photo_50, photo_100, photo_200_orig, photo_200, photo_400_orig, photo_max, photo_max_orig, online, lists, domain, has_mobile, contacts, site, education, universities, schools, status, last_seen, followers_count, common_count, occupation, nickname, relatives, relation, personal, connections, exports, wall_comments, activities, interests, music, movies, tv, books, games, about, quotes, can_post, can_see_all_posts, can_see_audio, can_write_private_message, can_send_friend_request, is_favorite, is_hidden_from_feed, timezone, screen_name, maiden_name, crop_photo, is_friend, friend_status, career, military, blacklisted, blacklisted_by_me. список строк, разделенных через запятую.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.UsersGetNearbyParams.NameCase">
            <summary>
            Падеж для склонения имени и фамилии пользователя. Возможные значения: именительный – nom, родительный – gen, дательный – dat, винительный – acc, творительный – ins, предложный – abl. По умолчанию nom. строка.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.UsersGetNearbyParams.ToVkParameters(VkNet.Model.RequestParams.UsersGetNearbyParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.VideoCreateCommentParams">
            <summary>
            Параметры метода video.createComment
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.VideoCreateCommentParams.#ctor(System.Boolean)">
            <summary>
            Параметры метода video.createComment
            </summary>
            <param name="gag">Заглушка для конструктора.</param>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoCreateCommentParams.OwnerId">
            <summary>
            Идентификатор пользователя или сообщества, которому принадлежит видеозапись. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор текущего пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoCreateCommentParams.VideoId">
            <summary>
            Идентификатор видеозаписи. целое число, обязательный параметр.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoCreateCommentParams.Message">
            <summary>
            Текст комментария (является обязательным, если не задан параметр attachments). строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoCreateCommentParams.Attachments">
            <summary>
            Список объектов, приложенных к комментарию и разделённых символом ",". Поле attachments представляется в формате:
            &lt;type&gt;&lt;owner_id&gt;_&lt;media_id&gt;,&lt;type&gt;&lt;owner_id&gt;_&lt;media_id&gt;
            &lt;type&gt; — тип медиа-вложения:
            photo — фотография 
            video — видеозапись 
            audio — аудиозапись 
            doc — документ
            &lt;owner_id&gt; — идентификатор владельца медиа-вложения 
            &lt;media_id&gt; — идентификатор медиа-вложения. 
            
            Например:
            photo100172_166443618,photo66748_265827614
            Параметр является обязательным, если не задан параметр message. список строк, разделенных через запятую.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoCreateCommentParams.FromGroup">
            <summary>
            Данный параметр учитывается, если oid &lt; 0 (комментарий к видеозаписи группы). 1 — комментарий будет опубликован от имени группы, 0 — комментарий будет опубликован от имени пользователя (по умолчанию). флаг, может принимать значения 1 или 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoCreateCommentParams.ReplyToComment">
            <summary>
            Положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoCreateCommentParams.StickerId">
            <summary>
            Положительное число.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.VideoCreateCommentParams.ToVkParameters(VkNet.Model.RequestParams.VideoCreateCommentParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.VideoEditParams">
            <summary>
            Параметры метода video.edit
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.VideoEditParams.#ctor(System.Boolean)">
            <summary>
            Параметры метода video.edit
            </summary>
            <param name="gag">Заглушка для конструктора.</param>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoEditParams.OwnerId">
            <summary>
            Идентификатор пользователя или сообщества, которому принадлежит видеозапись. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор текущего пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoEditParams.VideoId">
            <summary>
            Идентификатор видеозаписи. целое число, обязательный параметр.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoEditParams.Name">
            <summary>
            Новое название для видеозаписи. строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoEditParams.Desc">
            <summary>
            Новое описание для видеозаписи. строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoEditParams.PrivacyView">
            <summary>
            Настройки приватности просмотра видеозаписи в специальном формате. Приватность доступна для видеозаписей, которые пользователь загрузил в профиль. список строк, разделенных через запятую.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoEditParams.PrivacyComment">
            <summary>
            Настройки приватности комментирования видеозаписи в специальном формате. 
            Приватность доступна для видеозаписей, которые пользователь загрузил в профиль. список строк, разделенных через запятую.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoEditParams.NoComments">
            <summary>
            Закрыть комментарии (для видео из сообществ). флаг, может принимать значения 1 или 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoEditParams.Repeat">
            <summary>
            Зацикливание воспроизведения видеозаписи. флаг, может принимать значения 1 или 0.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.VideoEditParams.ToVkParameters(VkNet.Model.RequestParams.VideoEditParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.VideoGetCommentsParams">
            <summary>
            Параметры метода video.getComments
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.VideoGetCommentsParams.#ctor(System.Boolean)">
            <summary>
            Параметры метода video.getComments
            </summary>
            <param name="gag">Заглушка для конструктора.</param>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoGetCommentsParams.OwnerId">
            <summary>
            Идентификатор пользователя или сообщества, которому принадлежит видеозапись. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор текущего пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoGetCommentsParams.VideoId">
            <summary>
            Идентификатор видеозаписи. положительное число, обязательный параметр.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoGetCommentsParams.NeedLikes">
            <summary>
            1 — будет возвращено дополнительное поле likes. По умолчанию поле likes не возвращается. флаг, может принимать значения 1 или 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoGetCommentsParams.StartCommentId">
            <summary>
            Идентификатор комментария, начиная с которого нужно вернуть список (подробности см. ниже). положительное число, доступен начиная с версии 5.33.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoGetCommentsParams.Offset">
            <summary>
            Смещение, необходимое для выборки определенного подмножества комментариев. По умолчанию — 0. целое число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoGetCommentsParams.Count">
            <summary>
            Количество комментариев, информацию о которых необходимо вернуть. положительное число, по умолчанию 20, максимальное значение 100.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoGetCommentsParams.Sort">
            <summary>
            Порядок сортировки комментариев (asc — от старых к новым, desc — от новых к старым) строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoGetCommentsParams.Extended">
            <summary>
            1 — комментарии в ответе будут возвращены в виде пронумерованных объектов, дополнительно будут возвращены списки объектов profiles, groups. флаг, может принимать значения 1 или 0, доступен начиная с версии 5.0.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.VideoGetCommentsParams.ToVkParameters(VkNet.Model.RequestParams.VideoGetCommentsParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.VideoGetParams">
            <summary>
            Параметры метода video.get
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.VideoGetParams.#ctor(System.Boolean)">
            <summary>
            Параметры метода video.get
            </summary>
            <param name="gag">Заглушка для конструктора.</param>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoGetParams.OwnerId">
            <summary>
            Идентификатор пользователя или сообщества, которому принадлежат видеозаписи. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор текущего пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoGetParams.Videos">
            <summary>
            Перечисленные через запятую идентификаторы — идущие через знак подчеркивания id пользователей, которым принадлежат видеозаписи, и id самих видеозаписей. Если видеозапись принадлежит сообществу, то в качестве первого параметра используется -id сообщества.
            Пример значения videos: 
            -4363_136089719,13245770_137352259 
            Некоторые видеозаписи, идентификаторы которых могут быть получены через API, закрыты приватностью, и не будут получены. В этом случае следует использовать ключ доступа access_key в её идентификаторе. Пример значения videos: 
            
            1_129207899_220df2876123d3542f, 6492_135055734_e0a9bcc31144f67fbd 
            Поле access_key будет возвращено вместе с остальными данными видеозаписи в методах, которые возвращают видеозаписи, закрытые приватностью, но доступные в данном контексте. Например данное поле имеют видеозаписи, возвращаемые методом newsfeed.get. список строк, разделенных через запятую.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoGetParams.AlbumId">
            <summary>
            Идентификатор альбома, видеозаписи из которого нужно вернуть. целое число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoGetParams.Count">
            <summary>
            Количество возвращаемых видеозаписей. положительное число, максимальное значение 200, по умолчанию 100.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoGetParams.Offset">
            <summary>
            Смещение относительно первой найденной видеозаписи для выборки определенного подмножества. положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoGetParams.Extended">
            <summary>
            Определяет, возвращать ли информацию о настройках приватности видео для текущего пользователя. флаг, может принимать значения 1 или 0.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.VideoGetParams.ToVkParameters(VkNet.Model.RequestParams.VideoGetParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.VideoReorderVideosParams">
            <summary>
            Параметры метода video.reorderVideos
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.VideoReorderVideosParams.#ctor(System.Boolean)">
            <summary>
            Параметры метода video.reorderVideos
            </summary>
            <param name="gag">Заглушка для конструктора.</param>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoReorderVideosParams.TargetId">
            <summary>
            Идентификатор пользователя или сообщества, в чьем альбоме нужно переместить видео. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор текущего пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoReorderVideosParams.AlbumId">
            <summary>
            Идентификатор альбома с видеозаписью, которую нужно переместить. целое число, обязательный параметр.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoReorderVideosParams.OwnerId">
            <summary>
            Идентификатор владельца видеозаписи, которую нужно переместить (пользователь или сообщество). целое число, обязательный параметр.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoReorderVideosParams.VideoId">
            <summary>
            Идентификатор видеозаписи, которую нужно переместить. положительное число, обязательный параметр.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoReorderVideosParams.BeforeOwnerId">
            <summary>
            Идентификатор владельца видеозаписи, перед которой следует поместить текущую (пользователь или сообщество). целое число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoReorderVideosParams.BeforeVideoId">
            <summary>
            Идентификатор видеозаписи, перед которой следует поместить текущую. положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoReorderVideosParams.AfterOwnerId">
            <summary>
            Идентификатор владельца видеозаписи, после которой следует поместить текущую (пользователь или сообщество). целое число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoReorderVideosParams.AfterVideoId">
            <summary>
            Идентификатор видеозаписи, после которой следует поместить текущую. положительное число.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.VideoReorderVideosParams.ToVkParameters(VkNet.Model.RequestParams.VideoReorderVideosParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.VideoSaveParams">
            <summary>
            Параметры метода video.save
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.VideoSaveParams.#ctor(System.Boolean)">
            <summary>
            Параметры метода video.save
            </summary>
            <param name="gag">Заглушка для конструктора.</param>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoSaveParams.Name">
            <summary>
            Название видеофайла. строка, по умолчанию No name.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoSaveParams.Description">
            <summary>
            Описание видеофайла. строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoSaveParams.IsPrivate">
            <summary>
            Указывается 1 в случае последующей отправки видеозаписи личным сообщением. После загрузки с этим параметром видеозапись не будет отображаться в списке видеозаписей пользователя и не будет доступна другим пользователям по id. По умолчанию 0. флаг, может принимать значения 1 или 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoSaveParams.Wallpost">
            <summary>
            Требуется ли после сохранения опубликовать запись с видео на стене (1 — требуется, 0 — не требуется). флаг, может принимать значения 1 или 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoSaveParams.Link">
            <summary>
            Url для встраивания видео с внешнего сайта, например, с youtube. В этом случае нужно вызвать полученный upload_url не прикрепляя файл, достаточно просто обратиться по этому адресу. строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoSaveParams.GroupId">
            <summary>
            Идентификатор сообщества, в которое будет сохранен видеофайл. По умолчанию файл сохраняется на страницу текущего пользователя. положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoSaveParams.AlbumId">
            <summary>
            Идентификатор альбома, в который будет загружен видео файл. положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoSaveParams.PrivacyView">
            <summary>
            Настройки приватности просмотра видеозаписи в специальном формате. Приватность доступна для видеозаписей, которые пользователь загрузил в профиль. список строк, разделенных через запятую.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoSaveParams.PrivacyComment">
            <summary>
            Настройки приватности комментирования видеозаписи в специальном формате. 
            Приватность доступна для видеозаписей, которые пользователь загрузил в профиль. список строк, разделенных через запятую.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoSaveParams.NoComments">
            <summary>
            Закрыть комментарии (для видео из сообществ). флаг, может принимать значения 1 или 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoSaveParams.Repeat">
            <summary>
            Зацикливание воспроизведения видеозаписи. флаг, может принимать значения 1 или 0.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.VideoSaveParams.ToVkParameters(VkNet.Model.RequestParams.VideoSaveParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.VideoSearchParams">
            <summary>
            Параметры метода video.search
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.VideoSearchParams.#ctor(System.Boolean)">
            <summary>
            Параметры метода video.search
            </summary>
            <param name="gag">Заглушка для конструктора.</param>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoSearchParams.Query">
            <summary>
            Строка поискового запроса. Например, The Beatles. строка, обязательный параметр.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoSearchParams.Sort">
            <summary>
            Вид сортировки. 0 — по дате добавления видеозаписи, 1 — по длительности, 2 — по релевантности. целое число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoSearchParams.Hd">
            <summary>
            Если не равен нулю, то поиск производится только по видеозаписям высокого качества. целое число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoSearchParams.Adult">
            <summary>
            Фильтр «Безопасный поиск» (1 — выключен, 0 — включен). флаг, может принимать значения 1 или 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoSearchParams.Filters">
            <summary>
            Список критериев, по которым требуется отфильтровать видео: 
            
            mp4 — искать только видео в формате mp4 (воспроиводимое на iOS); 
            youtube — возвращать только youtube видео; 
            vimeo — возвращать только vimeo видео; 
            short — возвращать только короткие видеозаписи; 
            long — возвращать только длинные видеозаписи. 
            список строк, разделенных через запятую.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoSearchParams.SearchOwn">
            <summary>
            1 – искать по видеозаписям пользователя, 0 – не искать по видеозаписям пользователя (по умолчанию). флаг, может принимать значения 1 или 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoSearchParams.Offset">
            <summary>
            Смещение относительно первой найденной видеозаписи для выборки определенного подмножества. положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoSearchParams.Longer">
            <summary>
            Количество секунд, видеозаписи длиннее которого необходимо вернуть. положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoSearchParams.Shorter">
            <summary>
            Количество секунд, видеозаписи короче которого необходимо вернуть. положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoSearchParams.Count">
            <summary>
            Количество возвращаемых видеозаписей. Обратите внимание — даже при использовании параметра offset для получения информации доступны только первые 1000 результатов. 
             положительное число, по умолчанию 20, максимальное значение 200.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.VideoSearchParams.Extended">
            <summary>
            1 — возвращать дополнительные объекты profiles и groups, которые содержат id и имя/название владельцев видео. флаг, может принимать значения 1 или 0, по умолчанию 0.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.VideoSearchParams.ToVkParameters(VkNet.Model.RequestParams.VideoSearchParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.WallAddCommentParams">
            <summary>
            Параметры метода wall.addComment
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.WallAddCommentParams.#ctor(System.Boolean)">
            <summary>
            Параметры метода wall.addComment
            </summary>
            <param name="gag">Заглушка для конструктора.</param>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallAddCommentParams.OwnerId">
            <summary>
            Идентификатор пользователя или сообщества, на чьей стене находится запись, к которой необходимо добавить комментарий. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор текущего пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallAddCommentParams.PostId">
            <summary>
            Идентификатор записи на стене пользователя или сообщества. положительное число, обязательный параметр.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallAddCommentParams.FromGroup">
            <summary>
            Данный параметр учитывается, если owner_id &lt; 0 (комментарий публикуется на стене группы). 1 — комментарий будет опубликован от имени группы, 0 — комментарий будет опубликован от имени пользователя (по умолчанию). флаг, может принимать значения 1 или 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallAddCommentParams.Text">
            <summary>
            Текст комментария к записи. строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallAddCommentParams.ReplyToComment">
            <summary>
            Идентификатор комментария, в ответ на который должен быть добавлен новый комментарий. целое число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallAddCommentParams.Attachments">
            <summary>
            Список объектов, приложенных к комментарию и разделённых символом ",". Поле attachments представляется в формате:
            &lt;type&gt;&lt;owner_id&gt;_&lt;media_id&gt;,&lt;type&gt;&lt;owner_id&gt;_&lt;media_id&gt;
            &lt;type&gt; — тип медиа-вложения:
            photo — фотография 
            video — видеозапись 
            audio — аудиозапись 
            doc — документ
            &lt;owner_id&gt; — идентификатор владельца медиа-вложения 
            &lt;media_id&gt; — идентификатор медиа-вложения. 
            
            Например:
            photo100172_166443618,photo66748_265827614
            Параметр является обязательным, если не задан параметр text. список строк, разделенных через запятую.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallAddCommentParams.StickerId">
            <summary>
            Идентификатор стикера. положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallAddCommentParams.Ref">
            <summary>
            Строка.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.WallAddCommentParams.ToVkParameters(VkNet.Model.RequestParams.WallAddCommentParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.WallEditParams">
            <summary>
            Параметры метода wall.edit
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.WallEditParams.#ctor(System.Boolean)">
            <summary>
            Параметры метода wall.edit
            </summary>
            <param name="gag">Заглушка для конструктора.</param>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallEditParams.OwnerId">
            <summary>
            Идентификатор пользователя или сообщества, на стене которого находится запись. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор текущего пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallEditParams.PostId">
            <summary>
            Идентификатор записи на стене. положительное число, обязательный параметр.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallEditParams.FriendsOnly">
            <summary>
            1 — запись будет доступна только друзьям, 0 — всем пользователям. 
            Параметр учитывается только при редактировании отложенной записи. флаг, может принимать значения 1 или 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallEditParams.Message">
            <summary>
            Текст сообщения (является обязательным, если не задан параметр attachments) строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallEditParams.Attachments">
            <summary>
            Список объектов, приложенных к записи и разделённых символом ",". Поле attachments представляется в формате:
            &lt;type&gt;&lt;owner_id&gt;_&lt;media_id&gt;,&lt;type&gt;&lt;owner_id&gt;_&lt;media_id&gt;
            
            &lt;type&gt; — тип медиа-приложения:
             
            
            photo — фотография 
            video — видеозапись 
            audio — аудиозапись 
            doc — документ 
            graffiti — граффити 
            page — wiki-страница 
            note — заметка 
            poll — опрос 
            album — альбом. 
            
            &lt;owner_id&gt; — идентификатор владельца медиа-приложения;
            &lt;media_id&gt; — идентификатор медиа-приложения.
            
            Например:
            photo100172_166443618,photo66748_265827614
            
            Также в поле attachments может быть указана ссылка на внешнюю страницу, которую Вы хотите разместить в статусе, например:
            photo66748_265827614,http://habrahabr.ru
            
            При попытке приложить больше одной ссылки будет возвращена ошибка. 
            
            Параметр является обязательным, если не задан параметр message. список строк, разделенных через запятую.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallEditParams.Services">
            <summary>
            Список сервисов или сайтов, на которые необходимо экспортировать запись, в случае если пользователь настроил соответствующую опцию. Например, twitter, facebook. 
            Параметр учитывается только при редактировании отложенной записи. строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallEditParams.Signed">
            <summary>
            1 — у записи, размещенной от имени сообщества будет добавлена подпись (имя пользователя, разместившего запись), 0 — подписи добавлено не будет. 
            Параметр учитывается только при редактировании записи на стене сообщества, опубликованной от имени группы. флаг, может принимать значения 1 или 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallEditParams.PublishDate">
            <summary>
            Дата публикации записи в формате unixtime. Если параметр не указан, отложенная запись будет опубликована. 
            Параметр учитывается только при редактировании отложенной записи. положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallEditParams.Lat">
            <summary>
            Географическая широта отметки, заданная в градусах (от -90 до 90). дробное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallEditParams.Long">
            <summary>
            Географическая долгота отметки, заданная в градусах (от -180 до 180). дробное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallEditParams.PlaceId">
            <summary>
            Идентификатор места, в котором отмечен пользователь. положительное число.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.WallEditParams.ToVkParameters(VkNet.Model.RequestParams.WallEditParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.WallGetCommentsParams">
            <summary>
            Параметры метода wall.getComments
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.WallGetCommentsParams.#ctor(System.Boolean)">
            <summary>
            Параметры метода wall.getComments
            </summary>
            <param name="gag">Заглушка для конструктора.</param>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallGetCommentsParams.OwnerId">
            <summary>
            Идентификатор владельца страницы (пользователь или сообщество). Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор текущего пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallGetCommentsParams.PostId">
            <summary>
            Идентификатор записи на стене. положительное число, обязательный параметр.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallGetCommentsParams.NeedLikes">
            <summary>
            1 — возвращать информацию о лайках. флаг, может принимать значения 1 или 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallGetCommentsParams.StartCommentId">
            <summary>
            Идентификатор комментария, начиная с которого нужно вернуть список (подробности см. ниже). положительное число, доступен начиная с версии 5.33.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallGetCommentsParams.Offset">
            <summary>
            Сдвиг, необходимый для получения конкретной выборки результатов. целое число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallGetCommentsParams.Count">
            <summary>
            Число комментариев, которые необходимо получить. По умолчанию — 10, максимальное значение — 100. положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallGetCommentsParams.Sort">
            <summary>
            Порядок сортировки комментариев (asc — от старых к новым, desc - от новых к старым) строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallGetCommentsParams.PreviewLength">
            <summary>
            Количество символов, по которому нужно обрезать текст комментария. Укажите 0, если Вы не хотите обрезатьтекст. положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallGetCommentsParams.Extended">
            <summary>
            1 — комментарии в ответе будут возвращены в виде пронумерованных объектов, дополнительно будут возвращены списки объектов profiles, groups. флаг, может принимать значения 1 или 0, доступен начиная с версии 5.0.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.WallGetCommentsParams.ToVkParameters(VkNet.Model.RequestParams.WallGetCommentsParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.WallPostParams">
            <summary>
            Параметры метода wall.post
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.WallPostParams.#ctor(System.Boolean)">
            <summary>
            Параметры метода wall.post
            </summary>
            <param name="gag">Заглушка для конструктора.</param>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallPostParams.OwnerId">
            <summary>
            Идентификатор пользователя или сообщества, на стене которого должна быть опубликована запись. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор текущего пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallPostParams.FriendsOnly">
            <summary>
            1 — запись будет доступна только друзьям, 0 — всем пользователям. По умолчанию публикуемые записи доступны всем пользователям. флаг, может принимать значения 1 или 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallPostParams.FromGroup">
            <summary>
            Данный параметр учитывается, если owner_id &lt; 0 (запись публикуется на стене группы). 1 — запись будет опубликована от имени группы, 0 — запись будет опубликована от имени пользователя (по умолчанию). флаг, может принимать значения 1 или 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallPostParams.Message">
            <summary>
            Текст сообщения (является обязательным, если не задан параметр attachments) строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallPostParams.Attachments">
            <summary>
            Список объектов, приложенных к записи и разделённых символом ",". Поле attachments представляется в формате:
            &lt;type&gt;&lt;owner_id&gt;_&lt;media_id&gt;,&lt;type&gt;&lt;owner_id&gt;_&lt;media_id&gt;
             
            &lt;type&gt; — тип медиа-приложения: 
            
            photo — фотография; 
            video — видеозапись ; 
            audio — аудиозапись; 
            doc — документ; 
            page — wiki-страница; 
            note — заметка; 
            poll — опрос. 
            album — альбом. 
            
            &lt;owner_id&gt; — идентификатор владельца медиа-приложения (обратите внимание, если объект находится в сообществе, этот параметр должен быть отрицательным). 
            &lt;media_id&gt; — идентификатор медиа-приложения. 
            
            Например:
            photo100172_166443618,photo66748_265827614
            
            Также в поле attachments может быть указана ссылка на внешнюю страницу, которую Вы хотите разместить в записи, например:
            photo66748_265827614,http://habrahabr.ru
            
            При попытке приложить больше одной ссылки будет возвращена ошибка. 
            
            Параметр является обязательным, если не задан параметр message. список строк, разделенных через запятую.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallPostParams.Services">
            <summary>
            Список сервисов или сайтов, на которые необходимо экспортировать запись, в случае если пользователь настроил соответствующую опцию. Например, twitter, facebook. строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallPostParams.Signed">
            <summary>
            1 — у записи, размещенной от имени сообщества, будет добавлена подпись (имя пользователя, разместившего запись), 0 — подписи добавлено не будет. Параметр учитывается только при публикации на стене сообщества и указании параметра from_group. По умолчанию подпись не добавляется. флаг, может принимать значения 1 или 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallPostParams.PublishDate">
            <summary>
            Дата публикации записи в формате unixtime. Если параметр указан, публикация записи будет отложена до указанного времени. положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallPostParams.Lat">
            <summary>
            Географическая широта отметки, заданная в градусах (от -90 до 90). дробное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallPostParams.Long">
            <summary>
            Географическая долгота отметки, заданная в градусах (от -180 до 180). дробное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallPostParams.PlaceId">
            <summary>
            Идентификатор места, в котором отмечен пользователь. положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallPostParams.PostId">
            <summary>
            Идентификатор записи, которую необходимо опубликовать. Данный параметр используется для публикации отложенных записей и предложенных новостей. положительное число.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.WallPostParams.ToVkParameters(VkNet.Model.RequestParams.WallPostParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.WallSearchParams">
            <summary>
            Параметры метода wall.search
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.WallSearchParams.#ctor(System.Boolean)">
            <summary>
            Параметры метода wall.search
            </summary>
            <param name="gag">Заглушка для конструктора.</param>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallSearchParams.OwnerId">
            <summary>
            Идентификатор пользователя или сообщества. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallSearchParams.Domain">
            <summary>
            Короткий адрес пользователя или сообщества. строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallSearchParams.Query">
            <summary>
            Поисковой запрос. строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallSearchParams.OwnersOnly">
            <summary>
            1 — возвращать только записи от имени владельца стены. флаг, может принимать значения 1 или 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallSearchParams.Count">
            <summary>
            Количество записей, которые необходимо вернуть. положительное число, по умолчанию 20, максимальное значение 100.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallSearchParams.Offset">
            <summary>
            Смещение. положительное число, по умолчанию 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallSearchParams.Extended">
            <summary>
            Возвращать ли расширенную информацию о записях. флаг, может принимать значения 1 или 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallSearchParams.Fields">
            <summary>
            Список дополнительных полей для групп, которые необходимо вернуть. Возможные значения: city, country, place, description, wiki_page, members_count, counters, start_date, finish_date, can_post, can_see_all_posts, activity, status, contacts, links, fixed_post, verified, site, can_create_topic. 
            Обратите внимание, этот параметр учитывается только при extended=1. список строк, разделенных через запятую.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.WallSearchParams.ToVkParameters(VkNet.Model.RequestParams.WallSearchParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.AccountRegisterDeviceParams">
            <summary>
            Параметры запроса подписывания устройства на базе iOS, Android или Windows Phone на получение Push-уведомлений.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.AccountRegisterDeviceParams.#ctor(System.Boolean)">
            <summary>
            Параметры метода account.registerDevice
            </summary>
            <param name="gag">Заглушка для конструктора.</param>
        </member>
        <member name="P:VkNet.Model.RequestParams.AccountRegisterDeviceParams.Token">
            <summary>
            Идентификатор устройства, используемый для отправки уведомлений. (для mpns идентификатор должен представлять из себя URL для отправки уведомлений) строка, обязательный параметр.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AccountRegisterDeviceParams.DeviceModel">
            <summary>
            Cтроковое название модели устройства. строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AccountRegisterDeviceParams.DeviceYear">
            <summary>
            Год устройства целое число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AccountRegisterDeviceParams.DeviceId">
            <summary>
            Уникальный идентификатор устройства. строка, обязательный параметр.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AccountRegisterDeviceParams.SystemVersion">
            <summary>
            Строковая версия операционной системы устройства. строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AccountRegisterDeviceParams.Settings">
            <summary>
            Сериализованный JSON-объект, описывающий настройки уведомлений в специальном формате данные в формате JSON, доступен начиная с версии 5.31.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AccountRegisterDeviceParams.Sandbox">
            <summary>
            Флаг предназначен для iOS устройств. 1 — использовать sandbox сервер для отправки push-уведомлений, 0 — не использовать флаг, может принимать значения 1 или 0, по умолчанию 0.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.AccountRegisterDeviceParams.ToVkParameters(VkNet.Model.RequestParams.AccountRegisterDeviceParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns>Объект типа <see cref="T:VkNet.Model.RequestParams.AccountRegisterDeviceParams"/></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.AudioSearchParams">
            <summary>
            Критерии поиска аудиозаписей.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AudioSearchParams.Query">
            <summary>
            Текст поискового запроса (прим., The Beatles).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AudioSearchParams.Count">
            <summary>
            Количество аудиозаписей, информацию о которых необходимо вернуть.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AudioSearchParams.Offset">
            <summary>
            Смещение, необходимое для выборки определенного подмножетсва аудиозаписей.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AudioSearchParams.Autocomplete">
            <summary>
            Автоматически исправлять ошибки в поисковом запросе (прим. при строке Query "Иуфедуы" поиск будет осуществляться по строке "Beatles").
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AudioSearchParams.Lyrics">
            <summary>
            Поиск только по тем аудиозаписям, которые содержат тексты.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AudioSearchParams.PerformerOnly">
            <summary>
            Поиск только по названию исполнителя.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AudioSearchParams.Sort">
            <summary>
            Сортировка аудиозаписей при поиске.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AudioSearchParams.SearchOwn">
            <summary>
            Производить ли поиск по аудиозаписям пользователя.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.AudioSearchParams.ToVkParameters(VkNet.Model.RequestParams.AudioSearchParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.AuthConfirmParams">
            <summary>
            Параметры запроса метода auth.confirm
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AuthConfirmParams.ClientId">
            <summary>
            Идентификатор Вашего приложения. целое число, обязательный параметр.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AuthConfirmParams.ClientSecret">
            <summary>
            Секретный ключ приложения, доступный в резделе редактирования приложения. строка, обязательный параметр.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AuthConfirmParams.Phone">
            <summary>
            Номер телефона регистрируемого пользователя. Номер телефона может быть проверен заранее методом auth.checkPhone. строка, обязательный параметр.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AuthConfirmParams.Code">
            <summary>
            Код, отправленный пользователю по SMS. строка, обязательный параметр.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AuthConfirmParams.Password">
            <summary>
            Пароль пользователя, который будет использоваться при входе. (Следует передавать только если он не был передан на предыдущем шаге auth.signup) Не меньше 6 символов. строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AuthConfirmParams.TestMode">
            <summary>
            1 — тестовый режим, при котором не будет зарегистрирован новый пользователь, но при этом номер не будет проверяться на использованность. 0 — (по умолчанию) рабочий. флаг, может принимать значения 1 или 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AuthConfirmParams.Intro">
            <summary>
            Битовая маска отвечающая за прохождение обучения использованию приложения. положительное число.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.AuthConfirmParams.ToVkParameters(VkNet.Model.RequestParams.AuthConfirmParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.AuthSignupParams">
            <summary>
            Параметры запроса регистрации нового пользователя по номеру телефона.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AuthSignupParams.FirstName">
            <summary>
            Имя пользователя. строка, обязательный параметр.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AuthSignupParams.LastName">
            <summary>
            Фамилия пользователя. строка, обязательный параметр.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AuthSignupParams.ClientId">
            <summary>
            Идентификатор Вашего приложения. целое число, обязательный параметр.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AuthSignupParams.ClientSecret">
            <summary>
            Секретный ключ приложения, доступный в резделе редактирования приложения. строка, обязательный параметр.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AuthSignupParams.Phone">
            <summary>
            Номер телефона регистрируемого пользователя. Номер телефона может быть проверен заранее методом auth.checkPhone. строка, обязательный параметр.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AuthSignupParams.Password">
            <summary>
            Пароль пользователя, который будет использоваться при входе. Не меньше 6 символов. Также пароль может быть указан позже, при вызове метода auth.confirm. строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AuthSignupParams.TestMode">
            <summary>
            1 — тестовый режим, при котором не будет зарегистрирован новый пользователь, но при этом номер не будет проверяться на использованность. 0 — (по умолчанию) рабочий. флаг, может принимать значения 1 или 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AuthSignupParams.Voice">
            <summary>
            1 — в случае, если вместо SMS необходимо позвонить на указанный номер и продиктовать код голосом. 0 — (по умолчанию) необходимо отправить SMS. В случае если СМС не дошло до пользователя – необходимо вызвать метод повторно указав voice=1 и sid, полученный при первом вызове метода. флаг, может принимать значения 1 или 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AuthSignupParams.Sex">
            <summary>
            Пол пользователя: 1 — женский, 2 — мужской. положительное число.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AuthSignupParams.Sid">
            <summary>
            Идентификатор сессии, необходимый при повторном вызове метода, в случае если SMS сообщение доставлено не было. При первом вызове этот параметр не передается. строка.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.AuthSignupParams.ToVkParameters(VkNet.Model.RequestParams.AuthSignupParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.LikesGetListParams">
            <summary>
            Параметры запроса likes.getList
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.LikesGetListParams.#ctor(System.Boolean)">
            <summary>
            Параметры запроса likes.getList
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.LikesGetListParams.Type">
            <summary>
            Тип объекта.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.LikesGetListParams.OwnerId">
            <summary>
            Идентификатор владельца Like-объекта: id пользователя, id сообщества (со знаком «минус») или id приложения. Если параметр type равен sitepage, то в качестве owner_id необходимо передавать id приложения. Если параметр не задан, то считается, что он равен либо идентификатору текущего пользователя, либо идентификатору текущего приложения (если type равен sitepage).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.LikesGetListParams.ItemId">
            <summary>
            Идентификатор Like-объекта. Если type равен sitepage, то параметр item_id может содержать значение параметра page_id, используемый при инициализации виджета «Мне нравится».
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.LikesGetListParams.PageUrl">
            <summary>
            Url страницы, на которой установлен виджет «Мне нравится». Используется вместо параметра item_id, если при размещении виджета не был указан page_id.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.LikesGetListParams.Filter">
            <summary>
            Указывает, следует ли вернуть всех пользователей, добавивших объект в список "Мне нравится" или только тех, которые рассказали о нем друзьям. Параметр может принимать следующие значения:строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.LikesGetListParams.FriendsOnly">
            <summary>
            Указывает, необходимо ли возвращать только пользователей, которые являются друзьями текущего пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.LikesGetListParams.Offset">
            <summary>
            Смещение, относительно начала списка, для выборки определенного подмножества. Если параметр не задан, то считается, что он равен 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.LikesGetListParams.Count">
            <summary>
            Количество возвращаемых идентификаторов пользователей.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.LikesGetListParams.SkipOwn">
            <summary>
            Не возвращать самого пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.LikesGetListParams.Extended">
            <summary>
            1 — возвращать расширенную информацию о пользователях и сообществах из списка поставивших отметку «Мне нравится» или сделавших репост. По умолчанию — 0.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.LikesGetListParams.ToVkParameters(VkNet.Model.RequestParams.LikesGetListParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.MarketCreateCommentParams">
            <summary>
            Параметры запроса market.createComment
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.MarketCreateCommentParams.#ctor(System.Boolean)">
            <summary>
            Параметры запроса market.createComment
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MarketCreateCommentParams.OwnerId">
            <summary>
            Идентификатор владельца товара. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, обязательный параметр (целое число, обязательный параметр).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MarketCreateCommentParams.ItemId">
            <summary>
            Идентификатор товара. положительное число, обязательный параметр (положительное число, обязательный параметр).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MarketCreateCommentParams.Message">
            <summary>
            Текст комментария (является обязательным, если не задан параметр attachments). строка (строка).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MarketCreateCommentParams.Attachments">
            <summary>
            Список объектов, приложенных к комментарию и разделённых символом ",".
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MarketCreateCommentParams.FromGroup">
            <summary>
            1 — комментарий будет опубликован от имени группы, 0 — комментарий будет опубликован от имени пользователя (по умолчанию). флаг, может принимать значения 1 или 0 (флаг, может принимать значения 1 или 0).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MarketCreateCommentParams.ReplyToComment">
            <summary>
            Идентификатор комментария, в ответ на который должен быть добавлен новый комментарий. положительное число (положительное число).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MarketCreateCommentParams.StickerId">
            <summary>
            Идентификатор стикера. положительное число (положительное число).
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.MarketCreateCommentParams.ToVkParameters(VkNet.Model.RequestParams.MarketCreateCommentParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.MarketGetCommentsParams">
            <summary>
            Параметры запроса market.getComments
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.MarketGetCommentsParams.#ctor(System.Boolean)">
            <summary>
            Параметры запроса market.getComments
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MarketGetCommentsParams.OwnerId">
            <summary>
            Идентификатор владельца товара. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, обязательный параметр (целое число, обязательный параметр).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MarketGetCommentsParams.ItemId">
            <summary>
            Идентификатор товара. положительное число, обязательный параметр (положительное число, обязательный параметр).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MarketGetCommentsParams.NeedLikes">
            <summary>
            1 — возвращать информацию о лайках. флаг, может принимать значения 1 или 0 (флаг, может принимать значения 1 или 0).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MarketGetCommentsParams.StartCommentId">
            <summary>
            Идентификатор комментария, начиная с которого нужно вернуть список (подробности см. ниже). положительное число (положительное число).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MarketGetCommentsParams.Offset">
            <summary>
            Сдвиг, необходимый для получения конкретной выборки результатов. положительное число, по умолчанию 0 (положительное число, по умолчанию 0).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MarketGetCommentsParams.Count">
            <summary>
            Число комментариев, которые необходимо получить. положительное число, по умолчанию 20, максимальное значение 100 (положительное число, по умолчанию 20, максимальное значение 100).
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:VkNet.Model.RequestParams.MarketGetCommentsParams.Sort">
            <summary>
            Порядок сортировки комментариев (asc — от старых к новым, desc - от новых к старым) строка, по умолчанию asc (строка, по умолчанию asc).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MarketGetCommentsParams.Extended">
            <summary>
            1 — комментарии в ответе будут возвращены в виде пронумерованных объектов, дополнительно будут возвращены списки объектов profiles, groups. флаг, может принимать значения 1 или 0 (флаг, может принимать значения 1 или 0).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MarketGetCommentsParams.Fields">
            <summary>
            Список дополнительных полей профилей, которые необходимо вернуть. См. подробное описание. Доступные значения: sex, bdate, city, country, photo_50, photo_100, photo_200_orig, photo_200, photo_400_orig, photo_max, photo_max_orig, photo_id, online, online_mobile, domain, has_mobile, contacts, connections, site, education, universities, schools, can_post, can_see_all_posts, can_see_audio, can_write_private_message, status, last_seen, common_count, relation, relatives, counters, screen_name, maiden_name, timezone, occupation,activities, interests, music, movies, tv, books, games, about, quotes, personal, friend_status, military, career список строк, разделенных через запятую (список строк, разделенных через запятую).
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.MarketGetCommentsParams.ToVkParameters(VkNet.Model.RequestParams.MarketGetCommentsParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.MarketProductParams">
            <summary>
            Параметр для добавления / редактирования товара
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.MarketProductParams.#ctor(System.Boolean)">
            <summary>
            Параметр для добавления / редактирования товара
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MarketProductParams.OwnerId">
            <summary>
            Идентификатор владельца товара. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, обязательный параметр (целое число, обязательный параметр).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MarketProductParams.ItemId">
            <summary>
            Идентификатор товара. 
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MarketProductParams.Name">
            <summary>
            Название товара. строка, минимальная длина 4, максимальная длина 100, обязательный параметр (строка, минимальная длина 4, максимальная длина 100, обязательный параметр).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MarketProductParams.Description">
            <summary>
            Описание товара. строка, минимальная длина 10, обязательный параметр (строка, минимальная длина 10, обязательный параметр).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MarketProductParams.CategoryId">
            <summary>
            Идентификатор категории товара. положительное число, обязательный параметр (положительное число, обязательный параметр).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MarketProductParams.Price">
            <summary>
            Цена товара. дробное число, обязательный параметр, минимальное значение 0.01 (дробное число, обязательный параметр, минимальное значение 0.01).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MarketProductParams.Deleted">
            <summary>
            Статус товара (1 — товар удален, 0 — товар не удален). флаг, может принимать значения 1 или 0 (флаг, может принимать значения 1 или 0).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MarketProductParams.MainPhotoId">
            <summary>
            Идентификатор фотографии обложки товара. положительное число, обязательный параметр (положительное число, обязательный параметр).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MarketProductParams.PhotoIds">
            <summary>
            Идентификаторы дополнительных фотографий товара. список положительных чисел, разделенных запятыми, количество элементов должно составлять не более 4 (список положительных чисел, разделенных запятыми, количество элементов должно составлять не более 4).
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.MarketProductParams.ToVkParameters(VkNet.Model.RequestParams.MarketProductParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.MarketSearchParams">
            <summary>
            Параметры запроса market.search
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.MarketSearchParams.#ctor(System.Boolean)">
            <summary>
            Параметры запроса market.search
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MarketSearchParams.OwnerId">
            <summary>
            Идентификатор сообщества, которому принадлежат товары. 
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MarketSearchParams.AlbumId">
            <summary>
            Идентификатор подборки, товары из которой нужно вернуть. 
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MarketSearchParams.Query">
            <summary>
            Строка поискового запроса.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MarketSearchParams.PriceFrom">
            <summary>
            Минимальное значение цены товаров.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MarketSearchParams.PriceTo">
            <summary>
            Максимальное значение цены товаров.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MarketSearchParams.Tags">
            <summary>
            Перечисленные через запятую идентификаторы меток.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MarketSearchParams.Sort">
            <summary>
            Вид сортировки.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MarketSearchParams.Rev">
            <summary>
            0 — не использовать обратный порядок, 1 — использовать обратный порядок. 
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MarketSearchParams.Offset">
            <summary>
            Смещение относительно первого найденного товара для выборки определенного подмножества.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MarketSearchParams.Count">
            <summary>
            Количество возвращаемых товаров. 
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MarketSearchParams.Extended">
            <summary>
            1 — будут возвращены дополнительные поля likes, can_comment, can_repost, ''photos'''.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.MarketSearchParams.ToVkParameters(VkNet.Model.RequestParams.MarketSearchParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.MessagesDialogsGetParams">
            <summary>
            Список параметров для метода Messages.GetDialogs
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesDialogsGetParams.Count">
            <summary>
            Количество диалогов, которое необходимо получить (не более 200)
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesDialogsGetParams.Offset">
            <summary>
            Смещение, необходимое для выборки определенного подмножества диалогов.
            Если указан <see cref="P:VkNet.Model.RequestParams.MessagesDialogsGetParams.StartMessageId"/> то может быть отрицательным
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesDialogsGetParams.Unread">
            <summary>
            Значение <c>true</c> означает, что нужно вернуть только диалоги в которых есть непрочитанные входящие сообщения. По умолчанию false.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesDialogsGetParams.PreviewLength">
            <summary>
            Количество символов, по которому нужно обрезать сообщение.
            Укажите 0, если Вы не хотите обрезать сообщение. (по умолчанию сообщения не обрезаются).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesDialogsGetParams.StartMessageId">
             <summary>
             Идентификатор сообщения, начиная с которого нужно вернуть список диалогов (подробности см. ниже).
            
             Если был передан параметр <c>start_message_id</c>, будет найдена позиция диалога в списке,
             идентификатор последнего сообщения которого равен <c>start_message_id</c> (или ближайший к нему более ранний).
             Начиная с этой позиции будет возвращено <c>count</c> диалогов.
             Смещение <c>offset</c> в этом случае будет отсчитываться от этой позиции (оно может быть отрицательным).
             </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.MessagesDialogsGetParams.ToVkParameters(VkNet.Model.RequestParams.MessagesDialogsGetParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.MessagesGetLongPollHistoryParams">
            <summary>
            Параметры метода messages.getLongPollHistoryParams
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesGetLongPollHistoryParams.Ts">
            <summary>
            Последнее значение параметра ts, полученное от Long Poll сервера или с помощью метода messages.getLongPollServer
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesGetLongPollHistoryParams.Pts">
            <summary>
            Последнее значение параметра new_pts, полученное от Long Poll сервера, используется для получения действий, которые хранятся всегда.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesGetLongPollHistoryParams.PreviewLength">
            <summary>
            Количество символов, по которому нужно обрезать сообщение. Укажите 0, если Вы не хотите обрезать сообщение. (по умолчанию сообщения не обрезаются).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesGetLongPollHistoryParams.Onlines">
            <summary>
            При передаче в этот параметра значения 1 будет возвращена история только от тех пользователей, которые сейчас online. флаг, может принимать значения 1 или 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesGetLongPollHistoryParams.Fields">
            <summary>
            Список дополнительных полей профилей, которые необходимо вернуть.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesGetLongPollHistoryParams.EventsLimit">
            <summary>
            Если количество событий в истории превысит это значение, будет возвращена ошибка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesGetLongPollHistoryParams.MsgsLimit">
            <summary>
            Количество сообщений, которое нужно вернуть.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesGetLongPollHistoryParams.MaxMsgId">
            <summary>
            Максимальный идентификатор сообщения среди уже имеющихся в локальной копии. Необходимо учитывать как сообщения, полученные через методы API (например messages.getDialogs, messages.getHistory), так и данные, полученные из Long Poll сервера (события с кодом 4).
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.MessagesGetLongPollHistoryParams.ToVkParameters(VkNet.Model.RequestParams.MessagesGetLongPollHistoryParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.MessagesGetHistoryParams">
            <summary>
            Список параметров для метода Message.GetHistory
            <seealso cref="!:http://vk.com/dev/messages.getHistory"/>
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesGetHistoryParams.UserId">
            <summary>
            Идентификатор пользователя, историю переписки с которым необходимо вернуть.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesGetHistoryParams.PeerId">
            <summary>
            Идентификатор назначения.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesGetHistoryParams.Count">
            <summary>
            Количество сообщений, которое необходимо получить (но не более 200)
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesGetHistoryParams.Offset">
            <summary>
            Смещение, необходимое для выборки определенного подмножества сообщений,
            должен быть 0 или положительным, если не передан параметр start_message_id, и должен быть 0 или отрицательным, если передан.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesGetHistoryParams.StartMessageId">
            <summary>
            Если значение > 0, то это идентификатор сообщения, начиная с которого нужно вернуть историю переписки,
            если же передано значение -1, то к значению параметра offset прибавляется количество входящих непрочитанных сообщений в конце диалога
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesGetHistoryParams.Reversed">
            <summary>
            Возвращать сообщения в хронологическом порядке или обратном (по умолчанию в обратном). Недоступен при переданном start_message_id.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.MessagesGetHistoryParams.ToVkParameters(VkNet.Model.RequestParams.MessagesGetHistoryParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.MessagesSendParams">
            <summary>
            Параметры метода messages.send
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesSendParams.UserId">
            <summary>
            Идентификатор пользователя, которому отправляется сообщение.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesSendParams.Domain">
            <summary>
            Короткий адрес пользователя (например, illarionov).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesSendParams.ChatId">
            <summary>
            Идентификатор беседы, к которой будет относиться сообщение.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesSendParams.UserIds">
            <summary>
            Идентификаторы получателей сообщения (при необходимости отправить сообщение сразу нескольким пользователям).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesSendParams.Message">
            <summary>
            Текст личного cообщения (является обязательным, если не задан параметр attachment)
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesSendParams.Guid">
            <summary>
            Уникальный идентификатор, предназначенный для предотвращения повторной отправки одинакового сообщения.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesSendParams.Lat">
            <summary>
            Latitude - широта при добавлении местоположения.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesSendParams.Longitude">
            <summary>
            Longitude - долгота при добавлении местоположения.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesSendParams.Attachments">
            <summary>
            Медиавложения к личному сообщению, перечисленные через запятую.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesSendParams.ForwardMessages">
            <summary>
            Идентификаторы пересылаемых сообщений, перечисленные через запятую. Перечисленные сообщения отправителя будут отображаться в теле письма у получателя.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesSendParams.StickerId">
            <summary>
            Идентификатор стикера.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesSendParams.CaptchaSid">
            <summary>
            Идентификатор капчи
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesSendParams.CaptchaKey">
            <summary>
            текст, который ввел пользователь
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesSendParams.PeerId">
            <summary>
            Идентификатор назначения. Для групповой беседы: 2000000000 + id беседы. Для сообщества: -id сообщества. 
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.MessagesSendParams.ToVkParameters(VkNet.Model.RequestParams.MessagesSendParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.AppGetCatalogParams">
            <summary>
            Параметры запроса для приложений
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.AppGetCatalogParams.#ctor(System.Boolean)">
            <summary>
            Параметры запроса для приложений.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AppGetCatalogParams.Sort">
            <summary>
            Способ сортировки приложений
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AppGetCatalogParams.Offset">
            <summary>
            Смещение, необходимое для выборки определенного подмножества приложений.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AppGetCatalogParams.Count">
            <summary>
            Количество приложений, информацию о которых необходимо вернуть.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AppGetCatalogParams.Platform">
            <summary>
            Платформа для которой необходимо вернуть приложения, принимает значения: ios, android, winphone, web. По умолчанию используется web.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AppGetCatalogParams.Extended">
            <summary>
            Позволяет получить дополнительные поля: screenshots, MAU (количество уникальных посетителей в месяц),
            catalog_position, international (отображается ли приложение в каталоге у иностранных пользователей).
            По умолчанию возвращает только основные поля приложений. Если указан extended – count не должен быть больше 100.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AppGetCatalogParams.ReturnFriends">
            <summary>
            <c>true</c> – возвращает список друзей, установивших это приложение.
            (Данный параметр работает только, если пользователь передал валидный access_token)
            <c>false</c> – не возвращать список друзей, по умолчанию.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AppGetCatalogParams.Fields">
            <summary>
            Список дополнительных полей, которые необходимо вернуть для профилей пользователей.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AppGetCatalogParams.NameCase">
            <summary>
            Падеж для склонения имени и фамилии пользователей.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AppGetCatalogParams.Query">
            <summary>
            Поисковая строка для поиска по каталогу приложений.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AppGetCatalogParams.GenreId">
            <summary>
            Идентификатор жанра.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AppGetCatalogParams.Filter">
            <summary>
            Фильтр.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.AppGetCatalogParams.ToVkParameters(VkNet.Model.RequestParams.AppGetCatalogParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.AppGetParams">
            <summary>
            Параметры метода Get для приложений
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AppGetParams.AppIds">
            <summary>
            Список идентификаторов приложений, данные которых необходимо получить.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AppGetParams.Platform">
            <summary>
            Платформа, для которой необходимо вернуть platform_id, принимает значения: ios, android, winphone, web.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AppGetParams.Extended">
            <summary>
            Позволяет получить дополнительные поля: screenshots. По умолчанию возвращает только основные поля приложений.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AppGetParams.ReturnFriends">
            <summary>
            <c>true</c> – возвращает список друзей, установивших приложение. (Данный параметр работает только, если пользователь передал валидный access_token) <c>false</c> – не возвращать список друзей, по умолчанию.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AppGetParams.Fields">
            <summary>
            (Работает при использовании return_friends) список дополнительных полей, которые необходимо вернуть для профилей пользователей.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AppGetParams.NameCase">
            <summary>
            (Работает при использовании return_friends) падеж для склонения имени и фамилии пользователей. Возможные значения: именительный – nom, родительный – gen, дательный – dat, винительный – acc, творительный – ins, предложный – abl. По умолчанию nom.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.AppGetParams.ToVkParameters(VkNet.Model.RequestParams.AppGetParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.AppSendRequestParams">
            <summary>
            Параметры запроса SendRequest для приложений.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AppSendRequestParams.UserId">
            <summary>
            Идентификатор пользователя, которому следует отправить запрос.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AppSendRequestParams.Text">
            <summary>
            Текст запроса.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AppSendRequestParams.Type">
            <summary>
            Тип запроса, может принимать значения:.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AppSendRequestParams.Name">
            <summary>
            Уникальное в рамках приложения имя для каждого вида отправляемого запроса.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AppSendRequestParams.Key">
            <summary>
            Строка, которая будет возвращена назад при переходе пользователя по запросу в приложение. Может использоваться для подсчета конверсии.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.AppSendRequestParams.Separate">
            <summary>
            Запрет на группировку запроса с другими, имеющими тот же name. По умолчанию отключен.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.AppSendRequestParams.ToVkParameters(VkNet.Model.RequestParams.AppSendRequestParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.MessagesGetParams">
            <summary>
            Список параметров для метода Messages.Get
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesGetParams.Count">
            <summary>
            Количество сообщений, которое необходимо получить.
            (по умолчанию 20, максимальное значение 200)
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesGetParams.Offset">
            <summary>
            Смещение, необходимое для выборки определенного подмножества сообщений
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesGetParams.Out">
            <summary>
            Тип сообщений которые необходимо получить.
            Необходимо передать <see cref="F:VkNet.Enums.MessageType.Received"/> для полученных сообщений и <see cref="F:VkNet.Enums.MessageType.Sended"/>
            для отправленных пользователем сообщений.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesGetParams.TimeOffset">
            <summary>
            Максимальное время, прошедшее с момента отправки сообщения до текущего момента в секундах.
            0, если Вы хотите получить сообщения любой давности.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesGetParams.Filters">
            <summary>
            Фильтр возвращаемых сообщений.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesGetParams.PreviewLength">
            <summary>
            Количество символов, по которому нужно обрезать сообщение.
            Укажите 0, если Вы не хотите обрезать сообщение. (по умолчанию сообщения не обрезаются).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.MessagesGetParams.LastMessageId">
            <summary>
            Идентификатор сообщения, полученного перед тем, которое нужно вернуть последним
            (при условии, что после него было получено не более count сообщений, иначе необходимо использовать с параметром offset)
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.MessagesGetParams.ToVkParameters(VkNet.Model.RequestParams.MessagesGetParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.NewsFeedGetCommentsParams">
            <summary>
            Список параметров запроса newsfeed.get
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.NewsFeedGetCommentsParams.Filters">
            <summary>
            Перечисленные через запятую названия списков новостей, которые необходимо получить. В данный момент поддерживаются следующие списки новостей: post — новые записи со стен photo — новые фотографии photo_tag — новые отметки на фотографиях wall_photo — новые фотографии на стенах friend — новые друзья note — новые заметки Если параметр не задан, то будут получены все возможные списки новостей.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.NewsFeedGetCommentsParams.Reposts">
            <summary>
            Идентификатор объекта, комментарии к репостам которого необходимо вернуть, например wall1_45486.
            </summary>
            <remarks>
            Если указан данный параметр, параметр filters указывать необязательно.
            </remarks>
        </member>
        <member name="P:VkNet.Model.RequestParams.NewsFeedGetCommentsParams.StartTime">
            <summary>
            Время в формате unixtime, начиная с которого следует получить новости для текущего пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.NewsFeedGetCommentsParams.EndTime">
            <summary>
            Время в формате unixtime, до которого следует получить новости для текущего пользователя. Если параметр не задан, то он считается равным текущему времени.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.NewsFeedGetCommentsParams.LastCommentsCount">
            <summary>
            Количество комментариев к записям, которые нужно получить.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.NewsFeedGetCommentsParams.StartFrom">
            <summary>
            Идентификатор, необходимый для получения следующей страницы результатов. Значение, необходимое для передачи в этом параметре, возвращается в поле ответа next_from.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.NewsFeedGetCommentsParams.Count">
            <summary>
            Указывает, какое максимальное число новостей следует возвращать, но не более 100. По умолчанию 50.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.NewsFeedGetCommentsParams.Fields">
            <summary>
            Список дополнительных полей профилей, которые необходимо вернуть.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.NewsFeedGetCommentsParams.ToVkParameters(VkNet.Model.RequestParams.NewsFeedGetCommentsParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.NewsFeedSearchParams">
            <summary>
            Список параметров запроса newsfeed.search
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.NewsFeedSearchParams.#ctor(System.Boolean)">
            <summary>
            Список параметров запроса newsfeed.search
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.NewsFeedSearchParams.Query">
            <summary>
            Поисковой запрос.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.NewsFeedSearchParams.Extended">
            <summary>
            Указывается 1, если необходимо получить информацию о пользователе или группе, разместившей запись.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.NewsFeedSearchParams.Count">
            <summary>
            Указывает, какое максимальное число записей следует возвращать.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.NewsFeedSearchParams.Latitude">
            <summary>
            Географическая широта точки, в радиусе от которой необходимо производить поиск, заданная в градусах (от -90 до 90).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.NewsFeedSearchParams.Longitude">
            <summary>
            Географическая долгота точки, в радиусе от которой необходимо производить поиск, заданная в градусах (от -180 до 180).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.NewsFeedSearchParams.StartTime">
            <summary>
            Время в формате unixtime, начиная с которого следует получить новости для текущего пользователя. Если параметр не задан, то он считается равным значению времени, которое было сутки назад.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.NewsFeedSearchParams.EndTime">
            <summary>
            Время в формате unixtime, до которого следует получить новости для текущего пользователя. Если параметр не задан, то он считается равным текущему времени.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.NewsFeedSearchParams.StartFrom">
            <summary>
            Идентификатор, необходимый для получения следующей страницы результатов. Значение, необходимое для передачи в этом параметре, возвращается в поле ответа next_from.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.NewsFeedSearchParams.Fields">
            <summary>
            Список дополнительных полей профилей, которые необходимо вернуть. Игнорируется при отсутствии параметра extended=1.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.NewsFeedSearchParams.ToVkParameters(VkNet.Model.RequestParams.NewsFeedSearchParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.NewsFeedGetRecommendedParams">
            <summary>
            Список параметров запроса newsfeed.get
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.NewsFeedGetRecommendedParams.StartTime">
            <summary>
            Время в формате unixtime, начиная с которого следует получить новости для текущего пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.NewsFeedGetRecommendedParams.EndTime">
            <summary>
            Время в формате unixtime, до которого следует получить новости для текущего пользователя. Если параметр не задан, то он считается равным текущему времени.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.NewsFeedGetRecommendedParams.MaxPhotos">
            <summary>
            Максимальное количество фотографий, информацию о которых необходимо вернуть. По умолчанию 5.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.NewsFeedGetRecommendedParams.StartFrom">
            <summary>
            Идентификатор, необходимый для получения следующей страницы результатов. Значение, необходимое для передачи в этом параметре, возвращается в поле ответа next_from.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.NewsFeedGetRecommendedParams.Count">
            <summary>
            Указывает, какое максимальное число новостей следует возвращать, но не более 100. По умолчанию 50.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.NewsFeedGetRecommendedParams.Fields">
            <summary>
            Список дополнительных полей профилей, которые необходимо вернуть.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.NewsFeedGetRecommendedParams.ToVkParameters(VkNet.Model.RequestParams.NewsFeedGetRecommendedParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.NewsFeedGetParams">
            <summary>
            Список параметров запроса newsfeed.get
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.NewsFeedGetParams.Filters">
            <summary>
            Перечисленные через запятую названия списков новостей, которые необходимо получить. В данный момент поддерживаются следующие списки новостей: post — новые записи со стен photo — новые фотографии photo_tag — новые отметки на фотографиях wall_photo — новые фотографии на стенах friend — новые друзья note — новые заметки Если параметр не задан, то будут получены все возможные списки новостей.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.NewsFeedGetParams.ReturnBanned">
            <summary>
            <c>true</c> - включить в выдачу также скрытых из новостей пользователей. <c>false</c> - не возвращать скрытых пользователей.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.NewsFeedGetParams.StartTime">
            <summary>
            Время в формате unixtime, начиная с которого следует получить новости для текущего пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.NewsFeedGetParams.EndTime">
            <summary>
            Время в формате unixtime, до которого следует получить новости для текущего пользователя. Если параметр не задан, то он считается равным текущему времени.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.NewsFeedGetParams.MaxPhotos">
            <summary>
            Максимальное количество фотографий, информацию о которых необходимо вернуть. По умолчанию 5.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:VkNet.Model.RequestParams.NewsFeedGetParams.SourceIds" -->
        <member name="P:VkNet.Model.RequestParams.NewsFeedGetParams.StartFrom">
            <summary>
            Идентификатор, необходимый для получения следующей страницы результатов. Значение, необходимое для передачи в этом параметре, возвращается в поле ответа next_from.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.NewsFeedGetParams.Count">
            <summary>
            Указывает, какое максимальное число новостей следует возвращать, но не более 100. По умолчанию 50.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.NewsFeedGetParams.Fields">
            <summary>
            Список дополнительных полей профилей, которые необходимо вернуть.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.NewsFeedGetParams.ToVkParameters(VkNet.Model.RequestParams.NewsFeedGetParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.PhotoCreateAlbumParams">
            <summary>
            Список параметров для метода photos.createAlbum
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.PhotoCreateAlbumParams.#ctor(System.Boolean)">
            <summary>
            Список параметров для метода photos.createAlbum .
            </summary>
            <param name="gag">Заглушка инициализатора конструктора.</param>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoCreateAlbumParams.Title">
            <summary>
            Название альбома.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoCreateAlbumParams.GroupId">
            <summary>
            Идентификатор сообщества, в котором создаётся альбом.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoCreateAlbumParams.Description">
            <summary>
            Текст описания альбома.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoCreateAlbumParams.View">
            <summary>
            Настройки приватности просмотра альбома в специальном формате.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoCreateAlbumParams.Privacy">
            <summary>
            Настройки приватности комментирования альбома в специальном формате.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoCreateAlbumParams.UploadByAdminsOnly">
            <summary>
            Кто может загружать фотографии в альбом (только для альбома сообщества).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoCreateAlbumParams.CommentsDisabled">
            <summary>
            Отключено ли комментирование альбома (только для альбома сообщества).
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.PhotoCreateAlbumParams.ToVkParameters(VkNet.Model.RequestParams.PhotoCreateAlbumParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.PhotoEditAlbumParams">
            <summary>
            Список параметров для метода photos.editAlbum
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.PhotoEditAlbumParams.#ctor(System.Boolean)">
            <summary>
            Список параметров для метода photos.editAlbum
            </summary>
            <param name="gag">Заглушка инициализатора конструктора.</param>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoEditAlbumParams.AlbumId">
            <summary>
            Идентификатор альбома.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoEditAlbumParams.Title">
            <summary>
            Новое название альбома.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoEditAlbumParams.Description">
            <summary>
            Новый текст описания альбома.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoEditAlbumParams.OwnerId">
            <summary>
            Идентификатор владельца альбома (пользователь или сообщество).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoEditAlbumParams.View">
            <summary>
            Настройки приватности просмотра альбома в специальном формате.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoEditAlbumParams.Privacy">
            <summary>
            Настройки приватности комментирования альбома в специальном формате.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoEditAlbumParams.UploadByAdminsOnly">
            <summary>
            Кто может загружать фотографии в альбом (только для альбома сообщества).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoEditAlbumParams.CommentsDisabled">
            <summary>
            Отключено ли комментирование альбома (только для альбома сообщества).
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.PhotoEditAlbumParams.ToVkParameters(VkNet.Model.RequestParams.PhotoEditAlbumParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.PhotoGetAlbumsParams">
            <summary>
            Список параметров для метода photos.getAlbums
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetAlbumsParams.OwnerId">
            <summary>
            Идентификатор пользователя или сообщества, которому принадлежат альбомы. Обратите внимание, идентификатор сообщества в параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetAlbumsParams.AlbumIds">
            <summary>
            Перечисленные через запятую ID альбомов.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetAlbumsParams.Offset">
            <summary>
            Cмещение, необходимое для выборки определенного подмножества альбомов.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetAlbumsParams.Count">
            <summary>
            Количество альбомов, которое нужно вернуть.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetAlbumsParams.NeedSystem">
            <summary>
            <c>true</c> – будут возвращены системные альбомы, имеющие отрицательные идентификаторы.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetAlbumsParams.NeedCovers">
            <summary>
            <c>true</c> — будет возвращено дополнительное поле thumb_src. По умолчанию поле thumb_src не возвращается.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetAlbumsParams.PhotoSizes">
            <summary>
            <c>true</c> — будут возвращены размеры фотографий в специальном формате.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.PhotoGetAlbumsParams.ToVkParameters(VkNet.Model.RequestParams.PhotoGetAlbumsParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.PhotoCreateCommentParams">
            <summary>
            Список параметров для метода photos.createComment
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoCreateCommentParams.OwnerId">
            <summary>
            Идентификатор пользователя или сообщества, которому принадлежит фотография.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoCreateCommentParams.PhotoId">
            <summary>
            Идентификатор фотографии.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoCreateCommentParams.Message">
            <summary>
            Текст комментария (является обязательным, если не задан параметр <c>Attachments</c>). Максимальное количество символов: 2048.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoCreateCommentParams.Attachments">
            <summary>
            Список объектов, приложенных к комментарию и разделённых символом ",". Параметр является обязательным, если не задан параметр message.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoCreateCommentParams.FromGroup">
            <summary>
            Данный параметр учитывается, если oid меньше 0 (комментарий к фотографии группы). <c>true</c> — комментарий будет опубликован от имени группы, <c>false</c> — комментарий будет опубликован от имени пользователя (по умолчанию). флаг, может принимать значения 1 или 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoCreateCommentParams.ReplyToComment">
            <summary>
            Идентификатор комментария, в ответ на который нужно оставить текущий.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoCreateCommentParams.StickerId">
            <summary>
            Идентификатор стикера, который нужно прикрепить к комментарию.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoCreateCommentParams.AccessKey">
            <summary>
            Ключ доступа.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoCreateCommentParams.Guid">
            <summary>
            Положительное число.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.PhotoCreateCommentParams.ToVkParameters(VkNet.Model.RequestParams.PhotoCreateCommentParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.PhotoEditParams">
            <summary>
            Список параметров для метода photos.edit
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoEditParams.OwnerId">
            <summary>
            Идентификатор пользователя или сообщества, которому принадлежит фотография.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoEditParams.PhotoId">
            <summary>
            Идентификатор фотографии.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoEditParams.Caption">
            <summary>
            Новый текст описания к фотографии. Если параметр не задан, то считается, что он равен пустой строке.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoEditParams.Latitude">
            <summary>
            Широта.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoEditParams.Longitude">
            <summary>
            Долгота.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoEditParams.PlaceStr">
            <summary>
            Место.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoEditParams.FoursquareId">
            <summary>
            Идентификатор квадрата.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoEditParams.DeletePlace">
            <summary>
            Место удалено.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoEditParams.CaptchaSid">
            <summary>
            Идентификатор капчи
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoEditParams.CaptchaKey">
            <summary>
            текст, который ввел пользователь
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.PhotoEditParams.ToVkParameters(VkNet.Model.RequestParams.PhotoEditParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.PhotoGetAllCommentsParams">
            <summary>
            Список параметров для метода photos.getAllComments
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetAllCommentsParams.OwnerId">
            <summary>
            Идентификатор пользователя или сообщества, которому принадлежат фотографии.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetAllCommentsParams.AlbumId">
            <summary>
            Идентификатор альбома. Если параметр не задан, то считается, что необходимо получить комментарии ко всем альбомам пользователя или сообщества.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetAllCommentsParams.NeedLikes">
            <summary>
            <c>true</c> — будет возвращено дополнительное поле likes. По умолчанию поле likes не возвращается.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetAllCommentsParams.Offset">
            <summary>
            Смещение, необходимое для выборки определенного подмножества комментариев. Если параметр не задан, то считается, что он равен 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetAllCommentsParams.Count">
            <summary>
            Количество комментариев, которое необходимо получить. Если параметр не задан, то считается что он равен 20. Максимальное значение параметра 100. Обратите внимание, даже при использовании параметра offset для получения доступны только первые 10000 комментариев.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.PhotoGetAllCommentsParams.ToVkParameters(VkNet.Model.RequestParams.PhotoGetAllCommentsParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.PhotoGetAllParams">
            <summary>
            Список параметров для метода photos.getAll
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetAllParams.OwnerId">
            <summary>
            Идентификатор пользователя или сообщества, фотографии которого нужно получить.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetAllParams.Extended">
            <summary>
            <c>true</c> — возвращать расширенную информацию о фотографиях.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetAllParams.Offset">
            <summary>
            Смещение, необходимое для выборки определенного подмножества фотографий. По умолчанию — <c>false</c>.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetAllParams.Count">
            <summary>
            Число фотографий, информацию о которых необходимо получить.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetAllParams.PhotoSizes">
            <summary>
            <c>true</c> — будут возвращены размеры фотографий в специальном формате.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetAllParams.NoServiceAlbums">
            <summary>
            <c>false</c> — вернуть все фотографии, включая находящиеся в сервисных альбомах, таких как "Фотографии на моей стене" (по умолчанию).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetAllParams.NeedHidden">
            <summary>
            <c>true</c> — возвращает информацию от том, скрыта ли фотография из блока над стеной пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetAllParams.SkipHidden">
            <summary>
            <c>true</c> — не возвращать фотографии, скрытые из блока над стеной пользователя (параметр учитывается только при owner_id > <c>false</c>, параметр no_service_albums игнорируется).
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.PhotoGetAllParams.ToVkParameters(VkNet.Model.RequestParams.PhotoGetAllParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.PhotoGetCommentsParams">
            <summary>
            Список параметров для метода photos.getComments
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetCommentsParams.OwnerId">
            <summary>
            Идентификатор пользователя или сообщества, которому принадлежит фотография.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetCommentsParams.PhotoId">
            <summary>
            Идентификатор фотографии.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetCommentsParams.NeedLikes">
            <summary>
            <c>true</c> — будет возвращено дополнительное поле likes. По умолчанию поле likes не возвращается.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetCommentsParams.StartCommentId">
            <summary>
            Идентификатор комментария, начиная с которого нужно вернуть список (подробности см. ниже).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetCommentsParams.Offset">
            <summary>
            Смещение, необходимое для выборки определенного подмножества комментариев. По умолчанию — 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetCommentsParams.Count">
            <summary>
            Количество комментариев, которое необходимо получить.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetCommentsParams.Sort">
            <summary>
            Порядок сортировки комментариев (asc — от старых к новым, desc - от новых к старым) строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetCommentsParams.AccessKey">
            <summary>
            Ключ доступа к фотографии.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetCommentsParams.Extended">
            <summary>
            <c>true</c> — комментарии в ответе будут возвращены в виде пронумерованных объектов, дополнительно будут возвращены списки объектов profiles, groups.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetCommentsParams.Fields">
            <summary>
             Список строк, разделенных через запятую.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.PhotoGetCommentsParams.ToVkParameters(VkNet.Model.RequestParams.PhotoGetCommentsParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.PhotoGetParams">
            <summary>
            Список параметров для метода photos.get
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetParams.OwnerId">
            <summary>
            Идентификатор владельца альбома.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetParams.AlbumId">
            <summary>
            Идентификатор альбома. Для служебных альбомов используются следующие идентификаторы: строка.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetParams.PhotoIds">
            <summary>
            Идентификаторы фотографий, информацию о которых необходимо вернуть.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetParams.Reversed">
            <summary>
            Порядок сортировки фотографий (<c>true</c> — антихронологический, <c>false</c> — хронологический).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetParams.Extended">
            <summary>
            <c>true</c> — будут возвращены дополнительные поля likes, comments, tags, can_comment. Поля comments и tags содержат только количество объектов. По умолчанию данные поля не возвращается.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetParams.FeedType">
            <summary>
            Тип новости получаемый в поле type метода newsfeed.get, для получения только загруженных пользователем фотографий, либо только фотографий, на которых он был отмечен. Может принимать значения photo, photo_tag.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetParams.Feed">
            <summary>
            Unixtime, который может быть получен методом newsfeed.get в поле date, для получения всех фотографий загруженных пользователем в определённый день либо на которых пользователь был отмечен. Также нужно указать параметр uid пользователя, с которым произошло событие.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetParams.PhotoSizes">
            <summary>
            Параметр, указывающий нужно ли возвращать ли доступные размеры фотографии в специальном формате.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetParams.Offset">
            <summary>
            Отступ, необходимый для получения определенного подмножества записей.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetParams.Count">
            <summary>
            Количество записей, которое будет получено.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.PhotoGetParams.ToVkParameters(VkNet.Model.RequestParams.PhotoGetParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.PhotoGetUserPhotosParams">
            <summary>
            Список параметров для метода photos.getUserPhotos
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetUserPhotosParams.UserId">
            <summary>
            Идентификатор пользователя, список фотографий для которого нужно получить.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetUserPhotosParams.Offset">
            <summary>
            Смещение, необходимое для выборки определенного подмножества фотографий.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetUserPhotosParams.Count">
            <summary>
            Количество фотографий, которое необходимо получить.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetUserPhotosParams.Extended">
            <summary>
            <c>true</c> — будут возвращены дополнительные поля likes, comments, tags, can_comment. Поля comments и tags содержат только количество объектов. По умолчанию данные поля не возвращается.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoGetUserPhotosParams.Sort">
            <summary>
            Сортировка результатов (0 — по дате добавления отметки в порядке убывания, 1 — по дате добавления отметки в порядке возрастания).
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.PhotoGetUserPhotosParams.ToVkParameters(VkNet.Model.RequestParams.PhotoGetUserPhotosParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.PhotoPutTagParams">
            <summary>
            Список параметров для метода photos.putTag
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoPutTagParams.OwnerId">
            <summary>
            Идентификатор пользователя, которому принадлежит фотография.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoPutTagParams.PhotoId">
            <summary>
            Идентификатор фотографии.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoPutTagParams.UserId">
            <summary>
            Идентификатор пользователя, которого нужно отметить на фотографии.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoPutTagParams.X">
            <summary>
            Координата верхнего левого угла области с отметкой в % от ширины фотографии.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoPutTagParams.Y">
            <summary>
            Координата верхнего левого угла области с отметкой в % от высоты фотографии.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoPutTagParams.X2">
            <summary>
            Координата правого нижнего угла области с отметкой в % от ширины фотографии.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoPutTagParams.Y2">
            <summary>
            Координата правого нижнего угла области с отметкой в % от высоты фотографии.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.PhotoPutTagParams.ToVkParameters(VkNet.Model.RequestParams.PhotoPutTagParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.PhotoSaveParams">
            <summary>
            Список параметров для метода photos.save
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoSaveParams.AlbumId">
            <summary>
            Идентификатор альбома, в который необходимо сохранить фотографии.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoSaveParams.GroupId">
            <summary>
            Идентификатор сообщества, в которое необходимо сохранить фотографии.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoSaveParams.SaveFileResponse">
            <summary>
            Параметр, возвращаемый в результате загрузки фотографий на сервер.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoSaveParams.Latitude">
            <summary>
            Географическая широта, заданная в градусах (от -90 до 90);
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoSaveParams.Longitude">
            <summary>
            Географическая долгота, заданная в градусах (от -180 до 180);
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoSaveParams.Caption">
            <summary>
            Текст описания фотографии.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.PhotoSaveParams.ToVkParameters(VkNet.Model.RequestParams.PhotoSaveParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.PhotoSearchParams">
            <summary>
            Список параметров для метода photos.search
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoSearchParams.Query">
            <summary>
            Строка поискового запроса, например, "Nature".
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoSearchParams.Latitude">
            <summary>
            Географическая широта отметки, заданная в градусах (от -90 до 90).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoSearchParams.Longitude">
            <summary>
            Географическая долгота отметки, заданная в градусах (от -180 до 180).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoSearchParams.StartTime">
            <summary>
            Время в формате unixtime, не раньше которого должны были быть загружены найденные фотографии.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoSearchParams.EndTime">
            <summary>
            Время в формате unixtime, не позже которого должны были быть загружены найденные фотографии.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoSearchParams.Sort">
            <summary>
            <c>true</c> – сортировать по количеству отметок «Мне нравится», <c>false</c> – сортировать по дате добавления фотографии.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoSearchParams.Offset">
            <summary>
            Смещение относительно первой найденной фотографии для выборки определенного подмножества.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoSearchParams.Count">
            <summary>
            Количество возвращаемых фотографий. Положительное число, по умолчанию 100, максимальное значение 1000.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.PhotoSearchParams.Radius">
            <summary>
            Радиус поиска в метрах. (Работает очень приближенно, поэтому реальное расстояние до цели может отличаться от заданного). Может принимать значения: 10, 100, 800, 6000, 50000 положительное число, по умолчанию 5000.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.PhotoSearchParams.ToVkParameters(VkNet.Model.RequestParams.PhotoSearchParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.WallGetParams">
            <summary>
            Список параметров для метода Wall.Get
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallGetParams.OwnerId">
            <summary>
            Идентификатор пользователя или сообщества, со стены которого необходимо получить записи (по умолчанию — текущий пользователь).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallGetParams.Domain">
            <summary>
            Короткий адрес пользователя или сообщества.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallGetParams.Offset">
            <summary>
            Смещение, необходимое для выборки определенного подмножества записей.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallGetParams.Count">
            <summary>
            Количество записей, которое необходимо получить (но не более 100).
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallGetParams.Filter">
            <summary>
            Определяет, какие типы записей на стене необходимо получить. Возможны следующие значения параметра: Если параметр не задан, то считается, что он равен all.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallGetParams.Extended">
            <summary>
            <c>true</c> — будут возвращены три массива wall, profiles и groups. По умолчанию дополнительные поля не возвращаются.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.WallGetParams.Fields">
            <summary>
            Список дополнительных полей для профилей и групп, которые необходимо вернуть. См. описание полей объекта user и описание полей объекта group. Обратите внимание, этот параметр учитывается только при extended=1.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.WallGetParams.ToVkParameters(VkNet.Model.RequestParams.WallGetParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RequestParams.UserSearchParams">
            <summary>
            Параметры метода users.search
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.UserSearchParams.#ctor(System.Boolean)">
            <summary>
            Параметры метода users.search.
            </summary>
            <param name="gag">Заглушка для конструктора.</param>
        </member>
        <member name="P:VkNet.Model.RequestParams.UserSearchParams.Query">
            <summary>
            Строка поискового запроса. Например, Вася Бабич.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.UserSearchParams.Sort">
            <summary>
            Сортировка результатов.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.UserSearchParams.Offset">
            <summary>
            Смещение относительно первого найденного пользователя для выборки определенного подмножества.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.UserSearchParams.Count">
            <summary>
            Количество возвращаемых пользователей. Обратите внимание — даже при использовании параметра offset для получения информации доступны только первые 1000 результатов.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.UserSearchParams.Fields">
            <summary>
            Список дополнительных полей, которые необходимо вернуть.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.UserSearchParams.City">
            <summary>
            Идентификатор города.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.UserSearchParams.Country">
            <summary>
            Идентификатор страны.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.UserSearchParams.Hometown">
            <summary>
            Название города строкой.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.UserSearchParams.UniversityCountry">
            <summary>
            Идентификатор страны, в которой пользователи закончили ВУЗ.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.UserSearchParams.University">
            <summary>
            Идентификатор ВУЗа.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.UserSearchParams.UniversityYear">
            <summary>
            Год окончания ВУЗа.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.UserSearchParams.UniversityFaculty">
            <summary>
            Идентификатор факультета.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.UserSearchParams.UniversityChair">
            <summary>
            Идентификатор кафедры.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.UserSearchParams.Sex">
            <summary>
            Пол.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.UserSearchParams.Status">
            <summary>
            Семейное положение.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.UserSearchParams.AgeFrom">
            <summary>
            Начиная с какого возраста.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.UserSearchParams.AgeTo">
            <summary>
            До какого возраста.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.UserSearchParams.BirthDay">
            <summary>
            День рождения.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.UserSearchParams.BirthMonth">
            <summary>
            Месяц рождения.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.UserSearchParams.BirthYear">
            <summary>
            Год рождения.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.UserSearchParams.Online">
            <summary>
            <c>true</c> — только в сети, <c>false</c> — все пользователи. флаг.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.UserSearchParams.HasPhoto">
            <summary>
            <c>true</c> — только с фотографией, <c>false</c> — все пользователи. флаг.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.UserSearchParams.SchoolCountry">
            <summary>
            Идентификатор страны, в которой пользователи закончили школу.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.UserSearchParams.SchoolCity">
            <summary>
            Идентификатор города, в котором пользователи закончили школу.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.UserSearchParams.SchoolClass">
            <summary>
            Класс в школе.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.UserSearchParams.School">
            <summary>
            Идентификатор школы, которую закончили пользователи.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.UserSearchParams.SchoolYear">
            <summary>
            Год окончания школы.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.UserSearchParams.Religion">
            <summary>
            Религиозные взгляды.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.UserSearchParams.Interests">
            <summary>
            Интересы.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.UserSearchParams.Company">
            <summary>
            Название компании, в которой работают пользователи.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.UserSearchParams.Position">
            <summary>
            Название должности.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.UserSearchParams.GroupId">
            <summary>
            Идентификатор группы, среди пользователей которой необходимо проводить поиск.
            </summary>
        </member>
        <member name="P:VkNet.Model.RequestParams.UserSearchParams.FromList">
            <summary>
            Разделы среди которых нужно осуществить поиск.
            </summary>
        </member>
        <member name="M:VkNet.Model.RequestParams.UserSearchParams.ToVkParameters(VkNet.Model.RequestParams.UserSearchParams)">
            <summary>
            Привести к типу VkParameters.
            </summary>
            <param name="p">Параметры.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.SchoolClass">
            <summary>
            Êëàññ â øêîëå
            </summary>
        </member>
        <member name="P:VkNet.Model.SchoolClass.Class">
            <summary>
            ×èñëî ïîëüçîâàòåëåé, êîòîðûì ïîíðàâèëàñü çàïèñü.
            </summary>
        </member>
        <member name="P:VkNet.Model.SchoolClass.Text">
            <summary>
            Ïðèçíàê ïîíðàâèëàñü ëè çàïèñü òåêóùåìó ïîëüçîâàòåëþ.
            </summary>
        </member>
        <member name="M:VkNet.Model.SchoolClass.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Ðàçîáðàòü èç json.
            </summary>
            <param name="response">Îòâåò ñåðâåðà.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.MarketComment">
            <summary>
            Êîììåíòàðèé ê òîâàðó
            </summary>
        </member>
        <member name="P:VkNet.Model.MarketComment.Comments">
            <summary>
            Ñïèñîê êîììåíòàðèåâ.
            </summary>
        </member>
        <member name="P:VkNet.Model.MarketComment.Count">
            <summary>
            Êîëè÷åñòâî êîììåíòàðèåâ.
            </summary>
        </member>
        <member name="P:VkNet.Model.MarketComment.Profiles">
            <summary>
            Ñïèñîê ïîëüçîâàòåëåé.
            </summary>
        </member>
        <member name="P:VkNet.Model.MarketComment.Groups">
            <summary>
            Ñïèñîê ñîîáùåñòâ.
            </summary>
        </member>
        <member name="M:VkNet.Model.MarketComment.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Ðàçîáðàòü èç json.
            </summary>
            <param name="response">Îòâåò ñåðâåðà.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.MarketAlbum">
            <summary>
            Êàòàëîã òîâàðîâ
            </summary>
        </member>
        <member name="P:VkNet.Model.MarketAlbum.Title">
            <summary>
            Íàçâàíèå ïîäáîðêè. ñòðîêà
            </summary>
        </member>
        <member name="P:VkNet.Model.MarketAlbum.Photo">
            <summary>
            Îáëîæêà ïîäáîðêè, îáúåêò photo.
            </summary>
        </member>
        <member name="P:VkNet.Model.MarketAlbum.Count">
            <summary>
            ×èñëî òîâàðîâ â ïîäáîðêå; int (÷èñëîâîå çíà÷åíèå)
            </summary>
        </member>
        <member name="P:VkNet.Model.MarketAlbum.UpdatedTime">
            <summary>
            Äàòà îáíîâëåíèÿ ïîäáîðêè â ôîðìàòå unixtime. ïîëîæèòåëüíîå ÷èñëî
            </summary>
        </member>
        <member name="M:VkNet.Model.MarketAlbum.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Ðàçîáðàòü èç json.
            </summary>
            <param name="response">Îòâåò ñåðâåðà.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.AccountInfo">
            <summary>
            Хранит информацию о текущем аккаунте. Подробнее: <see href="https://vk.com/dev/account.getInfo"/>
            </summary>
        </member>
        <member name="P:VkNet.Model.AccountInfo.Country">
            <summary>
            Строковой код страны, определенный по IP адресу, с которого сделан запрос.
            </summary>
        </member>
        <member name="P:VkNet.Model.AccountInfo.HttpsRequired">
            <summary>
            Пользователь установил в настройках аккаунта "Всегда использовать безопасное соединение"
            </summary>
        </member>
        <member name="P:VkNet.Model.AccountInfo.Intro">
            <summary>
            Битовая маска, отвечающая за прохождение обучения использованию приложения.
            </summary>
        </member>
        <member name="P:VkNet.Model.AccountInfo.Language">
            <summary>
            Числовой идентификатор текущего языка пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.AccountInfo.OwnPostsDefault">
            <summary>
            1 - на стене пользователя по-умолчанию должны отображаться только собственные записи.
            Соответствует настройке на сайте "Показывать только мои записи", 0 - на стене пользователя должны отображаться все записи.
            </summary>
        </member>
        <member name="P:VkNet.Model.AccountInfo.NoWallReplies">
            <summary>
             1 - пользователь отключил комментирование записей на стене, 0 - комментирование записей разрешено.
            </summary>
        </member>
        <member name="M:VkNet.Model.AccountInfo.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.AccountPushSettings">
             <summary>
            
             </summary>
        </member>
        <member name="P:VkNet.Model.AccountPushSettings.Disabled">
            <summary>
            Отключены ли уведомления.
            </summary>
        </member>
        <member name="P:VkNet.Model.AccountPushSettings.DisabledUntil">
            <summary>
            Unixtime-значение времени, до которого временно отключены уведомления.
            </summary>
        </member>
        <member name="P:VkNet.Model.AccountPushSettings.Conversations">
            <summary>
            Список, содержащий настройки конкретных диалогов, и их количество первым элементом.
            </summary>
        </member>
        <member name="P:VkNet.Model.AccountPushSettings.Settings">
            <summary>
            Объект с настройками Push-уведомлений в специальном формате.
            </summary>
        </member>
        <member name="M:VkNet.Model.AccountPushSettings.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.App">
            <summary>
            Приложение.
            </summary>
        </member>
        <member name="P:VkNet.Model.App.Id">
            <summary>
            Идентификатор приложения.
            </summary>
        </member>
        <member name="P:VkNet.Model.App.Title">
            <summary>
            Название приложения.
            </summary>
        </member>
        <member name="P:VkNet.Model.App.ScreenName">
            <summary>
            Поддомен приложения (или строка idXXXXXXX, если поддомен не задан).
            </summary>
        </member>
        <member name="P:VkNet.Model.App.Description">
            <summary>
            Описание.
            </summary>
        </member>
        <member name="P:VkNet.Model.App.Icon100">
            <summary>
            Url-адрес обложки приложения шириной 100px.
            </summary>
        </member>
        <member name="P:VkNet.Model.App.Icon200">
            <summary>
            Url-адрес обложки приложения шириной 200px.
            </summary>
        </member>
        <member name="P:VkNet.Model.App.Icon75">
            <summary>
            Url-адрес обложки приложения шириной 75px.
            </summary>
        </member>
        <member name="P:VkNet.Model.App.Icon50">
            <summary>
            Url-адрес обложки приложения шириной 50px.
            </summary>
        </member>
        <member name="P:VkNet.Model.App.Icon16">
            <summary>
            Url-адрес обложки приложения шириной 16px.
            </summary>
        </member>
        <member name="P:VkNet.Model.App.Banner186">
            <summary>
            Url-адрес баннера шириной 186px.
            </summary>
        </member>
        <member name="P:VkNet.Model.App.Banner896">
            <summary>
            Url-адрес баннера шириной 896px.
            </summary>
        </member>
        <member name="P:VkNet.Model.App.Type">
            <summary>
            Тип приложения:.
            </summary>
        </member>
        <member name="P:VkNet.Model.App.Section">
            <summary>
            Категория приложения.
            </summary>
        </member>
        <member name="P:VkNet.Model.App.AuthorUrl">
            <summary>
            Адрес страницы автора приложения.
            </summary>
        </member>
        <member name="P:VkNet.Model.App.AuthorId">
            <summary>
            Идентификатор автора приложения.
            </summary>
        </member>
        <member name="P:VkNet.Model.App.AuthorGroup">
            <summary>
            Идентификатор официальной группы приложения.
            </summary>
        </member>
        <member name="P:VkNet.Model.App.MembersCount">
            <summary>
            Количество участников приложения.
            </summary>
        </member>
        <member name="P:VkNet.Model.App.PublishedDate">
            <summary>
            Дата размещения.
            </summary>
        </member>
        <member name="P:VkNet.Model.App.CatalogPosition">
            <summary>
            Позиция в каталоге.
            </summary>
        </member>
        <member name="P:VkNet.Model.App.ScreenShots">
            <summary>
            Url-адреса изображений-скриншотов из приложения.
            </summary>
        </member>
        <member name="P:VkNet.Model.App.International">
            <summary>
            Является ли приложение мультиязычным (<c>true</c>).
            </summary>
        </member>
        <member name="P:VkNet.Model.App.LeaderBoardType">
            <summary>
            Тип турнирной таблицы (0 - не поддерживается, 1 - по уровню, 2 - по очкам).
            </summary>
        </member>
        <member name="P:VkNet.Model.App.GenreId">
            <summary>
            Идентификатор жанра.
            </summary>
        </member>
        <member name="P:VkNet.Model.App.Genre">
            <summary>
            Название жанра.
            </summary>
        </member>
        <member name="P:VkNet.Model.App.PlatformId">
            <summary>
            Идентификатор приложения в магазине приложений.
            </summary>
        </member>
        <member name="M:VkNet.Model.App.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Application">
            <summary>
            Приложение.
            </summary>
        </member>
        <member name="P:VkNet.Model.Application.Store">
            <summary>
            Магазин.
            </summary>
        </member>
        <member name="P:VkNet.Model.Application.AppId">
            <summary>
            Идентификатор приложения в магазине;.
            </summary>
        </member>
        <member name="M:VkNet.Model.Application.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.AuthConfirmResult">
            <summary>
            Результат метода auth.confirm
            </summary>
        </member>
        <member name="P:VkNet.Model.AuthConfirmResult.Success">
            <summary>
            Успешно.
            </summary>
        </member>
        <member name="P:VkNet.Model.AuthConfirmResult.UserId">
            <summary>
            Идентификатор пользователя.
            </summary>
        </member>
        <member name="M:VkNet.Model.AuthConfirmResult.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Button">
            <summary>
            Кнопка.
            </summary>
        </member>
        <member name="P:VkNet.Model.Button.Title">
            <summary>
            Название кнопки.
            </summary>
        </member>
        <member name="P:VkNet.Model.Button.Url">
            <summary>
            Ссылка на которую ведет кнопка.
            </summary>
        </member>
        <member name="M:VkNet.Model.Button.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Career">
            <summary>
            Информация о карьере пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.Career.GroupId">
            <summary>
            Идентификатор сообщества (если доступно, иначе company).
            </summary>
        </member>
        <member name="P:VkNet.Model.Career.Company">
            <summary>
            Название организации (если доступно, иначе group_id).
            </summary>
        </member>
        <member name="P:VkNet.Model.Career.CountryId">
            <summary>
            Идентификатор страны.
            </summary>
        </member>
        <member name="P:VkNet.Model.Career.CityId">
            <summary>
            Идентификатор города (если доступно, иначе city_name).
            </summary>
        </member>
        <member name="P:VkNet.Model.Career.CityName">
            <summary>
            Название города (если доступно, иначе city_id).
            </summary>
        </member>
        <member name="P:VkNet.Model.Career.From">
            <summary>
            Год начала работы.
            </summary>
        </member>
        <member name="P:VkNet.Model.Career.Until">
            <summary>
            Год окончания работы.
            </summary>
        </member>
        <member name="P:VkNet.Model.Career.Position">
            <summary>
            Должность.
            </summary>
        </member>
        <member name="M:VkNet.Model.Career.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Chat">
            <summary>
            Информация о беседе (мультидиалоге, чате).
            См. описание <see href="http://vk.com/dev/chat_object"/>.
            </summary>
        </member>
        <member name="P:VkNet.Model.Chat.Id">
            <summary>
            Идентификатор беседы.
            </summary>
        </member>
        <member name="P:VkNet.Model.Chat.Type">
            <summary>
            Тип диалога.
            </summary>
        </member>
        <member name="P:VkNet.Model.Chat.Title">
            <summary>
            Название беседы.
            </summary>
        </member>
        <member name="P:VkNet.Model.Chat.AdminId">
            <summary>
            Идентификатор пользователя, который является создателем беседы.
            </summary>
        </member>
        <member name="P:VkNet.Model.Chat.Users">
            <summary>
            Список идентификаторов участников беседы.
            </summary>
        </member>
        <member name="P:VkNet.Model.Chat.Left">
            <summary>
            Состоит ли аккаунт в беседе или покинул ее
            </summary>
        </member>
        <member name="P:VkNet.Model.Chat.Sound">
            <summary>
            Неизвестно что за поле, но оно есть в некоторых диалогах (Вроде не влияет на звоковое уведомление о новых сообщениях)
            </summary>
        </member>
        <member name="P:VkNet.Model.Chat.DisabledUntil">
            <summary>
            Неизвестно что за поле, но оно есть в некоторых диалогах (При отключенных звуковых уведомлениях равняеться -1)
            </summary>
        </member>
        <member name="M:VkNet.Model.Chat.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Comment">
            <summary>
            Комментарий к записи.
            См. описание <see href="http://vk.com/devcomment_object"/>.
            </summary>
        </member>
        <member name="P:VkNet.Model.Comment.Id">
            <summary>
            Идентификатор комментария.
            </summary>
        </member>
        <member name="P:VkNet.Model.Comment.FromId">
            <summary>
            Идентификатор автора комментария.
            </summary>
        </member>
        <member name="P:VkNet.Model.Comment.Date">
            <summary>
            Дата и время создания комментария.
            </summary>
        </member>
        <member name="P:VkNet.Model.Comment.Text">
            <summary>
            Текст комментария.
            </summary>
        </member>
        <member name="P:VkNet.Model.Comment.ReplyToUserId">
            <summary>
            Идентификатор пользователя или сообщества, в ответ которому оставлен текущий комментарий (если применимо).
            </summary>
        </member>
        <member name="P:VkNet.Model.Comment.ReplyToCommentId">
            <summary>
            Идентификатор комментария, в ответ на который оставлен текущий комментарий (если применимо).
            </summary>
        </member>
        <member name="P:VkNet.Model.Comment.Attachments">
            <summary>
            Объект, содержащий информацию о медиавложениях в комментарии. См. описание формата медиавложений.
            </summary>
        </member>
        <member name="P:VkNet.Model.Comment.Attachment">
            <summary>
            Первое приложение к комментарию.
            </summary>
        </member>
        <member name="P:VkNet.Model.Comment.Likes">
            <summary>
            Информация о числе людей, которым понравился данный комментарий.
            </summary>
        </member>
        <member name="M:VkNet.Model.Comment.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Contacts">
            <summary>
            Информация о телефонных номерах пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.Contacts.MobilePhone">
            <summary>
            Номер мобильного телефона пользователя (только для Standalone-приложений).
            </summary>
        </member>
        <member name="P:VkNet.Model.Contacts.HomePhone">
            <summary>
            Дополнительный номер телефона пользователя.
            </summary>
        </member>
        <member name="M:VkNet.Model.Contacts.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Currency">
            <summary>
            Валюта.
            </summary>
        </member>
        <member name="P:VkNet.Model.Currency.Id">
            <summary>
            Идентификатор валюты
            </summary>
        </member>
        <member name="P:VkNet.Model.Currency.Сurrency">
            <summary>
            Буквенное обозначение валюты
            </summary>
        </member>
        <member name="P:VkNet.Model.Currency.Name">
            <summary>
            Буквенное обозначение валюты
            </summary>
        </member>
        <member name="M:VkNet.Model.Currency.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.LastSeen">
            <summary>
            Время последнего посещения.
            </summary>
        </member>
        <member name="P:VkNet.Model.LastSeen.Time">
            <summary>
            Время последнего посещения в формате unixtime. .
            </summary>
        </member>
        <member name="P:VkNet.Model.LastSeen.Platform">
            <summary>
            Тип платформы, через которую был осуществлён последний вход. Подробнее cмотрите на странице Подключение к LongPoll серверу. .
            </summary>
        </member>
        <member name="M:VkNet.Model.LastSeen.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Military">
            <summary>
            Информация о военной службе пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.Military.Unit">
            <summary>
            Номер части.
            </summary>
        </member>
        <member name="P:VkNet.Model.Military.UnitId">
            <summary>
            Идентификатор части в базе данных.
            </summary>
        </member>
        <member name="P:VkNet.Model.Military.CountryId">
            <summary>
            Идентификатор страны, в которой находится часть.
            </summary>
        </member>
        <member name="P:VkNet.Model.Military.From">
            <summary>
            Год начала службы.
            </summary>
        </member>
        <member name="P:VkNet.Model.Military.Until">
            <summary>
            Год окончания службы.
            </summary>
        </member>
        <member name="M:VkNet.Model.Military.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.PostSourceData">
            <summary>
            Является опциональным и содержит следующие данные в зависимости от значения поля type:
            </summary>
        </member>
        <member name="P:VkNet.Model.PostSourceData.ProfileActivity">
            <summary>
            Изменение статуса под именем пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.PostSourceData.ProfilePhoto">
            <summary>
            Изменение профильной фотографии пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.PostSourceData.Comments">
            <summary>
            Виджет комментариев.
            </summary>
        </member>
        <member name="P:VkNet.Model.PostSourceData.Like">
            <summary>
            Виджет «Мне нравится».
            </summary>
        </member>
        <member name="P:VkNet.Model.PostSourceData.Poll">
            <summary>
            Виджет опросов.
            </summary>
        </member>
        <member name="M:VkNet.Model.PostSourceData.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Price">
            <summary>
            Цена.
            </summary>
        </member>
        <member name="P:VkNet.Model.Price.Amount">
            <summary>
            Целочисленное значение цены, умноженное на 100.
            </summary>
        </member>
        <member name="P:VkNet.Model.Price.Currency">
            <summary>
            Валюта.
            </summary>
        </member>
        <member name="P:VkNet.Model.Price.Text">
            <summary>
            Строка с локализованной ценой и валютой.
            </summary>
        </member>
        <member name="M:VkNet.Model.Price.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Market">
            <summary>
            Информация о продукте.
            </summary>
        </member>
        <member name="P:VkNet.Model.Market.Id">
            <summary>
            Идентификатор
            </summary>
        </member>
        <member name="P:VkNet.Model.Market.OwnerId">
            <summary>
            Идентификатор владельца товара
            </summary>
        </member>
        <member name="P:VkNet.Model.Market.Title">
            <summary>
            Название товара 
            </summary>
        </member>
        <member name="P:VkNet.Model.Market.Description">
            <summary>
            Текст описания товара
            </summary>
        </member>
        <member name="P:VkNet.Model.Market.Price">
            <summary>
            Цена
            </summary>
        </member>
        <member name="P:VkNet.Model.Market.MarketCategory">
            <summary>
            Категория товара
            </summary>
        </member>
        <member name="P:VkNet.Model.Market.ThumbPhoto">
            <summary>
            URL изображения-обложки товара
            </summary>
        </member>
        <member name="P:VkNet.Model.Market.Date">
            <summary>
            Дата создания товара в формате Unixtime. 
            </summary>
        </member>
        <member name="P:VkNet.Model.Market.Availability">
            <summary>
            Статус доступности товара
            </summary>
        </member>
        <member name="P:VkNet.Model.Market.Photos">
            <summary>
            Изображения товара
            </summary>
        </member>
        <member name="P:VkNet.Model.Market.CanComment">
            <summary>
            Возможность комментировать товар для текущего пользователя
            </summary>
        </member>
        <member name="P:VkNet.Model.Market.CanRepost">
            <summary>
            Возможность сделать репост товара для текущего пользователя
            </summary>
        </member>
        <member name="P:VkNet.Model.Market.Likes">
            <summary>
            Информация об отметках «Мне нравится»
            </summary>
        </member>
        <member name="M:VkNet.Model.Market.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.MarketCategory">
            <summary>
            Категория товара.
            </summary>
        </member>
        <member name="P:VkNet.Model.MarketCategory.Id">
            <summary>
            Идентификатор
            </summary>
        </member>
        <member name="P:VkNet.Model.MarketCategory.Name">
            <summary>
            Название категории
            </summary>
        </member>
        <member name="F:VkNet.Model.MarketCategory.Section">
            <summary>
            Секция
            </summary>
        </member>
        <member name="M:VkNet.Model.MarketCategory.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.MarketCategorySection">
            <summary>
            Секция катеогории товара
            </summary>
        </member>
        <member name="P:VkNet.Model.MarketCategorySection.Id">
            <summary>
            Идентификатор
            </summary>
        </member>
        <member name="P:VkNet.Model.MarketCategorySection.Name">
            <summary>
            Название секции
            </summary>
        </member>
        <member name="M:VkNet.Model.MarketCategorySection.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Rating">
            <summary>
            Рейтинг.
            </summary>
        </member>
        <member name="P:VkNet.Model.Rating.Stars">
            <summary>
            Количество звезд у продукта;.
            </summary>
        </member>
        <member name="P:VkNet.Model.Rating.ReviewsCount">
            <summary>
            Количество отзывов о продукте;.
            </summary>
        </member>
        <member name="M:VkNet.Model.Rating.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Rect">
            <summary>
            Вырезанная фотография пользователя
            </summary>
        </member>
        <member name="P:VkNet.Model.Rect.X">
            <summary>
            x
            </summary>
        </member>
        <member name="P:VkNet.Model.Rect.X2">
            <summary>
            x2
            </summary>
        </member>
        <member name="P:VkNet.Model.Rect.Y">
            <summary>
            y
            </summary>
        </member>
        <member name="P:VkNet.Model.Rect.Y2">
            <summary>
            y2
            </summary>
        </member>
        <member name="M:VkNet.Model.Rect.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.CropPhoto">
            <summary>
            Возвращает данные о точках, по которым вырезаны профильная и миниатюрная фотографии пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.CropPhoto.Photo">
            <summary>
            Объект photo фотографии пользователя из которой вырезается профильная аватарка.
            </summary>
        </member>
        <member name="P:VkNet.Model.CropPhoto.Crop">
            <summary>
            Вырезанная фотография пользователя, поля: x, y, x2, y2, координаты указаны в процентах.
            </summary>
        </member>
        <member name="P:VkNet.Model.CropPhoto.Rect">
            <summary>
            Миниатюрная квадратная фотография, вырезанная из фотографии Crop: x, y, x2, y2, координаты также указаны в процентах;
            </summary>
        </member>
        <member name="M:VkNet.Model.CropPhoto.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Exports">
            <summary>
            Внешние сервисы, в которые настроен экспорт из ВК
            </summary>
        </member>
        <member name="P:VkNet.Model.Exports.Twitter">
            <summary>
            Twitter
            </summary>
        </member>
        <member name="P:VkNet.Model.Exports.Facebook">
            <summary>
            Facebook
            </summary>
        </member>
        <member name="P:VkNet.Model.Exports.Livejournal">
            <summary>
            LiveJournal
            </summary>
        </member>
        <member name="P:VkNet.Model.Exports.Instagram">
            <summary>
            Instagram
            </summary>
        </member>
        <member name="M:VkNet.Model.Exports.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.InformationAboutOffers">
            <summary>
            Информация о предложениях.
            </summary>
        </member>
        <member name="P:VkNet.Model.InformationAboutOffers.Id">
            <summary>
            Идентификатор.
            </summary>
        </member>
        <member name="P:VkNet.Model.InformationAboutOffers.Title">
            <summary>
            Заголовок.
            </summary>
        </member>
        <member name="P:VkNet.Model.InformationAboutOffers.Instruction">
            <summary>
            Инструкция.
            </summary>
        </member>
        <member name="P:VkNet.Model.InformationAboutOffers.InstructionHtml">
            <summary>
            Инструкция с html разметкой.
            </summary>
            <value>
            The instruction_html.
            </value>
        </member>
        <member name="P:VkNet.Model.InformationAboutOffers.ShortDescription">
            <summary>
            Краткое описание.
            </summary>
        </member>
        <member name="P:VkNet.Model.InformationAboutOffers.Description">
            <summary>
            Описание.
            </summary>
        </member>
        <member name="P:VkNet.Model.InformationAboutOffers.Img">
            <summary>
            Ссылка на изображение.
            </summary>
        </member>
        <member name="P:VkNet.Model.InformationAboutOffers.Tag">
            <summary>
            Тег.
            </summary>
        </member>
        <member name="P:VkNet.Model.InformationAboutOffers.Price">
            <summary>
            Цена.
            </summary>
        </member>
        <member name="M:VkNet.Model.InformationAboutOffers.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.LookupContactsOther">
            <summary>
            Контактов, который не был найден.
            </summary>
        </member>
        <member name="P:VkNet.Model.LookupContactsOther.Contact">
            <summary>
            Контакт.
            </summary>
        </member>
        <member name="P:VkNet.Model.LookupContactsOther.CommonCount">
            <summary>
            Количество.
            </summary>
        </member>
        <member name="M:VkNet.Model.LookupContactsOther.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.LookupContactsResult">
            <summary>
            Результат поиск пользователей по другим сервисам.
            </summary>
        </member>
        <member name="P:VkNet.Model.LookupContactsResult.FoundList">
            <summary>
            Список объектов пользователей.
            </summary>
        </member>
        <member name="P:VkNet.Model.LookupContactsResult.Other">
            <summary>
            Список контактов, которые не были найдены.
            </summary>
        </member>
        <member name="M:VkNet.Model.LookupContactsResult.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.MessagesGetObject">
            <summary>
            Результат выполнения запроса получения диалогов
            </summary>
        </member>
        <member name="P:VkNet.Model.MessagesGetObject.TotalCount">
            <summary>
            Общее число диалогов.
            Если Вы используете при вызове unread=true, то здесь будет содержаться количество непрочитанных диалогов
            </summary>
        </member>
        <member name="P:VkNet.Model.MessagesGetObject.Unread">
            <summary>
            Количество непрочитанных диалогов.
            Если Вы используете при вызове unread=true, то это поле возвращено не будет
            </summary>
        </member>
        <member name="P:VkNet.Model.MessagesGetObject.RealOffset">
            <summary>
            Если был передан параметр start_message_id, будет содержать итоговое смещение данного подмножества диалогов
            (оно может быть отрицательным, если был указан отрицательный offset).
            </summary>
        </member>
        <member name="P:VkNet.Model.MessagesGetObject.Messages">
            <summary>
            Диалоги
            </summary>
        </member>
        <member name="M:VkNet.Model.MessagesGetObject.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns>Объект типа <see cref="T:VkNet.Model.MessagesGetObject"/></returns>
        </member>
        <member name="T:VkNet.Model.LongPollHistoryResponse">
            <summary>
            Обновления в личных сообщениях пользователя.
            </summary>
        </member>
        <member name="M:VkNet.Model.LongPollHistoryResponse.#ctor">
            <summary>
            Обновления в личных сообщениях пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.LongPollHistoryResponse.History">
            <summary>
            История.
            </summary>
        </member>
        <member name="P:VkNet.Model.LongPollHistoryResponse.UnreadMessages">
            <summary>
            Количество непрочитанных сообщений
            </summary>
        </member>
        <member name="P:VkNet.Model.LongPollHistoryResponse.Messages">
            <summary>
            Колекция сообщений.
            </summary>
        </member>
        <member name="P:VkNet.Model.LongPollHistoryResponse.Profiles">
            <summary>
            Колекция профилей.
            </summary>
        </member>
        <member name="P:VkNet.Model.LongPollHistoryResponse.NewPts">
            <summary>
            Последнее значение параметра new_pts, полученное от Long Poll сервера, используется для получения действий, которые хранятся всегда.
            </summary>
        </member>
        <member name="M:VkNet.Model.LongPollHistoryResponse.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Mention">
            <summary>
            Упоминание.
            </summary>
        </member>
        <member name="P:VkNet.Model.Mention.Id">
            <summary>
            Идентификатор записи на стене пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.Mention.FromId">
            <summary>
            Идентификатор пользователя, написавшего запись.
            </summary>
        </member>
        <member name="P:VkNet.Model.Mention.Date">
            <summary>
            Время публикаии записи в формате unixtime.
            </summary>
        </member>
        <member name="P:VkNet.Model.Mention.Text">
            <summary>
            Текст записи.
            </summary>
        </member>
        <member name="P:VkNet.Model.Mention.Likes">
            <summary>
            Содержит информацию о числе людей, которым понравилась данная запись, и понравилась ли она текущему пользователю.
            </summary>
        </member>
        <member name="P:VkNet.Model.Mention.Comments">
            <summary>
            Содержит информацию о количестве комментариев к записи и возможности текущего пользователя оставлять комментарии к ней.
            </summary>
        </member>
        <member name="P:VkNet.Model.Mention.Attachment">
            <summary>
            Содержит объект, который присоединен к текущей новости ( фотография, ссылка и т.п.). Более подробная информация представлена на странице Описание поля attachment.
            </summary>
        </member>
        <member name="P:VkNet.Model.Mention.Geo">
            <summary>
            Находится в записях со стен, в которых имеется информация о местоположении.
            </summary>
        </member>
        <member name="P:VkNet.Model.Mention.CopyOwnerId">
            <summary>
            Если запись является копией записи с чужой стены, то в поле содержится идентификатор владельца стены у которого была скопирована запись.
            </summary>
        </member>
        <member name="P:VkNet.Model.Mention.CopyPostId">
            <summary>
            Если запись является копией записи с чужой стены, то в поле содержится идентфикатор скопированной записи на стене ее владельца.
            </summary>
        </member>
        <member name="P:VkNet.Model.Mention.ToId">
            <summary>
            Идентификатор сообщества где было сделано упоминание.
            </summary>
            <remarks>
            Выведено экспериментально.
            </remarks>
        </member>
        <member name="P:VkNet.Model.Mention.PostId">
            <summary>
            Идентификатор поста.
            </summary>
            <remarks>
            Выведено экспериментально.
            </remarks>
        </member>
        <member name="P:VkNet.Model.Mention.PostType">
            <summary>
            Тип поста.
            </summary>
            <remarks>
            Выведено экспериментально.
            </remarks>
        </member>
        <member name="P:VkNet.Model.Mention.Reposts">
            <summary>
            Репосты.
            </summary>
            <remarks>
            Выведено экспериментально.
            </remarks>
        </member>
        <member name="M:VkNet.Model.Mention.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Occupation">
            <summary>
            Информация о текущем роде занятия пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.Occupation.Name">
            <summary>
            Название школы, вуза или места работы
            </summary>
        </member>
        <member name="P:VkNet.Model.Occupation.Id">
            <summary>
            Идентификатор школы, вуза, группы компании (в которой пользователь работает).
            </summary>
        </member>
        <member name="P:VkNet.Model.Occupation.Type">
            <summary>
            Информация о текущем роде занятия пользователя.
            </summary>
        </member>
        <member name="M:VkNet.Model.Occupation.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.PhotoSize">
            <summary>
            Формат описания размеров фотографи.
            </summary>
        </member>
        <member name="P:VkNet.Model.PhotoSize.Src">
            <summary>
            Url копии изображения.
            </summary>
        </member>
        <member name="P:VkNet.Model.PhotoSize.Width">
            <summary>
            Ширина копии в пикселах.
            </summary>
        </member>
        <member name="P:VkNet.Model.PhotoSize.Height">
            <summary>
            Высота копии в пикселах.
            </summary>
        </member>
        <member name="P:VkNet.Model.PhotoSize.Type">
            <summary>
            Обозначение размера и пропорций копии.
            </summary>
        </member>
        <member name="M:VkNet.Model.PhotoSize.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.PostReach">
            <summary>
            Статистика для записи на стене.
            </summary>
        </member>
        <member name="P:VkNet.Model.PostReach.ReachSubscribers">
            <summary>
            Охват подписчиков.
            </summary>
        </member>
        <member name="P:VkNet.Model.PostReach.ReachTotal">
            <summary>
            Суммарный охват.
            </summary>
        </member>
        <member name="P:VkNet.Model.PostReach.Links">
            <summary>
            Переходы по ссылке.
            </summary>
        </member>
        <member name="P:VkNet.Model.PostReach.ToGroup">
            <summary>
            Переходы в сообщество.
            </summary>
        </member>
        <member name="P:VkNet.Model.PostReach.JoinGroup">
            <summary>
            Вступления в сообщество.
            </summary>
        </member>
        <member name="P:VkNet.Model.PostReach.Report">
            <summary>
            Количество жалоб на запись.
            </summary>
        </member>
        <member name="P:VkNet.Model.PostReach.Hide">
            <summary>
            Количество скрытий записи.
            </summary>
        </member>
        <member name="P:VkNet.Model.PostReach.Unsubscribe">
            <summary>
            Количество отписавшихся участников.
            </summary>
        </member>
        <member name="M:VkNet.Model.PostReach.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.PushSettings">
            <summary>
            Настройки уведомлений для беседы
            </summary>
        </member>
        <member name="P:VkNet.Model.PushSettings.Sound">
            <summary>
            Состояние звукового оповещения
            </summary>
        </member>
        <member name="P:VkNet.Model.PushSettings.DisabledUntil">
            <summary>
            Неизвестный параметр
            </summary>
        </member>
        <member name="M:VkNet.Model.PushSettings.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.NewsBannedExList">
            <summary>
            Расширеный список забаненых новостей.
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsBannedExList.Groups">
            <summary>
            В поле groups содержится массив идентификаторов сообществ, которые пользователь скрыл из ленты новостей.
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsBannedExList.Profiles">
            <summary>
            В поле members содержится массив идентификаторов друзей, которые пользователь скрыл из ленты новостей.
            </summary>
        </member>
        <member name="M:VkNet.Model.NewsBannedExList.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.NewsBannedList">
            <summary>
            Список забаненых новостей.
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsBannedList.Groups">
            <summary>
            В поле groups содержится массив идентификаторов сообществ, которые пользователь скрыл из ленты новостей.
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsBannedList.Members">
            <summary>
            В поле members содержится массив идентификаторов друзей, которые пользователь скрыл из ленты новостей.
            </summary>
        </member>
        <member name="M:VkNet.Model.NewsBannedList.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.NewsFeed">
            <summary>
            Новости
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsFeed.Items">
            <summary>
            Массив новостей для текущего пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsFeed.Profiles">
            <summary>
            Информация о пользователях, которые находятся в списке новостей.
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsFeed.Groups">
            <summary>
            Информация о группах, которые находятся в списке новостей.
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsFeed.NewOffset">
            <summary>
            Содержит offset, который необходимо передать, для того, чтобы получить следующую часть новостей.
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsFeed.NextFrom">
            <summary>
            Содержит start_from, который необходимо передать, для того, чтобы получить следующую часть новостей. Позволяет избавиться от дубликатов, которые могут возникнуть при появлении новых новостей между вызовами этого метода.
            </summary>
        </member>
        <member name="T:VkNet.Model.NewsItem">
            <summary>
            Элемент коллекции новостей.
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsItem.Type">
            <summary>
            Тип списка новости, соответствующий одному из значений параметра filters.
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsItem.SourceId">
            <summary>
            Идентификатор источника новости (положительный — новость пользователя, отрицательный — новость группы).
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsItem.Date">
            <summary>
            Время публикации новости в формате unixtime.
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsItem.PostId">
            <summary>
            Находится в записях со стен и содержит идентификатор записи на стене владельца.
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsItem.PostTypeOrder">
            <summary>
            Находится в записях со стен, содержит тип новости (post или copy).
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsItem.FinalPost">
            <summary>
            Передается в случае, если этот пост сделан при удалении.
            </summary>
            <remarks>
            TODO: Установить настоящий тип данных
            </remarks>
        </member>
        <member name="P:VkNet.Model.NewsItem.CopyOwnerId">
            <summary>
            Находится в записях со стен, если сообщение является копией сообщения с чужой стены, и содержит идентификатор владельца стены, у которого было скопировано сообщение.
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsItem.CopyPostId">
            <summary>
            Находится в записях со стен, если сообщение является копией сообщения с чужой стены, и содержит идентификатор скопированного сообщения на стене его владельца.
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsItem.CopyHistory">
            <summary>
            Массив, содержащий историю репостов для записи. Возвращается только в том случае, если запись является репостом. Каждый из объектов массива, в свою очередь, является объектом-записью стандартного формата.
            </summary>
            <remarks>
            TODO: Установить настоящий тип данных
            </remarks>
        </member>
        <member name="P:VkNet.Model.NewsItem.CopyPostDate">
            <summary>
            Находится в записях со стен, если сообщение является копией сообщения с чужой стены, и содержит дату скопированного сообщения.
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsItem.Text">
            <summary>
            Находится в записях со стен и содержит текст записи.
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsItem.CanEdit">
            <summary>
            Содержит <c>true</c>, если текущий пользователь может редактировать запись.
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsItem.CanDelete">
            <summary>
            Возвращается, если пользователь может удалить новость, всегда содержит <c>true</c>.
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsItem.Comments">
            <summary>
            Находится в записях со стен и содержит информацию о комментариях к записи.
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsItem.Likes">
            <summary>
            Находится в записях со стен и содержит информацию о числе людей, которым понравилась данная запись.
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsItem.Reposts">
            <summary>
            Находится в записях со стен и содержит информацию о числе людей, которые скопировали данную запись на свою страницу.
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsItem.Attachments">
            <summary>
            Находится в записях со стен и содержит массив объектов, которые прикреплены к текущей новости (фотография, ссылка и т.п.). Более подробная информация представлена на странице Описание поля attachments.
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsItem.Geo">
            <summary>
            Находится в записях со стен, в которых имеется информация о местоположении.
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsItem.Photos">
            <summary>
            Содержат информацию о количестве объектов и до 5 последних объектов, связанных с данной новостью.
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsItem.PhotoTags">
            <summary>
            Содержат информацию о количестве объектов и до 5 последних объектов, связанных с данной новостью.
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsItem.Notes">
            <summary>
            Содержат информацию о количестве объектов и до 5 последних объектов, связанных с данной новостью.
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsItem.Friends">
            <summary>
            Содержат информацию о количестве объектов и до 5 последних объектов, связанных с данной новостью.
            </summary>
        </member>
        <member name="M:VkNet.Model.NewsItem.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.NewsSearchResult">
            <summary>
            Результат поиска метода newsfeed.search
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsSearchResult.Id">
            <summary>
            Локальный идентификатор записи (для конкретного владельца).
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsSearchResult.OwnerId">
            <summary>
            Идентификатор владельца стены, на которой размещена запись. Если стена принадлежит сообществу, то данный параметр равен -gid (идентификатор сообщества со знаком минус).
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsSearchResult.FromId">
            <summary>
            Идентификатор автора записи;.
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsSearchResult.Date">
            <summary>
            Время публикации записи в формате unixtime.
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsSearchResult.Text">
            <summary>
            Текст записи.
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsSearchResult.Comments">
            <summary>
            Содержит информацию о количестве комментариев к записи.
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsSearchResult.Likes">
            <summary>
            Содержит информацию о числе людей, которым понравилась данная запись.
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsSearchResult.Attachments">
            <summary>
            Находится в записях со стен и содержит массив объектов, которые прикреплены к текущей новости (фотография, ссылка и т.п.). Более подробная информация представлена на странице Описание поля attachments.
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsSearchResult.Geo">
            <summary>
            Находится в записях со стен, в которых имеется информация о местоположении.
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsSearchResult.SignerId">
            <summary>
            Идентификатор владельца записи.
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsSearchResult.PostType">
            <summary>
            Тип записи
            </summary>
        </member>
        <member name="M:VkNet.Model.NewsSearchResult.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.NewsSuggestions">
            <summary>
            Предложения новостей.
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsSuggestions.Users">
            <summary>
            Предложения по пользователям.
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsSuggestions.Groups">
            <summary>
            Предложения по группам.
            </summary>
        </member>
        <member name="M:VkNet.Model.NewsSuggestions.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.NewsUserListItem">
            <summary>
            Элемент пользовательского списка новостей
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsUserListItem.Id">
            <summary>
            Идентификатор списка.
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsUserListItem.Title">
            <summary>
            Название списка, заданное пользователем.
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsUserListItem.NoReposts">
            <summary>
            Отключены ли копии постов;
            </summary>
        </member>
        <member name="P:VkNet.Model.NewsUserListItem.SourceIds">
            <summary>
            Идентификаторы пользователей и сообществ, включенных в список.
            </summary>
        </member>
        <member name="M:VkNet.Model.NewsUserListItem.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Attachments.Album">
            <summary>
            Альбом с фотографиями пользователя.
            См. описание <see href="http://vk.com/dev/attachments_w"/>. Раздел "Альбом с фотографиями".
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Album.Thumb">
            <summary>
            Обложка альбома.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Album.Title">
            <summary>
            Название альбома.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Album.Description">
            <summary>
            Описание альбома.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Album.CreateTime">
            <summary>
            Дата и время создания альбома.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Album.UpdateTime">
            <summary>
            Дата и время последнего обновления альбома.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Album.Size">
            <summary>
            Количество фотографий в альбоме.
            </summary>
        </member>
        <member name="T:VkNet.Model.Attachments.ApplicationContent">
            <summary>
            Êîíòåíò ïðèëîæåíèÿ.
            Ñì. îïèñàíèå <see href="http://vk.com/dev/attachments_w"/>. Ðàçäåë "Êîíòåíò ïðèëîæåíèÿ".
            </summary>
        </member>
        <member name="M:VkNet.Model.Attachments.ApplicationContent.#cctor">
            <summary>
            Ïðèëîæåíèå.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.ApplicationContent.Id">
            <summary>
            Èäåíòèôèêàòîð ïðèëîæåíèÿ, ðàçìåñòèâøåãî çàïèñü íà ñòåíå.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.ApplicationContent.Name">
            <summary>
            Íàçâàíèå ïðèëîæåíèÿ.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.ApplicationContent.Photo130">
            <summary>
            Àäðåñ èçîáðàæåíèÿ äëÿ ïðåäïðîñìîòðà.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.ApplicationContent.Photo604">
            <summary>
            Àäðåñ ïîëíîðàçìåðíîãî èçîáðàæåíèÿ.
            </summary>
        </member>
        <member name="M:VkNet.Model.Attachments.ApplicationContent.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Ðàçîáðàòü èç json.
            </summary>
            <param name="response">Îòâåò ñåðâåðà.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Attachments.Gift">
            <summary>
            Подарок.
            </summary>
        </member>
        <member name="M:VkNet.Model.Attachments.Gift.#cctor">
            <summary>
            Подарок.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Gift.Thumb48">
            <summary>
            Изображение 48х48.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Gift.Thumb96">
            <summary>
            Изображение 96х96.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Gift.Thumb256">
            <summary>
            Изображение 256х256.
            </summary>
        </member>
        <member name="M:VkNet.Model.Attachments.Gift.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Attachments.MediaAttachment">
            <summary>
            Ïðèëîæåííûé îáúåêò, èìåþùèé èäåíòèôèêàòîð è âëàäåëüöà.
            </summary>
        </member>
        <member name="F:VkNet.Model.Attachments.MediaAttachment.Types">
            <summary>
            Ñëîâàðü òèïîâ
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.MediaAttachment.Id">
            <summary>
            Èäåíòèôèêàòîð ïðèëîæåííîãî îáúåêòà.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.MediaAttachment.OwnerId">
            <summary>
            Èäåíòèôèêàòîð âëàäåëüöà ïðèëîæåííîãî îáúåêòà.
            </summary>
        </member>
        <member name="M:VkNet.Model.Attachments.MediaAttachment.ToString">
            <summary>
            Ïðèâåñòè îáúåêò ê ñòðîêå.
            </summary>
        </member>
        <member name="M:VkNet.Model.Attachments.MediaAttachment.RegisterType(System.Type,System.String)">
            <summary>
            Çàðåãèñòðèðîâàòü òèï.
            </summary>
            <param name="type">Òèï âëîæåíèÿ.</param>
            <param name="match">Ñîîòâåòñòâèå.</param>
        </member>
        <member name="M:VkNet.Model.Attachments.MediaAttachment.MatchType(System.Type)">
            <summary>
            Ñîîòâåòñòâèå òèïà.
            </summary>
            <param name="type">Òèï âëîæåíèÿ.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Attachments.Sticker">
            <summary>
            Стикер.
            </summary>
        </member>
        <member name="M:VkNet.Model.Attachments.Sticker.#cctor">
            <summary>
            Стикер.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Sticker.ProductId">
            <summary>
            Идентификатор набора.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Sticker.Photo64">
            <summary>
            url изображения с высотой 64px.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Sticker.Photo128">
            <summary>
            url изображения с высотой 128px.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Sticker.Photo256">
            <summary>
            url изображения с высотой 256px.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Sticker.Photo352">
            <summary>
            url изображения с высотой 352px.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Sticker.Width">
            <summary>
            Ширина в px
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Sticker.Height">
            <summary>
            Высота в px.
            </summary>
        </member>
        <member name="M:VkNet.Model.Attachments.Sticker.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Attachments.Wall">
            <summary>
            Запись на стене.
            </summary>
        </member>
        <member name="M:VkNet.Model.Attachments.Wall.#cctor">
            <summary>
            Запись на стене.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Wall.FromId">
            <summary>
            Идентификатор пользователя, создавшего запись;
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Wall.ToId">
            <summary>
            Идентификатор владельца записи.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Wall.Date">
            <summary>
            Время публикации записи в формате unixtime.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Wall.Text">
            <summary>
            Текст записи.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Wall.Comments">
            <summary>
            Комментарии
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Wall.Likes">
            <summary>
            Лайки
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Wall.Reposts">
            <summary>
            Репосты
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Wall.PostSource">
            <summary>
            Информация о том, как была создана запись.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Wall.Attachments">
            <summary>
            Информация о вложениях записи (фотографии ссылки и т.п.).
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Wall.Geo">
            <summary>
            Информация о месте (если доступно).
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Wall.SignerId">
            <summary>
            Если запись была опубликована от имени группы и подписана пользователем, то в поле содержится идентификатор её автора
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Wall.CopyOwnerId">
            <summary>
            Если запись является копией записи с чужой стены, то в поле содержится идентификатор владельца стены, у которого была скопирована запись.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Wall.CopyPostId">
            <summary>
            Если запись является копией записи с чужой стены, то в поле содержится идентификатор скопированной записи на стене ее владельца.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Wall.CopyText">
            <summary>
            Если запись является копией записи с чужой стены и при её копировании был добавлен комментарий, его текст содержится в данном поле.
            </summary>
        </member>
        <member name="T:VkNet.Model.Attachments.WallReply">
            <summary>
            Комментарий к записи на стене.
            </summary>
        </member>
        <member name="M:VkNet.Model.Attachments.WallReply.#cctor">
            <summary>
            Комментарий к записи на стене.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.WallReply.FromId">
            <summary>
            Идентификатор автора комментария.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.WallReply.Date">
            <summary>
            Дата создания комментария в формате unixtime.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.WallReply.Text">
            <summary>
            Текст комментария.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.WallReply.Likes">
            <summary>
            Информация о лайках к комментарию.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.WallReply.ReplyToUId">
            <summary>
            Идентификатор пользователя, в ответ которому был оставлен комментарий;
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.WallReply.ReplyToCId">
            <summary>
            Идентификатор комментария, в ответ на который был оставлен текущий.
            </summary>
        </member>
        <member name="M:VkNet.Model.Attachments.WallReply.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Attachments.Graffiti">
            <summary>
            Граффити.
            См. описание <see href="http://vk.com/dev/attachments_w"/>. Раздел "Граффити".
            </summary>
        </member>
        <member name="M:VkNet.Model.Attachments.Graffiti.#cctor">
            <summary>
            Граффити.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Graffiti.Photo200">
            <summary>
            Адрес изображения для предпросмотра.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Graffiti.Photo586">
            <summary>
            Адрес полноразмерного изображения.
            </summary>
        </member>
        <member name="M:VkNet.Model.Attachments.Graffiti.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Attachments.Link">
            <summary>
            Ссылка на Web-страницу.
            См. описание <see href="http://vk.com/dev/attachments_w"/>. Раздел "Ссылка".
            </summary>
        </member>
        <member name="M:VkNet.Model.Attachments.Link.#cctor">
            <summary>
            Граффити.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Link.Url">
            <summary>
            Адрес ссылки.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Link.Title">
            <summary>
            Заголовок ссылки.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Link.Description">
            <summary>
            Описание ссылки.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Link.Image">
            <summary>
            Адрес превью изображения к ссылке (если имеется).
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Link.PreviewPage">
            <summary>
            Идентификатр wiki страницы с контентом для предпросмотра содержимого страницы. Идентификатор возвращается в формате "owner_id_page_id".
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Link.Caption">
            <summary>
            Подпись ссылки (если имеется).
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Link.Photo">
            <summary>
            Фото (если имеется).
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Link.IsExternal">
            <summary>
            Является ли ссылкой на внешний ресурс (если имеется).
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Link.Product">
            <summary>
            Продукт.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Link.Rating">
            <summary>
            Рейтинг.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Link.Application">
            <summary>
            Приложение.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Link.Button">
            <summary>
            Кнопка.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Link.PreviewUrl">
            <summary>
            Адрес страницы для предпросмотра содержимого страницы.
            </summary>
        </member>
        <member name="M:VkNet.Model.Attachments.Link.ToString">
            <summary>
            Преобразовать к строке.
            </summary>
            <returns>
            Адрес ссылки.
            </returns>
        </member>
        <member name="M:VkNet.Model.Attachments.Link.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Attachments.Poll">
            <summary>
            Опрос.
            См. описание <see href="http://vk.com/dev/attachments_w"/>. Раздел "Опрос".
            </summary>
        </member>
        <member name="M:VkNet.Model.Attachments.Poll.#cctor">
            <summary>
            Опрос.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Poll.Question">
            <summary>
            Вопрос, заданный в голосовании.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Poll.Created">
            <summary>
            Дата создания опроса
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Poll.Votes">
            <summary>
            Кол-во ответов
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Poll.AnswerId">
            <summary>
            Идентификатор выбранного ответа
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Poll.IsAnonymous">
            <summary>
            Возможность анонимых ответов
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Poll.Answers">
            <summary>
            Варианты ответов
            </summary>
        </member>
        <member name="M:VkNet.Model.Attachments.Poll.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Attachments.Attachment">
            <summary>
            Информация о медиавложении в записи.
            См. описание <see href="http://vk.com/dev/attachments_w"/>. 
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Attachment.Photo">
            <summary>
            Фотография из альбома или фотография, загруженная напрямую с компьютера пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Attachment.Video">
            <summary>
            Видеозапись.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Attachment.Audio">
            <summary>
            Аудиозапись.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Attachment.Document">
            <summary>
            Документ.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Attachment.Graffiti">
            <summary>
            Документ.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Attachment.Link">
            <summary>
            Ссылка на Web-страницу.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Attachment.Note">
            <summary>
            Заметка.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Attachment.ApplicationContent">
            <summary>
            Контент приложения.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Attachment.Poll">
            <summary>
            Опрос.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Attachment.Page">
            <summary>
            Wiki страница.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Attachment.Album">
            <summary>
            Альбом с фотографиями.
            </summary>
        </member>
        <member name="F:VkNet.Model.Attachments.Attachment.PhotosList">
            <summary>
            Список фотографий
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Attachment.Wall">
            <summary>
            Запись на стене.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Attachment.Sticker">
            <summary>
            Стикер.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Attachment.Gift">
            <summary>
            Подарок.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Attachment.WallReply">
            <summary>
            Комментарии к записи на стене.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Attachment.MarketAlbum">
            <summary>
            Каталог товаров.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Attachment.Instance">
            <summary>
            Экземпляр самого прикрепления.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Attachment.Type">
            <summary>
            Информация о типе вложения.
            </summary>
        </member>
        <member name="M:VkNet.Model.Attachments.Attachment.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Attachments.Audio">
            <summary>
            Аудиозапись пользователя или группы.
            См. описание <see href="http://vk.com/dev/audio_object"/>.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Audio.Artist">
            <summary>
            Исполнитель аудиозаписи.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Audio.Title">
            <summary>
            Название композиции.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Audio.Duration">
            <summary>
            Длительность аудиозаписи в секундах.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Audio.Url">
            <summary>
            Ссылка на аудиозапись (привязана к ip-адресу клиентского приложения).
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Audio.LyricsId">
            <summary>
            Идентификатор текста аудиозаписи (если доступно).
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Audio.AlbumId">
            <summary>
            Идентификатор альбома аудиозаписи (если присвоен).
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Audio.Genre">
            <summary>
            Жанр аудиозаписи.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Audio.Date">
            <summary>
            Дата добавления.
            </summary>
        </member>
        <member name="M:VkNet.Model.Attachments.Audio.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Attachments.Document">
            <summary>
            Информация о документе.
            См. описание <see href="http://vk.com/dev/doc"/>.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Document.Title">
            <summary>
            Название документа.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Document.Size">
            <summary>
            Размер документа в байтах.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Document.Ext">
            <summary>
            Расширение документа.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Document.Url">
            <summary>
            Адрес документа, по которому его можно загрузить.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Document.Photo100">
            <summary>
            Адрес изображения с размером 100x75px (если файл графический).
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Document.Photo130">
            <summary>
            Адрес изображения с размером 130x100px (если файл графический).
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Document.AccessKey">
            <summary>
            Ключ доступа к закрытым ресурсам
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Document.Date">
            <summary>
            Дата добавления в формате unixtime.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Document.Preview">
            <summary>
            Gets or sets the preview.
            </summary>
        </member>
        <member name="M:VkNet.Model.Attachments.Document.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Attachments.Note">
            <summary>
            Заметка пользователя.
            См. описание <see href="http://vk.com/dev/note"/>.
            </summary>
        </member>
        <member name="M:VkNet.Model.Attachments.Note.#cctor">
            <summary>
            Заметка пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Note.Title">
            <summary>
            Заголовок заметки.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Note.Text">
            <summary>
            Текст заметки.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Note.Date">
            <summary>
            Дата создания заметки.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Note.CommentsCount">
            <summary>
            Количество комментариев к заметке.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Note.ReadCommentsCount">
            <summary>
            Количество прочитанных комментариев (только при запросе информации о заметке текущего пользователя).
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Note.ViewUrl">
            <summary>
            Адрес страницы для отображения заметки.
            </summary>
        </member>
        <member name="T:VkNet.Model.Attachments.Page">
            <summary>
            Информация о вики-странице сообщества.
            См. описание <see href="http://vk.com/dev/pages.get"/>.
            </summary>
        </member>
        <member name="M:VkNet.Model.Attachments.Page.#cctor">
            <summary>
            Опрос.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Page.GroupId">
            <summary>
            Идентификатор сообщества.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Page.CreatorId">
            <summary>
            Идентификатор создателя страницы.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Page.Title">
            <summary>
            Название страницы.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Page.Source">
            <summary>
            Текст страницы в вики-формате.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Page.CurrentUserCanEdit">
            <summary>
            Указывает, может ли текущий пользователь редактировать текст страницы.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Page.CurrentUserCanEditAccess">
            <summary>
            Указывает, может ли текущий пользователь изменять права доступа на страницу.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Page.WhoCanView">
            <summary>
            Указывает, кто может просматривать вики-страницу.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Page.WhoCanEdit">
            <summary>
            Указывает, кто может редактировать вики-страницу.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Page.EditorId">
            <summary>
            Идентификатор пользователя, который редактировал страницу последним.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Page.Edited">
            <summary>
            Дата последнего изменения (в виде строки).
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Page.CreateTime">
            <summary>
            Дата создания страницы (в виде строки).
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Page.Parent">
            <summary>
            Заголовок родительской страницы для навигации, если есть.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Page.Parent2">
            <summary>
            Заголовок второй родительской страницы для навигации, если есть.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Page.Html">
            <summary>
            Html-текст страницы.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Page.ViewUrl">
            <summary>
            Адрес страницы для отображения вики-страницы.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Page.VersionCreated">
            <summary>
            Gets or sets the version created.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Page.Views">
            <summary>
            Количество просмотров вики-страницы.
            </summary>
        </member>
        <member name="M:VkNet.Model.Attachments.Page.ToString">
            <summary>
            Преобразовать в строку.
            </summary>
        </member>
        <member name="T:VkNet.Model.Attachments.Photo">
            <summary>
            Фотография.
            </summary>
            <remarks>
            См. описание <see href="http://vk.com/dev/photo"/> и <see href="http://vk.com/dev/attachments_w"/> раздел "Альбом с фотографиями".
            </remarks>
        </member>
        <member name="P:VkNet.Model.Attachments.Photo.AlbumId">
            <summary>
            Идентификатор альбома, в котором находится фотография.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Photo.Photo75">
            <summary>
            Url фотографии с максимальным размером 75x75px.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Photo.Photo130">
            <summary>
            Url фотографии с максимальным размером 130x130px.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Photo.Photo604">
            <summary>
            Url фотографии с максимальным размером 604x604px.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Photo.Photo807">
            <summary>
            Url фотографии с максимальным размером 807x807px.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Photo.Photo1280">
            <summary>
            Url фотографии с максимальным размером 1280x1024px. 
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Photo.Photo2560">
            <summary>
            Url фотографии с максимальным размером  2560x2048px.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Photo.Width">
            <summary>
            Ширина оригинала фотографии в пикселах
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Photo.Height">
            <summary>
            Высота оригинала фотографии в пикселах. 
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Photo.Text">
            <summary>
            Текст описания фотографии. 
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Photo.CreateTime">
            <summary>
            Дата добавления фотографии.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Photo.AccessKey">
            <summary>
            Ключ доступа.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Photo.UserId">
            <summary>
            Идентификатор пользователя, загрузившего фото (если фотография размещена в сообществе). Для фотографий, размещенных от имени сообщества.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Photo.PostId">
            <summary>
            Идентификатор записи, у которой данная фотография является прикреплением???
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Photo.PlacerId">
            <summary>
            Идентификатор пользователя, сделавшего отметку
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Photo.TagCreated">
            <summary>
            Дата создания отметки
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Photo.TagId">
            <summary>
            Идентификатор отметки
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Photo.Likes">
            <summary>
            Лайки
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Photo.CanComment">
            <summary>
            Возможность комментирования фотографии
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Photo.Comments">
            <summary>
            Комментарии
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Photo.Tags">
            <summary>
            Теги
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Photo.PhotoSrc">
            <summary>
            Источник изображения.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Photo.PhotoHash">
            <summary>
            Хеш изображения.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Photo.Sizes">
            <summary>
            Размеры фотографий.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Photo.Latitude">
            <summary>
            Географическая широта отметки, заданная в градусах
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Photo.Longitude">
            <summary>
            Географическая долгота отметки, заданная в градусах
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Photo.BigPhotoSrc">
            <summary>
            Url фотографии с максимальным размером.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Photo.SmallPhotoSrc">
            <summary>
            Url фотографии с минимальным размером.
            </summary>
        </member>
        <member name="M:VkNet.Model.Attachments.Photo.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Attachments.Video">
            <summary>
            Видеозапись пользователя или группы.
            </summary>
            <remarks>
            См. описание <see href="http://vk.com/dev/video_object"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Model.Attachments.Video.#cctor">
            <summary>
            Видеозапись пользователя или группы.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Video.Title">
            <summary>
            Название видеозаписи.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Video.Description">
            <summary>
            Текст описания видеозаписи.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Video.Duration">
            <summary>
            Длительность ролика в секундах.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Video.Link">
            <summary>
            Строка, состоящая из ключа video+vid.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Video.Photo130">
            <summary>
            Url изображения-обложки ролика с размером 130x98px.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Video.Photo320">
            <summary>
            Url изображения-обложки ролика с размером 320x240px.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Video.Photo640">
            <summary>
            Url изображения-обложки ролика с размером 640x480px (если размер есть).
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Video.Date">
            <summary>
            Дата добавления видеозаписи.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Video.ViewsCount">
            <summary>
            Количество просмотров.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Video.CommentsCount">
            <summary>
            Количество комментариев.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Video.Player">
            <summary>
            Адрес страницы с плеером, который можно использовать для воспроизведения ролика в браузере.
            Поддерживается flash и html5, плеер всегда масштабируется по размеру окна.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Video.CanComment">
            <summary>
            Признак может ли текущий пользователь добавлять комментарии к видеозаписи.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Video.CanRepost">
            <summary>
            Признак может ли текущий пользователь сделать репост данной видеозаписи.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Video.Likes">
            <summary>
            Информация о лайках к видеозаписи.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Video.Repeat">
            <summary>
            Признак является ли видеозапись зацикленной.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Video.AlbumId">
            <summary>
            Идентификатор видеоальбома <see cref="T:VkNet.Model.VideoAlbum"/>, к которому относится видеозапись.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Video.UploadUrl">
            <summary>
            Url, по которому необходимо выполнить загрузку видеов (см. метод <see cref="M:VkNet.Categories.VideoCategory.Save(System.String,System.String,System.Boolean,System.Boolean,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Boolean)"/>).
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Video.AccessKey">
            <summary>
            Ключ доступа.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Video.Tag">
            <summary>
            Отметка к видеозаписи.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Video.Live">
            <summary>
            Поле возвращается в том случае, если видеозапись является прямой трансляцией, всегда содержит 1. Обратите внимание, в этом случае в поле duration содержится значение 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Video.Processing">
            <summary>
            Поле возвращается в том случае, если видеоролик находится в процессе обработки, всегда содержит 1.
            </summary>
        </member>
        <member name="P:VkNet.Model.Attachments.Video.AddingDate">
            <summary>
            Дата добавления видеозаписи пользователем или группой в формате unixtime.
            </summary>
        </member>
        <member name="M:VkNet.Model.Attachments.Video.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="video">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.AudioAlbum">
            <summary>
            Информация об аудиоальбоме.
            </summary>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/audio.getAlbums"/>.
            </remarks>
        </member>
        <member name="P:VkNet.Model.AudioAlbum.OwnerId">
            <summary>
            Идентификатор владельца альбома.
            </summary>
        </member>
        <member name="P:VkNet.Model.AudioAlbum.AlbumId">
            <summary>
            Идентификатор альбома.
            </summary>
        </member>
        <member name="P:VkNet.Model.AudioAlbum.Title">
            <summary>
            Название альбома.
            </summary>
        </member>
        <member name="M:VkNet.Model.AudioAlbum.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.BanInfo">
            <summary>
            Информация о забанненом (добавленном в черный список) пользователе сообщества.
            </summary>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/groups.getBanned"/>.
            </remarks>
        </member>
        <member name="P:VkNet.Model.BanInfo.AdminId">
            <summary>
            Идентификатор администратора, который добавил пользователя в черный список.
            </summary>
        </member>
        <member name="P:VkNet.Model.BanInfo.Date">
            <summary>
            Дата добавления пользователя в черный список.
            </summary>
        </member>
        <member name="P:VkNet.Model.BanInfo.Comment">
            <summary>
            Текст комментария к бану.
            </summary>
        </member>
        <member name="P:VkNet.Model.BanInfo.EndDate">
            <summary>
            Дата, когда пользователь будет разбанен.
            </summary>
        </member>
        <member name="P:VkNet.Model.BanInfo.Reason">
            <summary>
            Причина добавления пользователя в черный список.
            </summary>
        </member>
        <member name="M:VkNet.Model.BanInfo.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.ChangeNameRequest">
            <summary>
            Информация о заявке на смену имени.
            </summary>
        </member>
        <member name="P:VkNet.Model.ChangeNameRequest.Id">
            <summary>
            Идентификатор заявки, необходимый для её отмены (только если <see cref="P:VkNet.Model.ChangeNameRequest.Status"/> равен <see cref="F:VkNet.Enums.ChangeNameStatus.Processing"/>)
            </summary>
        </member>
        <member name="P:VkNet.Model.ChangeNameRequest.Status">
            <summary>
            Статус заявки
            </summary>
        </member>
        <member name="P:VkNet.Model.ChangeNameRequest.RepeatDate">
            <summary>
            Дата, после которой возможна повторная подача заявки.
            </summary>
        </member>
        <member name="P:VkNet.Model.ChangeNameRequest.FirstName">
            <summary>
            Имя пользователя, указанное в заявке
            </summary>
        </member>
        <member name="P:VkNet.Model.ChangeNameRequest.LastName">
            <summary>
            Фамилия пользователя, указанная в заявке.
            </summary>
        </member>
        <member name="M:VkNet.Model.ChangeNameRequest.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.City">
            <summary>
            Город.
            </summary>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/database.getCities"/>.
            </remarks>
        </member>
        <member name="P:VkNet.Model.City.Id">
            <summary>
            Идентификатор города.
            </summary>
        </member>
        <member name="P:VkNet.Model.City.Title">
            <summary>
            Название города.
            </summary>
        </member>
        <member name="P:VkNet.Model.City.Area">
            <summary>
            Район.
            </summary>
        </member>
        <member name="P:VkNet.Model.City.Region">
            <summary>
            Область.
            </summary>
        </member>
        <member name="P:VkNet.Model.City.Important">
            <summary>
            Является ли город основным.
            </summary>
        </member>
        <member name="M:VkNet.Model.City.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Connections">
            <summary>
            Информация о социальных контактах пользователя.
            См. описание <see href="http://vk.com/pages?oid=-1&amp;p=Описание_полей_параметра_fields"/>
            и <see href="http://vk.com/dev/fields"/>. Последняя страница обманывает насчет поля 'connections'.
            Экспериментально установлено, что поля находятся непосредственно в полях объекта User.
            </summary>
        </member>
        <member name="P:VkNet.Model.Connections.Skype">
            <summary>
            Логин в Skype.
            </summary>
        </member>
        <member name="P:VkNet.Model.Connections.FacebookId">
            <summary>
            Идентификатор акаунта в Facebook.
            </summary>
        </member>
        <member name="P:VkNet.Model.Connections.FacebookName">
            <summary>
            Имя и фамилия в facebook.
            </summary>
        </member>
        <member name="P:VkNet.Model.Connections.Twitter">
            <summary>
            Акаунт в twitter.
            </summary>
        </member>
        <member name="P:VkNet.Model.Connections.Instagram">
            <summary>
            Акаунт в Instagram.
            </summary>
        </member>
        <member name="M:VkNet.Model.Connections.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Contact">
            <summary>
            Контакты группы
            </summary>
        </member>
        <member name="P:VkNet.Model.Contact.UserId">
            <summary>
            Идентификатор пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.Contact.Description">
            <summary>
            Должность.
            </summary>
        </member>
        <member name="P:VkNet.Model.Contact.Email">
            <summary>
            Электронная почта.
            </summary>
        </member>
        <member name="P:VkNet.Model.Contact.Phone">
            <summary>
            Телефон.
            </summary>
        </member>
        <member name="M:VkNet.Model.Contact.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Country">
            <summary>
            Информация о стране.
            </summary>
        </member>
        <member name="P:VkNet.Model.Country.Id">
            <summary>
            Идентификатор страны.
            </summary>
        </member>
        <member name="P:VkNet.Model.Country.Title">
            <summary>
            Название страны.
            </summary>
        </member>
        <member name="M:VkNet.Model.Country.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.ExternalLink">
            <summary>
            Ссылки в группе
            </summary>
        </member>
        <member name="P:VkNet.Model.ExternalLink.Id">
            <summary>
            Идентификатор ссылки.
            </summary>
        </member>
        <member name="P:VkNet.Model.ExternalLink.Url">
            <summary>
            Адрес ссылки.
            </summary>
        </member>
        <member name="P:VkNet.Model.ExternalLink.Name">
            <summary>
            Название страницы, на которую ведет ссылка.
            </summary>
        </member>
        <member name="P:VkNet.Model.ExternalLink.Description">
            <summary>
            Описание.
            </summary>
        </member>
        <member name="P:VkNet.Model.ExternalLink.Photo50">
            <summary>
            Фото 50px.
            </summary>
        </member>
        <member name="P:VkNet.Model.ExternalLink.Photo100">
            <summary>
            Фото 100px.
            </summary>
        </member>
        <member name="M:VkNet.Model.ExternalLink.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Faculty">
            <summary>
            Факультет
            </summary>
        </member>
        <member name="P:VkNet.Model.Faculty.Id">
            <summary>
            Идентификатор факультета
            </summary>
        </member>
        <member name="P:VkNet.Model.Faculty.Title">
            <summary>
            Название факультета
            </summary>
        </member>
        <member name="M:VkNet.Model.Faculty.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.FriendList">
            <summary>
            Метка в списке друзей
            </summary>
        </member>
        <member name="P:VkNet.Model.FriendList.Id">
            <summary>
            Идентификатор метки
            </summary>
        </member>
        <member name="P:VkNet.Model.FriendList.Name">
            <summary>
            Название метки
            </summary>
        </member>
        <member name="M:VkNet.Model.FriendList.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.GiftItem">
            <summary>
            Подарок.
            </summary>
        </member>
        <member name="P:VkNet.Model.GiftItem.Id">
            <summary>
            Идентификатор полученного подарка.
            </summary>
        </member>
        <member name="P:VkNet.Model.GiftItem.FromId">
            <summary>
            Идентификатор пользователя, который отправил подарок, или 0, если отправитель скрыт.
            </summary>
        </member>
        <member name="P:VkNet.Model.GiftItem.Message">
            <summary>
            Текст сообщения, приложенного к подарку.
            </summary>
        </member>
        <member name="P:VkNet.Model.GiftItem.Date">
            <summary>
            Время отправки подарка в формате unixtime.
            </summary>
        </member>
        <member name="P:VkNet.Model.GiftItem.Gift">
            <summary>
            Подарок.
            </summary>
        </member>
        <member name="P:VkNet.Model.GiftItem.Privacy">
            <summary>
            Значение приватности подарка (только для текущего пользователя).
            </summary>
        </member>
        <member name="M:VkNet.Model.GiftItem.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.GroupInfo">
            <summary>
            Информация о сообществе (группе).
            См. описание <see href="http://vk.com/dev/fields_groups"/>.
            </summary>
        </member>
        <member name="P:VkNet.Model.GroupInfo.Title">
            <summary>
            Название сообщества.
            </summary>
        </member>
        <member name="P:VkNet.Model.GroupInfo.Description">
            <summary>
            Описание сообщества.
            </summary>
        </member>
        <member name="P:VkNet.Model.GroupInfo.Address">
            <summary>
            Gets or sets the address.
            </summary>
        </member>
        <member name="P:VkNet.Model.GroupInfo.Place">
            <summary>
            Место, указанное в информации о сообществе.
            </summary>
        </member>
        <member name="P:VkNet.Model.GroupInfo.Wall">
            <summary>
            Стена.
            </summary>
        </member>
        <member name="P:VkNet.Model.GroupInfo.Photos">
            <summary>
            Фотографии.
            </summary>
        </member>
        <member name="P:VkNet.Model.GroupInfo.Video">
            <summary>
            Видеозаписи.
            </summary>
        </member>
        <member name="P:VkNet.Model.GroupInfo.Audio">
            <summary>
            Аудиозаписи.
            </summary>
        </member>
        <member name="P:VkNet.Model.GroupInfo.Docs">
            <summary>
            Документы.
            </summary>
        </member>
        <member name="P:VkNet.Model.GroupInfo.Topics">
            <summary>
            Обсуждения.
            </summary>
        </member>
        <member name="P:VkNet.Model.GroupInfo.Wiki">
            <summary>
            Материалы.
            </summary>
        </member>
        <member name="P:VkNet.Model.GroupInfo.Access">
            <summary>
            Тип группы.
            </summary>
        </member>
        <member name="P:VkNet.Model.GroupInfo.Subject">
            <summary>
            Тематика сообщества.
            </summary>
        </member>
        <member name="P:VkNet.Model.GroupInfo.Website">
            <summary>
            Адрес сайта, который будет указан в информации о группе 
            </summary>
        </member>
        <member name="P:VkNet.Model.GroupInfo.Contacts">
            <summary>
            Контакты: (доступно только для публичных страниц).
            </summary>
        </member>
        <member name="P:VkNet.Model.GroupInfo.Places">
            <summary>
            Места: (доступно только для публичных страниц)
            </summary>
        </member>
        <member name="P:VkNet.Model.GroupInfo.Events">
            <summary>
            События: (доступно только для публичных страниц).
            </summary>
        </member>
        <member name="P:VkNet.Model.GroupInfo.Links">
            <summary>
            Ссылки: (доступно только для публичных страниц).
            </summary>
        </member>
        <member name="P:VkNet.Model.GroupInfo.PublicDate">
            <summary>
            Дата основания компании, организации, 
            которой посвящена публичная страница в виде строки формата "dd.mm.YYYY". 
            </summary>
        </member>
        <member name="P:VkNet.Model.GroupInfo.PublicSubcategory">
            <summary>
            Подкатегория публичной станицы.
            </summary>
        </member>
        <member name="P:VkNet.Model.GroupInfo.PublicCategory">
            <summary>
            Категория публичной страницы.
            </summary>
        </member>
        <member name="P:VkNet.Model.GroupInfo.EventGroupId">
            <summary>
            Идентификатор группы, которая является организатором события (только для событий).
            </summary>
        </member>
        <member name="P:VkNet.Model.GroupInfo.EventFinishDate">
            <summary>
            Дата окончания события.
            </summary>
        </member>
        <member name="P:VkNet.Model.GroupInfo.EventStartDate">
            <summary>
            Дата начала события.
            </summary>
        </member>
        <member name="P:VkNet.Model.GroupInfo.Rss">
            <summary>
            Адрес rss для импорта новостей 
            (доступен только группам, получившим соответствуюшее разрешение, 
            обратитесь в http://vk.com/support для получения разрешения).
            </summary>
        </member>
        <member name="P:VkNet.Model.GroupInfo.Phone">
            <summary>
            Номер телефона сообщества.
            </summary>
        </member>
        <member name="P:VkNet.Model.GroupInfo.Email">
            <summary>
            Электронный адрес сообщества.
            </summary>
        </member>
        <member name="P:VkNet.Model.GroupInfo.ScreenName">
            <summary>
            Короткое имя сообщества. 
            </summary>
        </member>
        <member name="F:VkNet.Model.GroupInfo.Subjects">
            <summary>
            Список тематик
            </summary>
        </member>
        <member name="M:VkNet.Model.GroupInfo.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из JSON.
            </summary>
            <param name="response">Ответ от vk.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.GroupMember">
            <summary>
            Информация о сообществе (группе).
            См. описание <see href="http://vk.com/dev/fields_groups"/>.
            </summary>
        </member>
        <member name="P:VkNet.Model.GroupMember.UserId">
            <summary>
            Идентификатор сообщества.
            </summary>
        </member>
        <member name="P:VkNet.Model.GroupMember.Member">
            <summary>
            Является ли пользователь участником сообщества;
            </summary>
        </member>
        <member name="P:VkNet.Model.GroupMember.Request">
            <summary>
            Есть ли непринятая заявка от пользователя на вступление в группу (такую заявку можно отозвать методом groups.leave).
            </summary>
        </member>
        <member name="P:VkNet.Model.GroupMember.Invitation">
            <summary>
            Приглашён ли пользователь в группу или встречу.
            </summary>
        </member>
        <member name="M:VkNet.Model.GroupMember.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Десериализовать из Json.
            </summary>
            <param name="response">Jndtn.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.History">
            <summary>
            История изменения объекта
            </summary>
        </member>
        <member name="P:VkNet.Model.History.Id">
            <summary>
            Идентификатор.
            </summary>
        </member>
        <member name="P:VkNet.Model.History.Length">
            <summary>
            Длина символов.
            </summary>
            <remarks>
            При необходимости сделать nullable
            </remarks>
        </member>
        <member name="P:VkNet.Model.History.Date">
            <summary>
            Дата изменения.
            </summary>
        </member>
        <member name="P:VkNet.Model.History.EditorId">
            <summary>
            Идентификатор пользователя применившего изменения.
            </summary>
        </member>
        <member name="P:VkNet.Model.History.EditorName">
            <summary>
            Имя пользователя применившего изменения.
            </summary>
        </member>
        <member name="M:VkNet.Model.History.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.PhotoAlbum">
            <summary>
            Альбом для фотографий
            </summary>
        </member>
        <member name="P:VkNet.Model.PhotoAlbum.Id">
            <summary>
            Идентификатор созданного альбома
            </summary>
        </member>
        <member name="P:VkNet.Model.PhotoAlbum.ThumbId">
            <summary>
            Идентификатор фотографии, которая является обложкой альбома
            </summary>
        </member>
        <member name="P:VkNet.Model.PhotoAlbum.OwnerId">
            <summary>
            Идентификатор пользователя или сообщества, которому принадлежит альбом
            </summary>
        </member>
        <member name="P:VkNet.Model.PhotoAlbum.Title">
            <summary>
            Название альбома
            </summary>
        </member>
        <member name="P:VkNet.Model.PhotoAlbum.Description">
            <summary>
            Описание альбома
            </summary>
        </member>
        <member name="P:VkNet.Model.PhotoAlbum.Created">
            <summary>
            Дата создания альбома
            </summary>
        </member>
        <member name="P:VkNet.Model.PhotoAlbum.Updated">
            <summary>
            Дата обновления альбома
            </summary>
        </member>
        <member name="P:VkNet.Model.PhotoAlbum.Size">
            <summary>
            Количество фотографий в альбоме
            </summary>
        </member>
        <member name="P:VkNet.Model.PhotoAlbum.PrivacyView">
            <summary>
            Настройки приватности для альбома в формате настроек приватности; (не приходит для системных альбомов) 
            </summary>
        </member>
        <member name="P:VkNet.Model.PhotoAlbum.PrivacyComment">
            <summary>
            Настройки приватности для комментирования альбома
            </summary>
        </member>
        <member name="P:VkNet.Model.PhotoAlbum.CanUpload">
            <summary>
            Может ли текущий пользователь добавлять фотографии в альбом
            </summary>
        </member>
        <member name="P:VkNet.Model.PhotoAlbum.ThumbSrc">
            <summary>
            Адрес на изображение с предпросмотром
            </summary>
        </member>
        <member name="P:VkNet.Model.PhotoAlbum.Sizes">
            <summary>
            Размеры фотографий.
            </summary>
        </member>
        <member name="P:VkNet.Model.PhotoAlbum.CommentsDisabled">
            <summary>
            Комментирование запрещено.
            </summary>
        </member>
        <member name="P:VkNet.Model.PhotoAlbum.UploadByAdminsOnly">
            <summary>
            Загружать могут только администраторы.
            </summary>
        </member>
        <member name="P:VkNet.Model.PhotoAlbum.ThumbIsLast">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:VkNet.Model.PhotoAlbum"/> is thumb_is_last.
            </summary>
            <remarks>
            Получено экспериментально.
            </remarks>
        </member>
        <member name="M:VkNet.Model.PhotoAlbum.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.PollAnswer">
            <summary>
            Вариант ответа в опросе
            </summary>
        </member>
        <member name="P:VkNet.Model.PollAnswer.Id">
            <summary>
            Идентификатор варианта ответа
            </summary>
        </member>
        <member name="P:VkNet.Model.PollAnswer.Text">
            <summary>
            Текст ответа
            </summary>
        </member>
        <member name="P:VkNet.Model.PollAnswer.Votes">
            <summary>
            Кол-во проголосовавших
            </summary>
        </member>
        <member name="P:VkNet.Model.PollAnswer.Rate">
            <summary>
            Процент текущего ответа ко всем остальным вариантам
            </summary>
        </member>
        <member name="M:VkNet.Model.PollAnswer.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.PostSource">
            <summary>
            Информация информацию о том, каким образом (через интерфейс сайта, виджет и т.п.) была создана запись на стене.
            Используя данные из этого поля, разработчик может вывести уточняющую информацию о том, как была создана запись на стене
            в своем приложении.
            См. описание <see href="http://vk.com/dev/post_source"/>.
            </summary>
        </member>
        <member name="P:VkNet.Model.PostSource.Type">
            <summary>
            На данный момент поддерживаются следующие типы источников записи на стене.
            </summary>
        </member>
        <member name="P:VkNet.Model.PostSource.Data">
            <summary>
            Поле data является опциональным и содержит следующие данные в зависимости от значения поля type:
            </summary>
        </member>
        <member name="P:VkNet.Model.PostSource.Platform">
            <summary>
            Название платформы, если оно доступно: android, iphone, wphone.
            </summary>
        </member>
        <member name="P:VkNet.Model.PostSource.Url">
            <summary>
            Cодержит внешнюю ссылку на ресурс, с которого была опубликована запись.
            </summary>
        </member>
        <member name="M:VkNet.Model.PostSource.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Previews">
            <summary>
            Íàáîð Url ê êàðòèíêàì ñ ðàçëè÷íûì ðàçðåøåíèÿì.
            Èñïîëüçóåòñÿ â <see cref="T:VkNet.Model.User"/>, <see cref="T:VkNet.Model.Group"/> è <see cref="T:VkNet.Model.Message"/>.
            </summary>
        </member>
        <member name="P:VkNet.Model.Previews.Photo50">
            <summary>
            Url êâàäðàòíîé ôîòîãðàôèè, èìåþùåé øèðèíó 50 ïèêñåëåé.
            </summary>
        </member>
        <member name="P:VkNet.Model.Previews.Photo100">
            <summary>
            Url êâàäðàòíîé ôîòîãðàôèè, èìåþùåé øèðèíó 100 ïèêñåëåé.
            </summary>
        </member>
        <member name="P:VkNet.Model.Previews.Photo130">
            <summary>
            Url êâàäðàòíîé ôîòîãðàôèè, èìåþùåé øèðèíó 130 ïèêñåëåé.
            </summary>
        </member>
        <member name="P:VkNet.Model.Previews.Photo200">
            <summary>
            Url êâàäðàòíîé ôîòîãðàôèè, èìåþùåé øèðèíó 200 ïèêñåëåé.
            </summary>
        </member>
        <member name="P:VkNet.Model.Previews.Photo400">
            <summary>
            Url êâàäðàòíîé ôîòîãðàôèè, èìåþùåé øèðèíó 400 ïèêñåëåé.
            </summary>
        </member>
        <member name="P:VkNet.Model.Previews.PhotoMax">
            <summary>
            Url êâàäðàòíîé ôîòîãðàôèè, èìåþùåé ìàêñèìàëüíóþ øèðèíó.
            </summary>
        </member>
        <member name="P:VkNet.Model.Previews.Photo">
            <summary>
            Gets or sets the photo.
            </summary>
        </member>
        <member name="M:VkNet.Model.Previews.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Ðàçîáðàòü èç json.
            </summary>
            <param name="response">Îòâåò ñåðâåðà.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Region">
            <summary>
            Регион
            </summary>
        </member>
        <member name="P:VkNet.Model.Region.Id">
            <summary>
            Идентификатор региона
            </summary>
        </member>
        <member name="P:VkNet.Model.Region.Title">
            <summary>
            Название региона
            </summary>
        </member>
        <member name="M:VkNet.Model.Region.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Relative">
            <summary>
            Информация о родственнике.
            См. описание <see href="http://vk.com/dev/fields"/>. Раздел relatives.
            </summary>
        </member>
        <member name="P:VkNet.Model.Relative.Id">
            <summary>
            Идентификатор родственника.
            </summary>
        </member>
        <member name="P:VkNet.Model.Relative.Type">
            <summary>
            Тип родственника (sibling и т.п.)
            </summary>
        </member>
        <member name="P:VkNet.Model.Relative.Name">
            <summary>
            Имя родственника, если он не является пользователем ВКонтакте.
            </summary>
        </member>
        <member name="M:VkNet.Model.Relative.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.RepostResult">
            <summary>
            Ðåçóëüòàò êîïèðîâàíèÿ çàïèñè íà ñòåíó è èíôîðìàöèÿ î íåé.
            </summary>
        </member>
        <member name="P:VkNet.Model.RepostResult.Success">
            <summary>
            Ðåçóëüòàò êîïèðîâàíèÿ
            </summary>
        </member>
        <member name="P:VkNet.Model.RepostResult.PostId">
            <summary>
            Èäåíòèôèêàòîð ñîçäàííîé çàïèñè
            </summary>
        </member>
        <member name="P:VkNet.Model.RepostResult.RepostsCount">
            <summary>
            ×èñëî êîïèðîâàíèé èñõîäíîé çàïèñè ñ ó÷åòîì îñóùåñòâëåííîãî
            </summary>
        </member>
        <member name="P:VkNet.Model.RepostResult.LikesCount">
            <summary>
            ×èñëî îòìåòîê "Ìíå íðàâèòñÿ" ó èñõîäíîé çàïèñè
            </summary>
        </member>
        <member name="M:VkNet.Model.RepostResult.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Ðàçîáðàòü èç json.
            </summary>
            <param name="response">Îòâåò ñåðâåðà.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.School">
            <summary>
            Школа, в которой учился пользователь.
            См. описание <see href="http://vk.com/dev/fields"/>. Раздел schools.
            </summary>
        </member>
        <member name="P:VkNet.Model.School.Id">
            <summary>
            Идентификатор школы.
            </summary>
        </member>
        <member name="P:VkNet.Model.School.Country">
            <summary>
            Идентификатор страны, в которой расположена школа.
            </summary>
        </member>
        <member name="P:VkNet.Model.School.City">
            <summary>
            Идентификатор города, в котором расположена школа.
            </summary>
        </member>
        <member name="P:VkNet.Model.School.Name">
            <summary>
            Наименование школы.
            </summary>
        </member>
        <member name="P:VkNet.Model.School.YearFrom">
            <summary>
            Год начала обучения.
            </summary>
        </member>
        <member name="P:VkNet.Model.School.YearTo">
            <summary>
            Год окончания обучения.
            </summary>
        </member>
        <member name="P:VkNet.Model.School.YearGraduated">
            <summary>
            Год выпуска.
            </summary>
        </member>
        <member name="P:VkNet.Model.School.Class">
            <summary>
            Буква класса.
            </summary>
        </member>
        <member name="P:VkNet.Model.School.Speciality">
            <summary>
            Специализация класса.
            </summary>
        </member>
        <member name="P:VkNet.Model.School.Type">
            <summary>
            Идентификатор типа школы.
            </summary>
        </member>
        <member name="P:VkNet.Model.School.TypeStr">
            <summary>
            Название типа школы.
            </summary>
        </member>
        <member name="M:VkNet.Model.School.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.StandInLife">
            <summary>
            Жизненная позиция (Personal).
            Данная информация не документирована в официальном API ВКонтакте и восстановлена по ответам.
            </summary>
        </member>
        <member name="P:VkNet.Model.StandInLife.Political">
            <summary>
            Политические предпочтения пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.StandInLife.Languages">
            <summary>
            Языки, на которых говорит пользователь.
            </summary>
        </member>
        <member name="P:VkNet.Model.StandInLife.Religion">
            <summary>
            Мировоззрение пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.StandInLife.InspiredBy">
            <summary>
            Источники вдохновения пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.StandInLife.PeopleMain">
            <summary>
            Главное в людях для пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.StandInLife.LifeMain">
            <summary>
            Главное в жизни для пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.StandInLife.Smoking">
            <summary>
            Отношение к курению.
            </summary>
        </member>
        <member name="P:VkNet.Model.StandInLife.Alcohol">
            <summary>
            Отношение к алкоголю.
            </summary>
        </member>
        <member name="M:VkNet.Model.StandInLife.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.StatsPeriod">
            <summary>
            Статистика сообщества или приложения.
            </summary>
        </member>
        <member name="P:VkNet.Model.StatsPeriod.Day">
            <summary>
            День в формате YYYY-MM-DD.
            </summary>
        </member>
        <member name="P:VkNet.Model.StatsPeriod.Views">
            <summary>
            Количество просмотров.
            </summary>
        </member>
        <member name="P:VkNet.Model.StatsPeriod.Visitors">
            <summary>
            Количество уникальных посетителей.
            </summary>
        </member>
        <member name="P:VkNet.Model.StatsPeriod.Reach">
            <summary>
            Полный охват.
            </summary>
        </member>
        <member name="P:VkNet.Model.StatsPeriod.ReachSubscribers">
            <summary>
            Охват подписчиков.
            </summary>
        </member>
        <member name="P:VkNet.Model.StatsPeriod.Subscribed">
            <summary>
            Число новых подписчиков.
            </summary>
        </member>
        <member name="P:VkNet.Model.StatsPeriod.Unsubscribed">
            <summary>
            Число отписавшихся.
            </summary>
        </member>
        <member name="P:VkNet.Model.StatsPeriod.Sex">
            <summary>
            Список структур, описывающих статистику по полу.
            </summary>
        </member>
        <member name="P:VkNet.Model.StatsPeriod.Age">
            <summary>
            Список структур, описывающих статистику по возрасту.
            </summary>
        </member>
        <member name="P:VkNet.Model.StatsPeriod.SexAge">
            <summary>
            Список структур, описывающих статистику по полу и возрасту.
            </summary>
        </member>
        <member name="P:VkNet.Model.StatsPeriod.Cities">
            <summary>
            Список структур, описывающих статистику по городам.
            </summary>
        </member>
        <member name="P:VkNet.Model.StatsPeriod.Countries">
            <summary>
            Список структур, описывающих статистику по странам.
            </summary>
        </member>
        <member name="M:VkNet.Model.StatsPeriod.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.StatsStruct">
            <summary>
            Структура статистики
            </summary>
        </member>
        <member name="P:VkNet.Model.StatsStruct.Visitors">
            <summary>
            Аудитория для показателя value;.
            </summary>
        </member>
        <member name="P:VkNet.Model.StatsStruct.Value">
            <summary>
            Значение демографического показателя, имеет разные возможные значения для разных показателей.
            </summary>
        </member>
        <member name="P:VkNet.Model.StatsStruct.Code">
            <summary>
            Код страны.
            </summary>
        </member>
        <member name="P:VkNet.Model.StatsStruct.Name">
            <summary>
            Наглядное название значения указанного в value (только для городов).
            </summary>
        </member>
        <member name="M:VkNet.Model.StatsStruct.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Store">
            <summary>
            Магазин.
            </summary>
        </member>
        <member name="P:VkNet.Model.Store.Id">
            <summary>
            Идентификатор магазина;.
            </summary>
        </member>
        <member name="P:VkNet.Model.Store.Name">
            <summary>
            Название магазина;.
            </summary>
        </member>
        <member name="M:VkNet.Model.Store.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Street">
            <summary>
            Улица
            </summary>
        </member>
        <member name="P:VkNet.Model.Street.Id">
            <summary>
            Идентификатор улицы
            </summary>
        </member>
        <member name="P:VkNet.Model.Street.Title">
            <summary>
            Название улицы
            </summary>
        </member>
        <member name="M:VkNet.Model.Street.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Tag">
            <summary>
            Îòìåòêà ê âèäåîçàïèñè.
            </summary>
        </member>
        <member name="P:VkNet.Model.Tag.Id">
            <summary>
            Èäåíòèôèêàòîð îòìåòêè.
            </summary>
        </member>
        <member name="P:VkNet.Model.Tag.TaggedName">
            <summary>
            Íàçâàíèå îòìåòêè.
            </summary>
        </member>
        <member name="P:VkNet.Model.Tag.UserId">
            <summary>
            Èäåíòèôèêàòîð ïîëüçîâàòåëÿ, êîòîðîìó ñîîòâåòñòâóåò îòìåòêà.
            </summary>
        </member>
        <member name="P:VkNet.Model.Tag.PlacerId">
            <summary>
            Èäåíòèôèêàòîð ïîëüçîâàòåëÿ, ñäåëàâøåãî îòìåòêó.
            </summary>
        </member>
        <member name="P:VkNet.Model.Tag.Date">
            <summary>
            Äàòà äîáàâëåíèÿ îòìåòêè.
            </summary>
        </member>
        <member name="P:VkNet.Model.Tag.IsViewed">
            <summary>
            Ñòàòóñ îòìåòêè: true - ïîäòâåðæäåííàÿ, false - íå ïîäòâåðæäåííàÿ.
            </summary>
        </member>
        <member name="P:VkNet.Model.Tag.X">
            <summary>
            Êîîðäèíàòû ïðÿìîóãîëüíîé îáëàñòè, íà êîòîðîé ñäåëàíà îòìåòêà (âåðõíèé ëåâûé óãîë è íèæíèé ïðàâûé óãîë) â ïðîöåíòàõ.
            </summary>
        </member>
        <member name="P:VkNet.Model.Tag.Y">
            <summary>
            Êîîðäèíàòû ïðÿìîóãîëüíîé îáëàñòè, íà êîòîðîé ñäåëàíà îòìåòêà (âåðõíèé ëåâûé óãîë è íèæíèé ïðàâûé óãîë) â ïðîöåíòàõ.
            </summary>
        </member>
        <member name="P:VkNet.Model.Tag.X2">
            <summary>
            Êîîðäèíàòû ïðÿìîóãîëüíîé îáëàñòè, íà êîòîðîé ñäåëàíà îòìåòêà (âåðõíèé ëåâûé óãîë è íèæíèé ïðàâûé óãîë) â ïðîöåíòàõ.
            </summary>
        </member>
        <member name="P:VkNet.Model.Tag.Y2">
            <summary>
            Êîîðäèíàòû ïðÿìîóãîëüíîé îáëàñòè, íà êîòîðîé ñäåëàíà îòìåòêà (âåðõíèé ëåâûé óãîë è íèæíèé ïðàâûé óãîë) â ïðîöåíòàõ.
            </summary>
        </member>
        <member name="M:VkNet.Model.Tag.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Ðàçîáðàòü èç json.
            </summary>
            <param name="tag">Îòâåò ñåðâåðà.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Tags">
            <summary>
            Теги.
            </summary>
        </member>
        <member name="P:VkNet.Model.Tags.Count">
            <summary>
            Количество.
            </summary>
        </member>
        <member name="M:VkNet.Model.Tags.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.University">
            <summary>
            Высшее учебное заведение, в котором учился пользователь.
            См. описание <see href="http://vk.com/dev/fields"/>. Раздел universities.
            </summary>
        </member>
        <member name="P:VkNet.Model.University.Id">
            <summary>
            Идентификатор университета.
            </summary>
        </member>
        <member name="P:VkNet.Model.University.Country">
            <summary>
            Идентификатор страны, в которой расположен университет.
            </summary>
        </member>
        <member name="P:VkNet.Model.University.City">
            <summary>
            Идентификатор города, в котором расположен университет.
            </summary>
        </member>
        <member name="P:VkNet.Model.University.Name">
            <summary>
            Наименование университета.
            </summary>
        </member>
        <member name="P:VkNet.Model.University.Faculty">
            <summary>
            Идентификатор факультета.
            </summary>
        </member>
        <member name="P:VkNet.Model.University.FacultyName">
            <summary>
            Название факультета.
            </summary>
        </member>
        <member name="P:VkNet.Model.University.Chair">
            <summary>
            Идентификатор кафедры.
            </summary>
        </member>
        <member name="P:VkNet.Model.University.ChairName">
            <summary>
            Наименование кафедры.
            </summary>
        </member>
        <member name="P:VkNet.Model.University.Graduation">
            <summary>
            Год окончания обучения.
            </summary>
        </member>
        <member name="P:VkNet.Model.University.EducationForm">
            <summary>
            Форма обучения.
            </summary>
        </member>
        <member name="P:VkNet.Model.University.EducationStatus">
            <summary>
            Статус пользователя в университете.
            </summary>
        </member>
        <member name="M:VkNet.Model.University.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.UploadServerInfo">
            <summary>
            Адрес сервера для загрузки фотографий
            </summary>
        </member>
        <member name="P:VkNet.Model.UploadServerInfo.UploadUrl">
            <summary>
            Адрес для загрузки фотографий
            </summary>
        </member>
        <member name="P:VkNet.Model.UploadServerInfo.AlbumId">
            <summary>
            Идентификатор альбома, в который будет загружена фотография
            </summary>
        </member>
        <member name="P:VkNet.Model.UploadServerInfo.UserId">
            <summary>
            Идентификатор пользователя, от чьего имени будет загружено фото
            </summary>
        </member>
        <member name="M:VkNet.Model.UploadServerInfo.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.UserOrGroup">
            <summary>
            Расширенная информация о пользователях или сообществах.
            </summary>
        </member>
        <member name="P:VkNet.Model.UserOrGroup.Users">
            <summary>
            Список пользователей.
            </summary>
        </member>
        <member name="P:VkNet.Model.UserOrGroup.Groups">
            <summary>
            Список групп.
            </summary>
        </member>
        <member name="M:VkNet.Model.UserOrGroup.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
            <exception cref="T:System.Exception">"Типа '{0}' не существует. Пожалуйста заведите задачу на сайте проекта: https://github.com/vknet/vk/issues"</exception>
        </member>
        <member name="T:VkNet.Model.VideoAlbum">
            <summary>
            Видеоальбом.
            </summary>
            <remarks>
            Страница документации ВКонтакте <see href="http://vk.com/dev/video.getAlbums"/>.
            </remarks>
        </member>
        <member name="P:VkNet.Model.VideoAlbum.Id">
            <summary>
            Идентификатор альбома.
            </summary>
        </member>
        <member name="P:VkNet.Model.VideoAlbum.OwnerId">
            <summary>
            Идентификатор владельца альбома.
            </summary>
        </member>
        <member name="P:VkNet.Model.VideoAlbum.Title">
            <summary>
            Название альбома.
            </summary>
        </member>
        <member name="P:VkNet.Model.VideoAlbum.Count">
            <summary>
            Количество видеозаписей в альбоме.
            </summary>
        </member>
        <member name="P:VkNet.Model.VideoAlbum.Photo160">
            <summary>
            URL изображения предпросмотра альбома шириной в 160 пикселов.
            </summary>
        </member>
        <member name="P:VkNet.Model.VideoAlbum.Photo320">
            <summary>
            URL изображения предпросмотра альбома шириной в 320 пикселов.
            </summary>
        </member>
        <member name="M:VkNet.Model.VideoAlbum.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.VideoCatalog">
            <summary>
            Данные для отображения блока видеокаталога
            </summary>
        </member>
        <member name="P:VkNet.Model.VideoCatalog.Id">
            <summary>
            Идентификатор блока. Возвращается строка для предопределенных блоков. Для других возвращается число.
            </summary>
        </member>
        <member name="P:VkNet.Model.VideoCatalog.Name">
            <summary>
            Заголовок блока.
            </summary>
        </member>
        <member name="P:VkNet.Model.VideoCatalog.CanHide">
            <summary>
            Наличие возможности скрыть блок.
            </summary>
        </member>
        <member name="P:VkNet.Model.VideoCatalog.Type">
            <summary>
            Тип блока.
            </summary>
        </member>
        <member name="P:VkNet.Model.VideoCatalog.Items">
            <summary>
            Список элементов блока видеокаталога
            </summary>
        </member>
        <member name="P:VkNet.Model.VideoCatalog.Next">
            <summary>
            Параметр для получения следующей страницы результатов. Необходимо передать его значение в from в следующем вызове, чтобы получить содержимое каталога, следующее за полученным в текущем вызове. 
            </summary>
        </member>
        <member name="M:VkNet.Model.VideoCatalog.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.VideoCatalogItem">
            <summary>
            Ýëåìåíò áëîêà âèäåîêàòàëîãà
            </summary>
        </member>
        <member name="P:VkNet.Model.VideoCatalogItem.Id">
            <summary>
            èäåíòèôèêàòîð ýëåìåíòà. ïîëîæèòåëüíîå ÷èñëî.
            </summary>
        </member>
        <member name="P:VkNet.Model.VideoCatalogItem.OwnerId">
            <summary>
            èäåíòèôèêàòîð âëàäåëüöà ýëåìåíòà. int (÷èñëîâîå çíà÷åíèå).
            </summary>
        </member>
        <member name="P:VkNet.Model.VideoCatalogItem.Title">
            <summary>
            çàãîëîâîê. ñòðîêà.
            </summary>
        </member>
        <member name="P:VkNet.Model.VideoCatalogItem.Type">
            <summary>
            òèï ýëåìåíòà. Ìîæåò ïðèíèìàòü çíà÷åíèÿ: video — âèäåîðîëèê; album — àëüáîì. ñòðîêà.
            </summary>
        </member>
        <member name="P:VkNet.Model.VideoCatalogItem.Duration">
            <summary>
            äëèòåëüíîñòü â ñåêóíäàõ. ïîëîæèòåëüíîå ÷èñëî.
            </summary>
        </member>
        <member name="P:VkNet.Model.VideoCatalogItem.Description">
            <summary>
            îïèñàíèå. ñòðîêà.
            </summary>
        </member>
        <member name="P:VkNet.Model.VideoCatalogItem.Date">
            <summary>
            äàòà äîáàâëåíèÿ. ïîëîæèòåëüíîå ÷èñëî.
            </summary>
        </member>
        <member name="P:VkNet.Model.VideoCatalogItem.Views">
            <summary>
            ÷èñëî ïðîñìîòðîâ. ïîëîæèòåëüíîå ÷èñëî.
            </summary>
        </member>
        <member name="P:VkNet.Model.VideoCatalogItem.Comments">
            <summary>
            ÷èñëî êîììåíòàðèåâ. ïîëîæèòåëüíîå ÷èñëî.
            </summary>
        </member>
        <member name="P:VkNet.Model.VideoCatalogItem.Photo130">
            <summary>
            URL èçîáðàæåíèÿ-îáëîæêè âèäåî ñ ðàçìåðîì 130x98px.ñòðîêà.
            </summary>
        </member>
        <member name="P:VkNet.Model.VideoCatalogItem.Photo320">
            <summary>
            URL èçîáðàæåíèÿ-îáëîæêè âèäåî ñ ðàçìåðîì 320x240px. ñòðîêà.
            </summary>
        </member>
        <member name="P:VkNet.Model.VideoCatalogItem.Photo640">
            <summary>
            URL èçîáðàæåíèÿ-îáëîæêè âèäåî ñ ðàçìåðîì 640x480px (åñëè ðàçìåð åñòü). ñòðîêà.
            </summary>
        </member>
        <member name="P:VkNet.Model.VideoCatalogItem.CanAdd">
            <summary>
            íàëè÷èå âîçìîæíîñòè äîáàâèòü âèäåî â ñâîé ñïèñîê. ôëàã, ìîæåò ïðèíèìàòü çíà÷åíèÿ 1 èëè 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.VideoCatalogItem.CanEdit">
            <summary>
            íàëè÷èå âîçìîæíîñòè ðåäàêòèðîâàòü âèäåî. ôëàã, ìîæåò ïðèíèìàòü çíà÷åíèÿ 1 èëè 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.VideoCatalogItem.Count">
            <summary>
            ÷èñëî âèäåîçàïèñåé â àëüáîìå. ïîëîæèòåëüíîå ÷èñëî.
            </summary>
        </member>
        <member name="P:VkNet.Model.VideoCatalogItem.Photo160">
            <summary>
            URL èçîáðàæåíèÿ-îáëîæêè àëüáîìà ñ ðàçìåðîì 272x150px. ñòðîêà.
            </summary>
        </member>
        <member name="P:VkNet.Model.VideoCatalogItem.UpdatedTime">
            <summary>
            âðåìÿ ïîñëåäíåãî îáíîâëåíèÿ àëüáîìà. ïîëîæèòåëüíîå ÷èñëî.
            </summary>
        </member>
        <member name="M:VkNet.Model.VideoCatalogItem.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Ðàçîáðàòü èç json.
            </summary>
            <param name="response">Îòâåò ñåðâåðà.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.VkObject">
            <summary>
            Определяет тип объекта
            </summary>
        </member>
        <member name="P:VkNet.Model.VkObject.Id">
            <summary>
            Идентификатор объекта
            </summary>
        </member>
        <member name="P:VkNet.Model.VkObject.Type">
            <summary>
            Тип объекта
            </summary>
        </member>
        <member name="M:VkNet.Model.VkObject.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.FaveVideoEx">
            <summary>
            Расширеный объект видео для закладок
            </summary>
        </member>
        <member name="P:VkNet.Model.FaveVideoEx.Count">
            <summary>
            Общее количество записей на стене.
            </summary>
        </member>
        <member name="P:VkNet.Model.FaveVideoEx.Video">
            <summary>
            Видеозаписи.
            </summary>
        </member>
        <member name="P:VkNet.Model.FaveVideoEx.Profiles">
            <summary>
            Профили.
            </summary>
        </member>
        <member name="P:VkNet.Model.FaveVideoEx.Groups">
            <summary>
            Группы.
            </summary>
        </member>
        <member name="M:VkNet.Model.FaveVideoEx.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.WallGetObject">
            <summary>
            Результат выполнения запроса получения записей со стены
            </summary>
        </member>
        <member name="P:VkNet.Model.WallGetObject.TotalCount">
            <summary>
            Общее количество записей на стене.
            </summary>
        </member>
        <member name="P:VkNet.Model.WallGetObject.WallPosts">
            <summary>
            Посты.
            </summary>
        </member>
        <member name="P:VkNet.Model.WallGetObject.Profiles">
            <summary>
            Профили.
            </summary>
        </member>
        <member name="P:VkNet.Model.WallGetObject.Groups">
            <summary>
            Группы.
            </summary>
        </member>
        <member name="M:VkNet.Model.WallGetObject.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Coordinates">
            <summary>
            Координаты места, в котором была сделана запись.
            См. описание <see href="http://vk.com/pages?oid=-1&amp;p=Описание_поля_geo"/>.
            Официальная страница <see href="http://vk.com/dev/post"/>, описывающая запись на стене и объект Geo в нем, почему то
            молчит о том, что возвращаются географические координаты.
            </summary>
        </member>
        <member name="P:VkNet.Model.Coordinates.Latitude">
            <summary>
            Географическая широта.
            </summary>
        </member>
        <member name="P:VkNet.Model.Coordinates.Longitude">
            <summary>
            Географическая долгота.
            </summary>
        </member>
        <member name="M:VkNet.Model.Coordinates.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Comments">
            <summary>
            Информация о количестве комментариев к записи.
            См. описание <see href="http://vk.com/dev/post"/>. Раздел comments.
            </summary>
        </member>
        <member name="P:VkNet.Model.Comments.Count">
            <summary>
            Количество комментариев к записи.
            </summary>
        </member>
        <member name="P:VkNet.Model.Comments.CanPost">
            <summary>
            Признак может ли текущий пользователь добавить комментарий к записи.
            </summary>
        </member>
        <member name="M:VkNet.Model.Comments.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из JSON.
            </summary>
            <param name="response">Ответ от vk.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Counters">
            <summary>
            Количество различных объектов у пользователя.
            См. описание <see href="http://vk.com/dev/fields"/> и <see href="http://vk.com/pages?oid=-1&amp;p=Описание_полей_параметра_fields"/> и
            <see href="http://vk.com/dev/fields_groups"/>.
            Раздел counters.
            </summary>
        </member>
        <member name="P:VkNet.Model.Counters.Albums">
            <summary>
            Количество фотоальбомов.
            </summary>
        </member>
        <member name="P:VkNet.Model.Counters.Videos">
            <summary>
            Количество видеозаписей.
            </summary>
        </member>
        <member name="P:VkNet.Model.Counters.Audios">
            <summary>
            Количество аудиозаписей.
            </summary>
        </member>
        <member name="P:VkNet.Model.Counters.Photos">
            <summary>
            Количество фотографий.
            </summary>
        </member>
        <member name="P:VkNet.Model.Counters.Notes">
            <summary>
            Количество заметок.
            </summary>
        </member>
        <member name="P:VkNet.Model.Counters.Friends">
            <summary>
            Количество друзей.
            </summary>
        </member>
        <member name="P:VkNet.Model.Counters.Groups">
            <summary>
            Количество сообществ.
            </summary>
        </member>
        <member name="P:VkNet.Model.Counters.OnlineFriends">
            <summary>
            Количество друзей онлайн.
            </summary>
        </member>
        <member name="P:VkNet.Model.Counters.MutualFriends">
            <summary>
            Количество общих друзей.
            </summary>
        </member>
        <member name="P:VkNet.Model.Counters.UserVideos">
            <summary>
            Количество видеозаписей с пользователем.
            </summary>
        </member>
        <member name="P:VkNet.Model.Counters.Followers">
            <summary>
            Количество подписчиков.
            </summary>
        </member>
        <member name="P:VkNet.Model.Counters.UserPhotos">
            <summary>
            Количество фотографий с пользователем.
            </summary>
        </member>
        <member name="P:VkNet.Model.Counters.Subscriptions">
            <summary>
            Количество подписок (только пользователи).
            </summary>
        </member>
        <member name="P:VkNet.Model.Counters.TopicsCount">
            <summary>
            Количество тем обсуждений сообщества.
            </summary>
        </member>
        <member name="P:VkNet.Model.Counters.DocumentsCount">
            <summary>
            Количество документов.
            </summary>
        </member>
        <member name="P:VkNet.Model.Counters.Pages">
            <summary>
            Количество публичных страниц, на которые подписан пользователь.
            </summary>
        </member>
        <member name="P:VkNet.Model.Counters.Messages">
            <summary>
            Количество сообщений
            </summary>
        </member>
        <member name="P:VkNet.Model.Counters.Gifts">
            <summary>
            Количество подарков
            </summary>
        </member>
        <member name="P:VkNet.Model.Counters.Events">
            <summary>
            Количество событий
            </summary>
        </member>
        <member name="P:VkNet.Model.Counters.Notifications">
            <summary>
            Количество уведомлений
            </summary>
        </member>
        <member name="P:VkNet.Model.Counters.Sdk">
            <summary>
            SDK.
            </summary>
        </member>
        <member name="P:VkNet.Model.Counters.AppRequests">
            <summary>
            Запросов к приложению.
            </summary>
        </member>
        <member name="M:VkNet.Model.Counters.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Geo">
            <summary>
            Информация о географическом месте, в котором была сделана запись.
            См. описание <see href="http://vk.com/pages?oid=-1&amp;p=Описание_поля_geo"/>.
            </summary>
        </member>
        <member name="P:VkNet.Model.Geo.Type">
            <summary>
            Имя типа информации о географическом месте (в настоящий момент поддерживается единственный тип "place", это означает,
            что запись привязана к определенному географическому месту в базе мест.)
            </summary>
        </member>
        <member name="P:VkNet.Model.Geo.Coordinates">
            <summary>
            Координаты места, в котором была сделана запись.
            </summary>
        </member>
        <member name="P:VkNet.Model.Geo.Place">
            <summary>
            Информация о месте, в котором была сделана запись.
            </summary>
        </member>
        <member name="M:VkNet.Model.Geo.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Group">
            <summary>
            Информация о сообществе (группе).
            См. описание <see href="http://vk.com/dev/fields_groups"/>.
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.Id">
            <summary>
            Идентификатор сообщества.
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.Name">
            <summary>
            Название сообщества.
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.ScreenName">
            <summary>
            Короткий адрес страницы сообщества, например, apiclub. Если он не назначен, то 'club'+gid, например, club35828305.
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.IsClosed">
            <summary>
            Публичность группы.
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.IsAdmin">
            <summary>
            Признак яляется ли текущий пользователь руководителем сообщества.
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.AdminLevel">
            <summary>
            Уровень административных полномочий текущего пользователя в сообществе (действительно, если IsAdmin = true).
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.IsMember">
            <summary>
            Признак является ли текущий пользователь участником сообщества.
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.Type">
            <summary>
            Тип сообщества.
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.PhotoPreviews">
            <summary>
            Информация о ссылках на предпросмотр фотографий сообщества.
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.Deactivated">
            <summary>
            Возвращается в случае, если сообщество удалено или заблокировано
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.HasPhoto">
            <summary>
            Содержит фото.
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.Photo50">
            <summary>
            url фотографии сообщества с размером 50x50px
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.Photo100">
            <summary>
            url фотографии сообщества с размером 100x100px
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.Photo200">
            <summary>
            url фотографии сообщества с размером 200x200px
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.City">
            <summary>
            Город.
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.Country">
            <summary>
            Идентификатор страны, указанной в информации о сообществе. Возвращается идентификатор страны, который можно использовать для
            получения ее названия с помощью метода <see cref="M:VkNet.Categories.DatabaseCategory.GetCountriesById(System.Int32[])"/>. Если страна не указана, возвращается 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.Place">
            <summary>
            Место, указанное в информации о сообществе.
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.Description">
            <summary>
            Текст описания сообщества.
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.WikiPage">
            <summary>
            Название главной вики-страницы сообщества.
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.MembersCount">
            <summary>
            Количество участников сообщества.
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.Counters">
            <summary>
            Счетчики сообщества.
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.StartDate">
            <summary>
            Время начала встречи (возвращаются только для встреч).
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.EndDate">
            <summary>
            Время окончания встречи (возвращаются только для встреч).
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.CanPost">
            <summary>
            Информация о том, может ли текущий пользователь оставлять записи на стене сообщества (<c>true</c> - может, <c>false</c> - не может).
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.CanSeelAllPosts">
            <summary>
            Информация о том, разрешено видеть чужие записи на стене группы (<c>true</c> - разрешено, <c>false</c> - не разрешено).
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.CanUploadDocuments">
            <summary>
            Информация о том, может ли текущий пользователь загружать документы в группу (<c>true</c>, если пользователь может
            загружать документы, <c>false</c> – если не может).
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.CanCreateTopic">
            <summary>
            Информация о том, может ли текущий пользователь создать тему обсуждения в группе.
            (<c>true</c>, если пользователь может создать обсуждение, <c>false</c> – если не может).
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.Activity">
            <summary>
            Строка состояния публичной страницы. У групп возвращается строковое значение, открыта ли группа или нет,
            а у событий дата начала.
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.Status">
            <summary>
            Статус сообщества. Возвращается строка, содержащая текст статуса, расположенного на странице сообщества под его названием.
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.Contacts">
            <summary>
            Информация из блока контактов публичной страницы.
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.Links">
            <summary>
            Информация из блока ссылок сообщества.
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.FixedPostId">
            <summary>
            Идентификатор закрепленного поста сообщества. Сам пост можно получить, используя <see cref="M:VkNet.Categories.WallCategory.GetById(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Int64,System.Int64}})"/>,
            передав идентификатор в виде – {group_id}_{post_id}.
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.IsVerified">
            <summary>
            Возвращает информацию о том, является ли сообщество верифицированным.
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.Site">
            <summary>
            Адрес сайта из поля «веб-сайт» в описании сообщества.
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.InvitedBy">
            <summary>
            Идентификатор пользователя пригласившего в группу
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.IsFavorite">
            <summary>
            Возвращается 1, если сообщество находится в закладках у текущего пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.BanInfo">
            <summary>
            Информация о забанненом (добавленном в черный список) пользователе сообщества.
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.CanUploadVideo">
            <summary>
            Информация о том, может ли текущий пользователь загружать видеозаписи в группу.
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.MainAlbumId">
            <summary>
            Идентификатор основного альбома сообщества.
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.IsHiddenFromFeed">
            <summary>
            Возвращается 1, если сообщество скрыто в новостях у текущего пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.Group.MainSection">
            <summary>
            Информация о главной секции в сообществе
            </summary>
        </member>
        <member name="M:VkNet.Model.Group.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.LastActivity">
            <summary>
            Информация о последней активности пользователя.
            См. описание <see href="http://vk.com/dev/messages.getLastActivity"/>.
            </summary>
        </member>
        <member name="P:VkNet.Model.LastActivity.UserId">
            <summary>
            Идентификатор пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.LastActivity.IsOnline">
            <summary>
            Текущий статус пользователя (true - в сети, false - не в сети).
            </summary>
        </member>
        <member name="P:VkNet.Model.LastActivity.Time">
            <summary>
            Дата последней активности пользователя.
            </summary>
        </member>
        <member name="M:VkNet.Model.LastActivity.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Likes">
            <summary>
            Информация о лайках к записи.
            См. описание <see href="http://vk.com/dev/post"/>. Раздел likes.
            </summary>
        </member>
        <member name="P:VkNet.Model.Likes.Count">
            <summary>
            Число пользователей, которым понравилась запись.
            </summary>
        </member>
        <member name="P:VkNet.Model.Likes.UserLikes">
            <summary>
            Признак понравилась ли запись текущему пользователю.
            </summary>
        </member>
        <member name="P:VkNet.Model.Likes.CanLike">
            <summary>
            Признак может ли текущий пользователь поставить отметку "Мне нравится".
            </summary>
        </member>
        <member name="P:VkNet.Model.Likes.CanPublish">
            <summary>
            Признак может ли текущий пользователь сделать репост записи (опубликовать у себя запись).
            </summary>
        </member>
        <member name="M:VkNet.Model.Likes.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.LongPollServerResponse">
            <summary>
            Объект, с помощью которого можно подключиться к серверу быстрых сообщений для мгновенного
            получения приходящих сообщений и других событий.
            См. описание <see href="http://vk.com/dev/messages.getLongPollServer"/>.
            </summary>
        </member>
        <member name="P:VkNet.Model.LongPollServerResponse.Key">
            <summary>
            Ключ для подключения.
            </summary>
        </member>
        <member name="P:VkNet.Model.LongPollServerResponse.Server">
            <summary>
            Имя сервера быстрых сообщений.
            </summary>
        </member>
        <member name="P:VkNet.Model.LongPollServerResponse.Ts">
            <summary>
            Отметка времени.
            </summary>
        </member>
        <member name="P:VkNet.Model.LongPollServerResponse.Pts">
            <summary>
            Постоянное событие для работы с методом getLongPoolHistory
            </summary>
        </member>
        <member name="M:VkNet.Model.LongPollServerResponse.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Lyrics">
            <summary>
            Текст аудиозаписи.
            См. описание <see href="http://vk.com/dev/audio.getLyrics"/>.
            </summary>
        </member>
        <member name="P:VkNet.Model.Lyrics.Id">
            <summary>
            Идентификатор текста аудиозаписи.
            </summary>
        </member>
        <member name="P:VkNet.Model.Lyrics.Text">
            <summary>
            Тест аудиозаписи. В качестве переводов строк в тексте используется '\n'.
            </summary>
        </member>
        <member name="M:VkNet.Model.Lyrics.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Message">
            <summary>
            Личное сообщение пользователя.
            См. описание <see href="http://vk.com/dev/message"/>.
            </summary>
        </member>
        <member name="M:VkNet.Model.Message.#cctor">
            <summary>
            Подарок.
            </summary>
        </member>
        <member name="P:VkNet.Model.Message.UserId">
            <summary>
            Идентификатор автора сообщения (для исходящего сообщения — идентификатор получателя).
            </summary>
        </member>
        <member name="P:VkNet.Model.Message.Date">
            <summary>
            Дата отправки сообщения.
            </summary>
        </member>
        <member name="P:VkNet.Model.Message.ReadState">
            <summary>
            Статус сообщения (не возвращается для пересланных сообщений).
            </summary>
        </member>
        <member name="P:VkNet.Model.Message.Type">
            <summary>
            Тип сообщения (не возвращается для пересланных сообщений).
            </summary>
        </member>
        <member name="P:VkNet.Model.Message.Unread">
            <summary>
            Содержит количество непрочитанных сообщений в текущем диалоге (если это значение было возвращено, иначе 0)
            </summary>
        </member>
        <member name="P:VkNet.Model.Message.Title">
            <summary>
            Заголовок сообщения или беседы.
            </summary>
        </member>
        <member name="P:VkNet.Model.Message.Body">
            <summary>
            Текст сообщения.
            </summary>
        </member>
        <member name="P:VkNet.Model.Message.Attachments">
            <summary>
            Массив медиа-вложений (прикреплений).
            </summary>
        </member>
        <member name="P:VkNet.Model.Message.Geo">
            <summary>
            Гео данные.
            </summary>
        </member>
        <member name="P:VkNet.Model.Message.ForwardedMessages">
            <summary>
            Массив пересланных сообщений (если есть).
            </summary>
        </member>
        <member name="P:VkNet.Model.Message.ContainsEmojiSmiles">
            <summary>
            Содержатся ли в сообщении emoji-смайлы.
            </summary>
        </member>
        <member name="P:VkNet.Model.Message.IsImportant">
            <summary>
            Является ли сообщение важным.
            </summary>
        </member>
        <member name="P:VkNet.Model.Message.IsDeleted">
            <summary>
            Удалено ли сообщение.
            </summary>
        </member>
        <member name="P:VkNet.Model.Message.FromId">
            <summary>
            Идентификатор автора сообщения.
            </summary>
        </member>
        <member name="P:VkNet.Model.Message.ChatId">
            <summary>
            Идентификатор беседы.
            </summary>
        </member>
        <member name="P:VkNet.Model.Message.ChatActiveIds">
            <summary>
            Идентификаторы участников беседы.
            </summary>
        </member>
        <member name="P:VkNet.Model.Message.UsersCount">
            <summary>
            Количество участников беседы.
            </summary>
        </member>
        <member name="P:VkNet.Model.Message.AdminId">
            <summary>
            Идентификатор создателя беседы.
            </summary>
        </member>
        <member name="P:VkNet.Model.Message.PhotoPreviews">
            <summary>
            Информация о ссылках на предпросмотр фотографий беседы.
            </summary>
        </member>
        <member name="P:VkNet.Model.Message.PushSettings">
            <summary>
            Настройки уведомлений для беседы, если они есть. sound и disabled_until
            </summary>
        </member>
        <member name="P:VkNet.Model.Message.Action">
            <summary>
            поле передано, если это служебное сообщение
            </summary>
            <remarks>
            строка, может быть chat_photo_update или chat_photo_remove, а с версии 5.14 еще и chat_create, chat_title_update, chat_invite_user, chat_kick_user
            </remarks>
        </member>
        <member name="P:VkNet.Model.Message.ActionMid">
            <summary>
            Идентификатор пользователя (если больше 0) или email (если меньше 0), которого пригласили или исключили.
            </summary>
        </member>
        <member name="P:VkNet.Model.Message.ActionEmail">
            <summary>
            email, который пригласили или исключили.
            </summary>
        </member>
        <member name="P:VkNet.Model.Message.ActionText">
            <summary>
            Название беседы.
            </summary>
        </member>
        <member name="P:VkNet.Model.Message.Photo50">
            <summary>
            <c>Url</c> копии фотографии беседы шириной 50px.
            </summary>
        </member>
        <member name="P:VkNet.Model.Message.Photo100">
            <summary>
            <c>Url</c> копии фотографии беседы шириной 100px.
            </summary>
        </member>
        <member name="P:VkNet.Model.Message.Photo200">
            <summary>
            <c>Url</c> копии фотографии беседы шириной 200px.
            </summary>
        </member>
        <member name="P:VkNet.Model.Message.InRead">
            <summary>
            Идентификатор последнего прочитанного сообщения текущим пользователем
            </summary>
        </member>
        <member name="P:VkNet.Model.Message.OutRead">
            <summary>
            Идентификатор последнего прочитанного сообщения собеседником
            </summary>
        </member>
        <member name="T:VkNet.Model.SearchDialogsResponse">
            <summary>
            Ответ при поиске диалогов по строке поиска.
            См. описание <see href="http://vk.com/dev/messages.searchDialogs"/>.
            </summary>
        </member>
        <member name="P:VkNet.Model.SearchDialogsResponse.Users">
            <summary>
            Список найденных пользователей.
            </summary>
        </member>
        <member name="P:VkNet.Model.SearchDialogsResponse.Chats">
            <summary>
            Список найденных бесед.
            </summary>
        </member>
        <member name="P:VkNet.Model.SearchDialogsResponse.Groups">
            <summary>
            Список найденных сообществ.
            </summary>
        </member>
        <member name="M:VkNet.Model.SearchDialogsResponse.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Place">
            <summary>
            Информация о месте, в котором была сделана запись.
            См. описание <see href="http://vk.com/pages?oid=-1&amp;p=Описание_поля_geo"/> и <see href="http://vk.com/dev/fields_groups"/>. Раздел place.
            </summary>
        </member>
        <member name="P:VkNet.Model.Place.Id">
            <summary>
            Идентификатор места.
            </summary>
        </member>
        <member name="P:VkNet.Model.Place.Title">
            <summary>
            Название места.
            </summary>
        </member>
        <member name="P:VkNet.Model.Place.Latitude">
            <summary>
            Географическая широта, заданная в градусах (от -90 до 90).
            </summary>
        </member>
        <member name="P:VkNet.Model.Place.Longitude">
            <summary>
            Географическая долгота, заданная в градусах (от -90 до 90).
            </summary>
        </member>
        <member name="P:VkNet.Model.Place.TypeId">
            <summary>
            Идентификатор типа места, информацию о котором можно получить с помощью метода <see cref="!:DatabaseCategory.GetPlaceTypes"/> (пока не реализовано).
            </summary>
        </member>
        <member name="P:VkNet.Model.Place.CountryId">
            <summary>
            Идентификатор страны, название которой можно получить с помощью метода <see cref="M:VkNet.Categories.DatabaseCategory.GetCountriesById(System.Int32[])"/>.
            </summary>
        </member>
        <member name="P:VkNet.Model.Place.CityId">
            <summary>
            Идентификатор города, название которого можно получить с помощью метода <see cref="M:VkNet.Categories.DatabaseCategory.GetCitiesById(System.Int32[])"/>.
            </summary>
        </member>
        <member name="P:VkNet.Model.Place.Address">
            <summary>
            Строка с указанием адреса места в городе.
            </summary>
        </member>
        <member name="P:VkNet.Model.Place.ShowMap">
            <summary>
            Данный параметр указывается, если местоположение является прикреплённой картой.
            </summary>
        </member>
        <member name="P:VkNet.Model.Place.Country">
            <summary>
            Страна, в которой находится место.
            </summary>
        </member>
        <member name="P:VkNet.Model.Place.City">
            <summary>
            Город, в котором находится место.
            </summary>
        </member>
        <member name="M:VkNet.Model.Place.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Reposts">
            <summary>
            Информация о репостах записи.
            См. описание <see href="http://vk.com/dev/post"/>. Раздел reposts.
            </summary>
        </member>
        <member name="P:VkNet.Model.Reposts.Count">
            <summary>
            Число пользователей, скопировавших запись.
            </summary>
        </member>
        <member name="P:VkNet.Model.Reposts.UserReposted">
            <summary>
            Наличие репоста от текущего пользователя .
            </summary>
        </member>
        <member name="M:VkNet.Model.Reposts.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.User">
            <summary>
            Информация о пользователя.
            См. описание <see href="http://vk.com/dev/fields"/> и <see href="http://vk.com/pages?oid=-1&amp;p=users.get"/>.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.Id">
            <summary>
            Идентификатор пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.FirstName">
            <summary>
            Имя пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.LastName">
            <summary>
            Фамилия пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.Hidden">
            <summary>
            Возвращается при вызове без access_token, если пользователь установил настройку «Кому в интернете видна моя страница» — «Только пользователям ВКонтакте».
            Обратите внимание, в этом случае дополнительные поля fields не возвращаются.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.Sex">
            <summary>
            Пол пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.BirthDate">
            <summary>
            Дата рождения пользователя. Возвращается в формате DD.MM.YYYY или DD.MM (если год рождения скрыт).
            Если дата рождения скрыта целиком, поле отсутствует в ответе.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.City">
            <summary>
            Идентификатор города, указанного на странице пользователя в разделе «Контакты».
            Если город не указан, или основная информация страницы скрыта настройками приватности, то 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.Country">
            <summary>
            Идентификатор страны, указанной на странице пользователя в разделе «Контакты».
            Если страна не указана или основная информация страницы скрыта настройками приватности, то 0.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.PhotoPreviews">
            <summary>
            Информация о ссылках на предпросмотр фотографий пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.Online">
            <summary>
            Признак находится ли пользователь сейчас на сайте.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.FriendLists">
            <summary>
            Идентификаторы списков друзей, в которых состоит пользователь. Поле доступно только для метода
            <see cref="M:VkNet.Categories.FriendsCategory.Get(System.Int64,VkNet.Enums.Filters.ProfileFields,System.Nullable{System.Int32},System.Nullable{System.Int32},VkNet.Enums.SafetyEnums.FriendsOrder,VkNet.Enums.SafetyEnums.NameCase,System.Nullable{System.Int32})"/>. Получить информацию об идентификаторах и названиях списков друзей можно с
            помощью метода <see cref="M:VkNet.Categories.FriendsCategory.GetLists(System.Nullable{System.Int64},System.Nullable{System.Boolean})"/>. Если пользователь не состоит ни в одном списке друзей, данное
            поле принимает значение null.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.Domain">
            <summary>
            Короткий адрес страницы пользователя. Возвращается строка, содержащая короткий адрес страницы (возвращается только
            сам поддомен, например, andrew). Если он не назначен, то "id"+uid, например, id35828305.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.HasMobile">
            <summary>
            Информация о том, известен ли номер мобильного телефона пользователя (true - известен, false - не известен).
            </summary>
        </member>
        <member name="P:VkNet.Model.User.MobilePhone">
            <summary>
            Номер мобильного телефона (если нет записи или скрыт, то null).
            </summary>
        </member>
        <member name="P:VkNet.Model.User.HomePhone">
            <summary>
            Номер домашнего телефона (если нет записи или скрыт, то null).
            </summary>
        </member>
        <member name="P:VkNet.Model.User.Connections">
            <summary>
            Данные о подключенных сервисах пользователя, таких как: skype, facebook, twitter, instagram.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.Site">
            <summary>
            Возвращает указанный в профиле сайт пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.Education">
            <summary>
            Сведения об образовании пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.Universities">
            <summary>
            Список высших учебных заведений, в которых учился пользователь.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.Schools">
            <summary>
            Школы, в которых учился пользователь.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.CanPost">
            <summary>
            Признак разрешено ли оставлять записи на стене у пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.CanSeeAllPosts">
            <summary>
            Признак разрешено ли видеть чужие записи на стене пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.CanSeeAudio">
            <summary>
            Признак разрешено ли видеть чужие аудиозаписи на стене пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.CanWritePrivateMessage">
            <summary>
            Признак разрешено ли написание личных сообщений данному пользователю.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.Status">
            <summary>
            Строка со статусом пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.LastSeen">
            <summary>
            Время последнего посещения сайта.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.CommonCount">
            <summary>
            Общее количество друзей с текущим пользователем.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.Relation">
            <summary>
            Семейное положение.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.Relatives">
            <summary>
            Родственники пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.Counters">
            <summary>
            Различные счетчики пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.BanInfo">
            <summary>
            Информация о блокировке пользователя
            </summary>
        </member>
        <member name="P:VkNet.Model.User.IsDeactivated">
            <summary>
            Является ли пользователь заблокированным
            </summary>
        </member>
        <member name="P:VkNet.Model.User.DeactiveReason">
            <summary>
            Причина блокирования аккаунта
            </summary>
        </member>
        <member name="P:VkNet.Model.User.Deactivated">
            <summary>
            Причина блокирования аккаунта
            </summary>
        </member>
        <member name="P:VkNet.Model.User.Nickname">
            <summary>
            Прозвище (ник) пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.Timezone">
            <summary>
            Часовой пояс пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.Language">
            <summary>
            Идентификатор языка, установленный в настройках.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.OnlineMobile">
            <summary>
            Признак использует ли пользователь мобильное приложение либо мобильную версию сайта.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.OnlineApp">
            <summary>
            Если пользователь зашёл через приложение, то Id приложения иначе null.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.RelationPartner">
            <summary>
            Партнер в семейных отношениях.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.StandInLife">
            <summary>
            Жизненные интересы.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.Interests">
            <summary>
            Интересы пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.Music">
            <summary>
            Любимая музыка пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.Activities">
            <summary>
            Чем занимается пользователь.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.Movies">
            <summary>
            Любимые фильмы пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.Tv">
            <summary>
            Любимые телешоу пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.Books">
            <summary>
            Любимые книги пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.Games">
            <summary>
            Любимые игры пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.About">
            <summary>
            Информация пользователя о себе.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.Quotes">
            <summary>
            Избранные пользователем цитаты.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.InvitedBy">
            <summary>
            Идентификатор пользователя, пригласившего пользователя в беседу (для GetChatUsers).
            </summary>
        </member>
        <member name="P:VkNet.Model.User.ScreenName">
            <summary>
            Короткое имя (поддомен) страницы пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.MaidenName">
            <summary>
            Девичья фамилия (только для женского пола)
            </summary>
        </member>
        <member name="P:VkNet.Model.User.BirthdayVisibility">
            <summary>
            Видимость даты рождения.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.HomeTown">
            <summary>
            Родной город пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.ChangeNameRequest">
            <summary>
            Информация о заявке на смену имени.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.Contacts">
            <summary>
            Информация о телефонных номерах пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.BdateVisibility">
            <summary>
            Показывать дату?
            </summary>
        </member>
        <member name="P:VkNet.Model.User.PhotoId">
            <summary>
            id главной фотографии профиля пользователя в формате user_id+photo_id, например, 6492_192164258. В некоторых случаях (если фотография была установлена очень давно) это поле не возвращается.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.Verified">
            <summary>
            Возвращается 1, если страница пользователя верифицирована, 0 — если не верифицирована.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.HasPhoto">
            <summary>
            Возвращается 1, если текущий пользователь установил фотографию для профиля.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.Photo50">
            <summary>
            url квадратной фотографии пользователя, имеющей ширину 50 пикселей. В случае отсутствия у пользователя фотографии возвращается http://vk.com/images/camera_c.gif
            </summary>
        </member>
        <member name="P:VkNet.Model.User.Photo100">
            <summary>
            url квадратной фотографии пользователя, имеющей ширину 100 пикселей. В случае отсутствия у пользователя фотографии возвращается http://vk.com/images/camera_b.gif.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.Photo200Orig">
            <summary>
            url фотографии пользователя, имеющей ширину 200 пикселей. В случае отсутствия у пользователя фотографии возвращается http://vk.com/images/camera_a.gif.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.Photo200">
            <summary>
            url квадратной фотографии пользователя, имеющей ширину 200 пикселей. Если фотография была загружена давно, изображения с такими размерами может не быть, в этом случае ответ не будет содержать этого поля.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.Photo400Orig">
            <summary>
            url фотографии пользователя, имеющей ширину 400 пикселей. Если у пользователя отсутствует фотография такого размера, ответ не будет содержать этого поля.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.PhotoMax">
            <summary>
            url квадратной фотографии пользователя с максимальной шириной. Может быть возвращена фотография, имеющая ширину как 200, так и 100 пикселей. В случае отсутствия у пользователя фотографии возвращается http://vk.com/images/camera_b.gif.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.PhotoMaxOrig">
            <summary>
            url фотографии пользователя максимального размера. Может быть возвращена фотография, имеющая ширину как 400, так и 200 пикселей. В случае отсутствия у пользователя фотографии возвращается http://vk.com/images/camera_a.gif.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.FollowersCount">
            <summary>
            Количество подписчиков пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.Occupation">
            <summary>
            Информация о текущем роде занятия пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.Exports">
            <summary>
            Внешние сервисы, в которые настроен экспорт из ВК.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.WallComments">
            <summary>
            Доступно ли комментирование стены (1 — доступно, 0 — недоступно).
            </summary>
        </member>
        <member name="P:VkNet.Model.User.CanSendFriendRequest">
            <summary>
            Информация о том, будет ли отправлено уведомление пользователю о заявке в друзья.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.IsFavorite">
            <summary>
            Возвращается 1, если пользователь находится в закладках у текущего пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.IsHiddenFromFeed">
            <summary>
            Возвращается 1, если пользователь скрыт в новостях у текущего пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.CropPhoto">
            <summary>
            Возвращает данные о точках, по которым вырезаны профильная и миниатюрная фотографии пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.IsFriend">
            <summary>
            1 – пользователь друг, 2 – пользователь не в друзьях.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.FriendStatus">
            <summary>
            Состояние дружбы с пользователями.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.Career">
            <summary>
            Информация о карьере пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.Military">
            <summary>
            Информация о военной службе пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.Blacklisted">
            <summary>
            Возвращается 1, если текущий пользователь находится в черном списке у запрашиваемого пользователя.
            </summary>
        </member>
        <member name="P:VkNet.Model.User.BlacklistedByMe">
            <summary>
            Возвращается 1, если запрашиваемый пользователь находится в черном списке у текущего пользователя.
            </summary>
        </member>
        <member name="T:VkNet.Model.Education">
            <summary>
            Информация о высшем учебном заведении пользователя.
            См. описание <see href="http://vk.com/dev/fields"/>. Раздел education.
            </summary>
        </member>
        <member name="P:VkNet.Model.Education.UniversityId">
            <summary>
            Идентификатор университета.
            </summary>
        </member>
        <member name="P:VkNet.Model.Education.UniversityName">
            <summary>
            Название ВУЗа.
            </summary>
        </member>
        <member name="P:VkNet.Model.Education.FacultyId">
            <summary>
            Идентификатор факультета.
            </summary>
        </member>
        <member name="P:VkNet.Model.Education.FacultyName">
            <summary>
            Название факультета.
            </summary>
        </member>
        <member name="P:VkNet.Model.Education.Graduation">
            <summary>
            Год окончания.
            </summary>
        </member>
        <member name="P:VkNet.Model.Education.EducationForm">
            <summary>
            Форма обучения.
            </summary>
        </member>
        <member name="P:VkNet.Model.Education.EducationStatus">
            <summary>
            Текущий статус пользователя в высшем учебном заведении.
            </summary>
        </member>
        <member name="M:VkNet.Model.Education.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Status">
            <summary>
            Информация о статусе пользователя.
            См. описание <see href="http://vk.com/dev/status.get"/>.
            </summary>
        </member>
        <member name="P:VkNet.Model.Status.Text">
            <summary>
            Текст статуса.
            </summary>
        </member>
        <member name="P:VkNet.Model.Status.Audio">
            <summary>
            Информация об играющей в текущей момент у пользователя аудиокомпозиции.
            </summary>
        </member>
        <member name="M:VkNet.Model.Status.FromJson(VkNet.Utils.VkResponse)">
            <summary>
            Разобрать из json.
            </summary>
            <param name="response">Ответ сервера.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Model.Post">
            <summary>
            Запись со стены пользователя или сообщества.
            </summary>
            <remarks>
            См. описание <see href="http://vk.com/dev/post"/>.
            </remarks>
        </member>
        <member name="M:VkNet.Model.Post.#cctor">
            <summary>
            Пост.
            </summary>
        </member>
        <member name="P:VkNet.Model.Post.FromId">
            <summary>
            Идентификатор автора записи.
            </summary>
        </member>
        <member name="P:VkNet.Model.Post.Date">
            <summary>
            Время публикации записи.
            </summary>
        </member>
        <member name="P:VkNet.Model.Post.Text">
            <summary>
            Текст записи.
            </summary>
        </member>
        <member name="P:VkNet.Model.Post.ReplyOwnerId">
            <summary>
            Идентификатор владельца записи, в ответ на которую была оставлена текущая.
            </summary>
        </member>
        <member name="P:VkNet.Model.Post.ReplyPostId">
            <summary>
            Идентификатор записи, в ответ на которую была оставлена текущая.
            </summary>
        </member>
        <member name="P:VkNet.Model.Post.FriendsOnly">
            <summary>
            <c>true</c>, если запись была создана с опцией «Только для друзей», <c>false</c> в противном случае.
            </summary>
        </member>
        <member name="P:VkNet.Model.Post.Comments">
            <summary>
            Информация о комментариях к записи.
            </summary>
        </member>
        <member name="P:VkNet.Model.Post.Likes">
            <summary>
            Информация о лайках к записи.
            </summary>
        </member>
        <member name="P:VkNet.Model.Post.Reposts">
            <summary>
            Информация о репостах записи («Рассказать друзьям»).
            </summary>
        </member>
        <member name="P:VkNet.Model.Post.PostType">
            <summary>
            Тип записи (post, copy, reply, postpone, suggest). Если PostType равен "copy", то запись является копией записи с чужой стены.
            </summary>
        </member>
        <member name="P:VkNet.Model.Post.PostSource">
            <summary>
            Информация о способе размещения записи.
            </summary>
        </member>
        <member name="P:VkNet.Model.Post.Attachments">
            <summary>
            Информация о вложениях записи (фотографии ссылки и т.п.).
            </summary>
        </member>
        <member name="P:VkNet.Model.Post.Attachment">
            <summary>
            Первое вложение.
            </summary>
        </member>
        <member name="P:VkNet.Model.Post.Geo">
            <summary>
            Информация о местоположении.
            </summary>
        </member>
        <member name="P:VkNet.Model.Post.IsPinned">
            <summary>
            Если запись закрепленная - вернет true
            </summary>
        </member>
        <member name="P:VkNet.Model.Post.SignerId">
            <summary>
            Идентификатор автора, если запись была опубликована от имени сообщества и подписана пользователем.
            </summary>
        </member>
        <member name="P:VkNet.Model.Post.CopyPostDate">
            <summary>
            Время публикации записи-оригинала (если запись является копией записи с чужой стены).
            </summary>
        </member>
        <member name="P:VkNet.Model.Post.CopyPostType">
            <summary>
            Тип записи-оригинала (если запись является копией записи с чужой стены).
            </summary>
        </member>
        <member name="P:VkNet.Model.Post.CopyOwnerId">
            <summary>
            Идентификатор владельца стены, у которого была скопирована запись (если запись является копией записи с чужой стены).
            </summary>
        </member>
        <member name="P:VkNet.Model.Post.CopyPostId">
            <summary>
            Идентификатор скопированной записи на стене ее владельца (если запись является копией записи с чужой стены).
            </summary>
        </member>
        <member name="P:VkNet.Model.Post.CopyText">
            <summary>
            Текст комментария, добавленного при копировании (если запись является копией записи с чужой стены).
            </summary>
        </member>
        <member name="P:VkNet.Model.Post.CopyHistory">
            <summary>
            Массив, содержащий историю репостов для записи. Возвращается только в том случае, если запись является репостом.
            </summary>
        </member>
        <member name="P:VkNet.Model.Post.CreatedBy">
            <summary>
            Идентификатор создателя записи в группе или паблике (тот, кто фактически ее написал)
            </summary>
        </member>
        <member name="P:VkNet.Model.Post.CopyCommenterId">
            <summary>
            Если запись является копией записи с чужой стены, то в этом поле содержится идентификатор коментатора записи.
            </summary>
        </member>
        <member name="P:VkNet.Model.Post.CopyCommentId">
            <summary>
            Если запись является копией записи с чужой стены, то в этом поле содержится идентификатор коментария.
            </summary>
        </member>
        <member name="P:VkNet.Model.Post.CanDelete">
            <summary>
            Признак может ли текущий пользователь удалить эту запись.
            </summary>
        </member>
        <member name="P:VkNet.Model.Post.CanEdit">
            <summary>
            Признак может ли текущий пользователь редактировать эту запись.
            </summary>
        </member>
        <member name="P:VkNet.Model.Post.CanPin">
            <summary>
            Информация о том, может ли текущий пользователь закрепить запись (1 — может, 0 — не может)
            </summary>
        </member>
        <member name="T:VkNet.ApiAuthParams">
            <summary>
            Параметры авторизации
            </summary>
        </member>
        <member name="P:VkNet.ApiAuthParams.ApplicationId">
            <summary>
            Идентификатор приложения с помощью которого будет авторизован пользователь
            </summary>
        </member>
        <member name="P:VkNet.ApiAuthParams.Login">
            <summary>
            Логин пользователя
            </summary>
        </member>
        <member name="P:VkNet.ApiAuthParams.Password">
            <summary>
            Пароль пользователя
            </summary>
        </member>
        <member name="P:VkNet.ApiAuthParams.Settings">
            <summary>
            Права доступа приложений.
            См. описание <see href="http://vk.com/pages?oid=-1&amp;p=Права_доступа_приложений"/>.
            </summary>
        </member>
        <member name="P:VkNet.ApiAuthParams.TwoFactorAuthorization">
            <summary>
            Функция двухфакторной авторизации
            </summary>
        </member>
        <member name="P:VkNet.ApiAuthParams.CaptchaSid">
            <summary>
            Идентификатор капчи (если установлена)
            </summary>
        </member>
        <member name="P:VkNet.ApiAuthParams.CaptchaKey">
            <summary>
            Ключ капчи (если необходимо)
            </summary>
        </member>
        <member name="P:VkNet.ApiAuthParams.Host">
            <summary>
            Имя узла прокси-сервера.
            </summary>
        </member>
        <member name="P:VkNet.ApiAuthParams.Port">
            <summary>
            Номер порта используемого Host.
            </summary>
        </member>
        <member name="T:VkNet.Properties.Resources">
            <summary>
              Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
            </summary>
        </member>
        <member name="P:VkNet.Properties.Resources.ResourceManager">
            <summary>
              Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
            </summary>
        </member>
        <member name="P:VkNet.Properties.Resources.Culture">
            <summary>
              Перезаписывает свойство CurrentUICulture текущего потока для всех
              обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
            </summary>
        </member>
        <member name="P:VkNet.Properties.Resources.AddFriendStatus_Accepted">
            <summary>
              Ищет локализованную строку, похожую на Заявка на добавление в друзья от данного пользователя одобрена.
            </summary>
        </member>
        <member name="P:VkNet.Properties.Resources.AddFriendStatus_Resubmit">
            <summary>
              Ищет локализованную строку, похожую на Повторная отправка заявки.
            </summary>
        </member>
        <member name="P:VkNet.Properties.Resources.AddFriendStatus_Sended">
            <summary>
              Ищет локализованную строку, похожую на Заявка на добавление данного пользователя в друзья отправлена.
            </summary>
        </member>
        <member name="P:VkNet.Properties.Resources.AddFriendStatus_Unknown">
            <summary>
              Ищет локализованную строку, похожую на Статус ответа неизвестен.
            </summary>
        </member>
        <member name="P:VkNet.Properties.Resources.MaritalStatus_Engaged">
            <summary>
              Ищет локализованную строку, похожую на Помолвлен.
            </summary>
        </member>
        <member name="P:VkNet.Properties.Resources.MaritalStatus_InLove">
            <summary>
              Ищет локализованную строку, похожую на Влюблён.
            </summary>
        </member>
        <member name="P:VkNet.Properties.Resources.MaritalStatus_ItsComplicated">
            <summary>
              Ищет локализованную строку, похожую на Всё сложно.
            </summary>
        </member>
        <member name="P:VkNet.Properties.Resources.MaritalStatus_Married">
            <summary>
              Ищет локализованную строку, похожую на Женат.
            </summary>
        </member>
        <member name="P:VkNet.Properties.Resources.MaritalStatus_Meets">
            <summary>
              Ищет локализованную строку, похожую на Встречается.
            </summary>
        </member>
        <member name="P:VkNet.Properties.Resources.MaritalStatus_Single">
            <summary>
              Ищет локализованную строку, похожую на Не женат.
            </summary>
        </member>
        <member name="P:VkNet.Properties.Resources.MaritalStatus_TheActiveSearch">
            <summary>
              Ищет локализованную строку, похожую на В активном поиске.
            </summary>
        </member>
        <member name="P:VkNet.Properties.Resources.Sex_Female">
            <summary>
              Ищет локализованную строку, похожую на Женский.
            </summary>
        </member>
        <member name="P:VkNet.Properties.Resources.Sex_Male">
            <summary>
              Ищет локализованную строку, похожую на Мужской.
            </summary>
        </member>
        <member name="P:VkNet.Properties.Resources.Sex_Unknown">
            <summary>
              Ищет локализованную строку, похожую на Не указан.
            </summary>
        </member>
        <member name="P:VkNet.Properties.Resources.UserSort_ByPopularity">
            <summary>
              Ищет локализованную строку, похожую на По популярности.
            </summary>
        </member>
        <member name="P:VkNet.Properties.Resources.UserSort_ByRegDate">
            <summary>
              Ищет локализованную строку, похожую на По дате регистрации.
            </summary>
        </member>
        <member name="T:VkNet.Utils.ApiMethodNameAttribute">
            <summary>
            Задает название метода на сервере ВК (используется генератором юнит-тестов)
            </summary>
        </member>
        <member name="P:VkNet.Utils.ApiMethodNameAttribute.Name">
            <summary>
            Название метода
            </summary>
        </member>
        <member name="P:VkNet.Utils.ApiMethodNameAttribute.Order">
            <summary>
            Порядок вызова метода
            </summary>
            <remarks>
            Методы с большим числом вызываются раньше
            </remarks>
        </member>
        <member name="P:VkNet.Utils.ApiMethodNameAttribute.Skip">
            <summary>
            Пропускает генерацию юнит теста для этого метода
            </summary>
        </member>
        <member name="M:VkNet.Utils.ApiMethodNameAttribute.#ctor(System.String)">
            <summary>
            Конструктор
            </summary>
            <param name="name">Название метода</param>
        </member>
        <member name="T:VkNet.Utils.ApiVersionAttribute">
            <summary>
            Версия VK API, для которой реализован метод.
            </summary>
        </member>
        <member name="P:VkNet.Utils.ApiVersionAttribute.Version">
            <summary>
            Версия VK API
            </summary>
        </member>
        <member name="M:VkNet.Utils.ApiVersionAttribute.#ctor(System.String)">
            <summary>
            Создает экземпляр атрибута <see cref="T:VkNet.Utils.ApiVersionAttribute"/> с заданой версией API
            </summary>
            <param name="version">Версия API</param>
        </member>
        <member name="T:VkNet.Utils.DefaultValueAttribute">
            <summary>
            Значение enum, используемое по умолчанию.
            </summary>
        </member>
        <member name="T:VkNet.Utils.VkParameters">
            <summary>
            Параметры запроса к ВКонтакте.
            </summary>
        </member>
        <member name="M:VkNet.Utils.VkParameters.#ctor">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:VkNet.Utils.VkParameters"/>.
            </summary>
        </member>
        <member name="M:VkNet.Utils.VkParameters.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:VkNet.Utils.VkParameters"/> на основе словаря.
            </summary>
            <param name="parameters">
            Параметры запроса.
            </param>
        </member>
        <member name="P:VkNet.Utils.VkParameters.Empty">
            <summary>
            Параметры для запроса без параметров.
            </summary>
        </member>
        <member name="M:VkNet.Utils.VkParameters.Add``1(System.String,``0)">
            <summary>
            Добавляет параметр запроса.
            </summary>
            <typeparam name="T">Тип значения параметра запроса.</typeparam>
            <param name="name">Имя параметра запроса.</param>
            <param name="value">Значение параметра запроса.</param>
        </member>
        <member name="M:VkNet.Utils.VkParameters.Add``1(System.String,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Добавляет параметр запроса, представляющий собой последовательность элементов заданного типа.
            Последовательность добавляется в виде строкового значения, содержащего ее элементы, разделенные запятой.
            </summary>
            <typeparam name="T">Имя типа элементов последовательности.</typeparam>
            <param name="name">Имя параметра запроса.</param>
            <param name="collection">Последовательность, представляющая значение параметра запроса.</param>
        </member>
        <member name="M:VkNet.Utils.VkParameters.Add``1(System.String,System.Collections.Generic.List{``0})">
            <summary>
            Добавляет именованный параметр запроса, представляющий собой коллекцию элементов заданного типа.
            Коллекция добавляетсяв виде строкового значения, содержащего ее элементы, разделенные запятой.
            </summary>
            <typeparam name="T">Имя типа элементов коллекции.</typeparam>
            <param name="name">Имя параметра запроса.</param>
            <param name="collection">Коллекция, представляющая значение параметра запроса.</param>
        </member>
        <member name="M:VkNet.Utils.VkParameters.Add``1(System.String,System.Nullable{``0})">
            <summary>
            Добавляет параметр запроса.
            Если передан null, то добавление параметра не производится.
            </summary>
            <typeparam name="T">Тип значения параметра запроса.</typeparam>
            <param name="name">Имя параметра запроса.</param>
            <param name="nullableValue">Значение параметра запроса.</param>
        </member>
        <member name="M:VkNet.Utils.VkParameters.Add(System.String,System.Nullable{System.DateTime})">
            <summary>
            Добавляет параметр-дату.
            Если передан null, то добавление не производится.
            </summary>
            <param name="name">Имя параметра запроса.</param>
            <param name="nullableDateTime">Значение параметра.</param>
        </member>
        <member name="M:VkNet.Utils.VkParameters.Add(System.String,System.Nullable{System.Boolean})">
            <summary>
            Добавляет логический параметр.
            Если передан null или значение параметра false, то добавление не производится.
            </summary>
            <param name="name">Имя параметра запроса.</param>
            <param name="nullableValue">Значение параметра.</param>
        </member>
        <member name="M:VkNet.Utils.VkParameters.Add(System.String,System.Boolean)">
            <summary>
            Добавляет логический параметр.
            Если передан null, то добавление не производится.
            </summary>
            <param name="name">Имя параметра запроса.</param>
            <param name="value">Значение параметра.</param>
        </member>
        <member name="T:VkNet.Utils.VkValueAttribute">
            <summary>
            Указывает параметры метода на сервере ВК
            </summary>
        </member>
        <member name="P:VkNet.Utils.VkValueAttribute.Name">
            <summary>
            Название параметра
            </summary>
        </member>
        <member name="P:VkNet.Utils.VkValueAttribute.Value">
            <summary>
            Значение параметра
            </summary>
        </member>
        <member name="M:VkNet.Utils.VkValueAttribute.#ctor(System.String,System.Object)">
            <summary>
            Конструктор
            </summary>
            <param name="name">Название параметра</param>
            <param name="value">Значение параметра</param>
        </member>
        <member name="T:VkNet.Utils.Browser">
            <summary>
            Браузер, через который производится сетевое взаимодействие с ВКонтакте.
            Сетевое взаимодействие выполняется с помощью <see cref="T:System.Net.HttpWebRequest"/>.
            </summary>
        </member>
        <member name="F:VkNet.Utils.Browser._host">
            <summary>
            Адрес хоста
            </summary>
        </member>
        <member name="F:VkNet.Utils.Browser._port">
            <summary>
            Порт
            </summary>
        </member>
        <member name="M:VkNet.Utils.Browser.GetJson(System.String)">
            <summary>
            Получение json по url-адресу
            </summary>
            <param name="url">Адрес получения json</param>
            <returns>Строка в формате json</returns>
        </member>
        <member name="M:VkNet.Utils.Browser.UploadFile(System.String,System.String)">
            <summary>
            Загружает файл на заданный Url
            </summary>
            <param name="uploadUrl">Адрес для загрузки</param>
            <param name="path">Путь к файлу</param>
            <returns>Cтрока, используемая далее в Vk API</returns>
        </member>
        <member name="M:VkNet.Utils.Browser.DownloadFile(System.String,System.String)">
            <summary>
            Скачивает файл по заданному Url
            </summary>
            <param name="url">Url для скачки</param>
            <param name="path">Путь сохранения файла</param>
        </member>
        <member name="M:VkNet.Utils.Browser.Authorize(System.UInt64,System.String,System.String,VkNet.Enums.Filters.Settings,System.Func{System.String},System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Авторизация на сервере ВК
            </summary>
            <param name="appId">Идентификатор приложения</param>
            <param name="email">Логин - телефон или эл. почта</param>
            <param name="password">Пароль</param>
            <param name="settings">Уровень доступа приложения</param>
            <param name="code">Код двухфакторной авторизации</param>
            <param name="captchaSid">Идентификатор капчи</param>
            <param name="captchaKey">Текст капчи</param>
            <param name="host">Имя узла прокси-сервера.</param>
            <param name="port">Номер порта используемого Host.</param>
            <returns>Информация об авторизации приложения</returns>
        </member>
        <member name="M:VkNet.Utils.Browser.CreateAuthorizeUrlFor(System.UInt64,VkNet.Enums.Filters.Settings,VkNet.Enums.SafetyEnums.Display)">
            <summary>
            Построить URL для авторизации.
            </summary>
            <param name="appId">Идентификатор приложения.</param>
            <param name="settings">Настройки прав доступа.</param>
            <param name="display">Вид окна авторизации.</param>
            <returns></returns>
        </member>
        <member name="T:VkNet.Utils.IBrowser">
            <summary>
            Интерфейс браузера, с помощью которого осуществляется сетевое взаимодействие.
            Интерфейс введен с целью обеспечения возможности выполнения модульного тестирования.
            </summary>
        </member>
        <member name="M:VkNet.Utils.IBrowser.GetJson(System.String)">
            <summary>
            Выполняет JSON-запрос к ВКонтакте.
            </summary>
            <param name="url">URL, в котором закодированы параметры запроса.</param>
            <returns>Результат выполнения запроса, полученный от сервера в формате JSON.</returns>
        </member>
        <member name="M:VkNet.Utils.IBrowser.Authorize(System.UInt64,System.String,System.String,VkNet.Enums.Filters.Settings,System.Func{System.String},System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Выполняет авторизацию ВКонтакте.
            Если приложение с идентификатором <paramref name="appId"/> не было установлено у пользователя, имеющего
            логин <paramref name="email"/>, то производится его установка с разрешениями <paramref name="settings"/>.
            </summary>
            <param name="appId">Идентификатор авторизуемого приложения.</param>
            <param name="email">Логин пользователя ВКонтакте (его почта).</param>
            <param name="password">Пароль пользователя.</param>
            <param name="settings">Запрашиваемые для работы разрешения.</param>
            <param name="code">Провайдер кода для двухфакторной авторизации.</param>
            <param name="captchaSid">Индентификатор капчи</param>
            <param name="captchaKey">Текст капчи.</param>
            <param name="host">Имя узла прокси-сервера.</param>
            <param name="port">Номер порта используемого Host.</param>
            <returns>
            Информация об авторизации приложения.
            </returns>
        </member>
        <member name="M:VkNet.Utils.Utilities.GetNullableLongId(VkNet.Utils.VkResponse)">
             <summary>
             Получение идентификатора.
            
             Применять когда id может быть задано как строкой так и числом в json'e.
             </summary>
             <param name="response"></param>
             <returns></returns>
        </member>
        <member name="T:VkNet.Utils.VkErrors">
            <summary>
            Ошибки VK
            </summary>
        </member>
        <member name="M:VkNet.Utils.VkErrors.ThrowIfNullOrEmpty(System.Linq.Expressions.Expression{System.Func{System.String}})">
            <summary>
            Ошибка если строка null или пустая.
            </summary>
            <param name="expr">The expr.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:VkNet.Utils.VkErrors.ThrowIfNumberNotInRange``1(``0,``0,``0)">
            <summary>
            Ошибка если число не в диапозоне.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value">Значение.</param>
            <param name="min">Минимальное значение.</param>
            <param name="max">Максимальное значение.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:VkNet.Utils.VkErrors.ThrowIfNumberIsNegative(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.Int64}}})">
            <summary>
            Ошибка если число отрицательное.
            </summary>
            <param name="expr">Выражение.</param>
            <exception cref="T:System.ArgumentException">Отрицательное значение.</exception>
        </member>
        <member name="M:VkNet.Utils.VkErrors.ThrowIfNumberIsNegative(System.Linq.Expressions.Expression{System.Func{System.Int64}})">
            <summary>
            Ошибка если число отрицательное.
            </summary>
            <param name="expr">Выражение.</param>
            <exception cref="T:System.ArgumentException">Отрицательное значение.</exception>
        </member>
        <member name="M:VkNet.Utils.VkErrors.ThrowIfNumberIsNegative``1(System.Linq.Expressions.Expression{``0})">
            <summary>
            Ошибка если число отрицательное.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="expr">Выражение.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">expr</exception>
        </member>
        <member name="M:VkNet.Utils.VkErrors.IfErrorThrowException(System.String)">
            <summary>
            Ошибки VK.
            </summary>
            <param name="json">JSON.</param>
            <exception cref="T:VkNet.Exception.VkApiException">
            Неправильный данные JSON.
            </exception>
            <exception cref="T:VkNet.Exception.CaptchaNeededException"></exception>
            <exception cref="T:VkNet.Exception.UserAuthorizationFailException"></exception>
            <exception cref="T:VkNet.Exception.InvalidParameterException"></exception>
            <exception cref="T:VkNet.Exception.TooManyRequestsException"></exception>
            <exception cref="T:VkNet.Exception.AccessDeniedException"></exception>
            <exception cref="T:VkNet.Exception.PostLimitException"></exception>
            <exception cref="T:VkNet.Exception.OutOfLimitsException"></exception>
        </member>
        <member name="T:VkNet.Utils.VkAuthorization">
            <summary>
            Информация об авторизации приложения на действия.
            </summary>
        </member>
        <member name="M:VkNet.Utils.VkAuthorization.From(System.Uri)">
            <summary>
            Извлекает из URL, на которую произошло перенаправление при авторизации, информацию об авторизации.
            </summary>
            <param name="responseUrl">
            URL, на которую произошло перенаправление при авторизации.
            </param>
            <returns>Информация об авторизации.</returns>
        </member>
        <member name="P:VkNet.Utils.VkAuthorization.IsAuthorized">
            <summary>
            Возвращает признак была ли авторизация успешной.
            </summary>
        </member>
        <member name="P:VkNet.Utils.VkAuthorization.IsAuthorizationRequired">
            <summary>
            Проверяет требуется ли получения у авторизации на запрошенные приложением действия (при установке приложения пользователю).
            </summary>
        </member>
        <member name="P:VkNet.Utils.VkAuthorization.AccessToken">
            <summary>
            Маркер доступа, который необходимо использовать для доступа к API ВКонтакте.
            </summary>
        </member>
        <member name="P:VkNet.Utils.VkAuthorization.ExpiresIn">
            <summary>
            Время истечения срока действия маркера доступа.
            </summary>
        </member>
        <member name="P:VkNet.Utils.VkAuthorization.UserId">
            <summary>
            Идентификатор пользователя, у которого работает приложение (от имени которого был произведен вход).
            </summary>
        </member>
        <member name="P:VkNet.Utils.VkAuthorization.CaptchaID">
            <summary>
            ID капчи, если она появилась
            </summary>
        </member>
        <member name="T:VkNet.VkApiDelegate">
            <summary>
            Служит для оповещения об истечении токена
            </summary>
            <param name="api">Экземпляр API у которого истекло время токена</param>
        </member>
        <member name="T:VkNet.VkApi">
            <summary>
            API для работы с ВКонтакте. Выступает в качестве фабрики для различных категорий API (например, для работы с пользователями,
            группами и т.п.).
            </summary>
        </member>
        <member name="F:VkNet.VkApi._expireTimer">
            <summary>
            Таймер.
            </summary>
        </member>
        <member name="F:VkNet.VkApi._requestsPerSecond">
            <summary>
            Запросов в секунду.
            </summary>
        </member>
        <member name="F:VkNet.VkApi._minInterval">
            <summary>
            Минимальное время, которое должно пройти между запросами чтобы не привысить кол-во запросов в секунду.
            </summary>
        </member>
        <member name="P:VkNet.VkApi.LastInvokeTime">
            <summary>
            Время вызова последнего метода этим объектом
            </summary>
        </member>
        <member name="P:VkNet.VkApi.LastInvokeTimeSpan">
            <summary>
            Время, прошедшее с момента последнего обращения к API этим объектом
            </summary>
        </member>
        <member name="P:VkNet.VkApi.RequestsPerSecond">
            <summary>
            Ограничение на кол-во запросов в секунду
            </summary>
        </member>
        <member name="E:VkNet.VkApi.OnTokenExpires">
            <summary>
            Оповещает об истечении срока токена доступа
            </summary>
        </member>
        <member name="P:VkNet.VkApi.Users">
            <summary>
            API для работы с пользователями.
            </summary>
        </member>
        <member name="P:VkNet.VkApi.Friends">
            <summary>
            API для работы с друзьями.
            </summary>
        </member>
        <member name="P:VkNet.VkApi.Status">
            <summary>
            API для работы со статусом пользователя или сообщества.
            </summary>
        </member>
        <member name="P:VkNet.VkApi.Messages">
            <summary>
            API для работы с сообщениями.
            </summary>
        </member>
        <member name="P:VkNet.VkApi.Groups">
            <summary>
            API для работы с .
            </summary>
        </member>
        <member name="P:VkNet.VkApi.Audio">
            <summary>
            API для работы с аудиозаписями.
            </summary>
        </member>
        <member name="P:VkNet.VkApi.Database">
            <summary>
            API для получения справочной информации (страны, города, школы, учебные заведения и т.п.).
            </summary>
        </member>
        <member name="P:VkNet.VkApi.Utils">
            <summary>
            API для работы со служебными методами.
            </summary>
        </member>
        <member name="P:VkNet.VkApi.Wall">
            <summary>
            API для работы со стеной пользователя.
            </summary>
        </member>
        <member name="P:VkNet.VkApi.Fave">
            <summary>
            API для работы с закладками.
            </summary>
        </member>
        <member name="P:VkNet.VkApi.Video">
            <summary>
            API для работы с видеофайлами.
            </summary>
        </member>
        <member name="P:VkNet.VkApi.Account">
            <summary>
            API для работы с аккаунтом пользователя.
            </summary>
        </member>
        <member name="P:VkNet.VkApi.Photo">
            <summary>
            API для работы с фотографиями
            </summary>
        </member>
        <member name="P:VkNet.VkApi.Docs">
            <summary>
            API для работы с документами
            </summary>
        </member>
        <member name="P:VkNet.VkApi.Likes">
            <summary>
            API для работы с лайками
            </summary>
        </member>
        <member name="P:VkNet.VkApi.Pages">
            <summary>
            API для работы с wiki.
            </summary>
        </member>
        <member name="P:VkNet.VkApi.Apps">
            <summary>
            API для работы с приложениями.
            </summary>
        </member>
        <member name="P:VkNet.VkApi.NewsFeed">
            <summary>
            API для работы с новостной лентой.
            </summary>
        </member>
        <member name="P:VkNet.VkApi.Stats">
            <summary>
            API для работы со статистикой.
            </summary>
        </member>
        <member name="P:VkNet.VkApi.Gifts">
            <summary>
            API для работы с подарками.
            </summary>
        </member>
        <member name="P:VkNet.VkApi.Markets">
            <summary>
            API для работы с товарами.
            </summary>
        </member>
        <member name="P:VkNet.VkApi.Auth">
            <summary>
            API для работы с Авторизацией.
            </summary>
        </member>
        <member name="P:VkNet.VkApi.Browser">
            <summary>
            Браузер.
            </summary>
        </member>
        <member name="P:VkNet.VkApi.IsAuthorized">
            <summary>
            Была ли произведена авторизация каким либо образом
            </summary>
        </member>
        <member name="P:VkNet.VkApi.AccessToken">
            <summary>
            Токен для доступа к методам API
            </summary>
        </member>
        <member name="P:VkNet.VkApi.UserId">
            <summary>
            Идентификатор пользователя, от имени которого была проведена авторизация.
            Если авторизация не была произведена с использованием метода <see cref="M:VkNet.VkApi.Authorize(System.Int32,System.String,System.String,VkNet.Enums.Filters.Settings,System.Func{System.String},System.Nullable{System.Int64},System.String)"/>,
            то возвращается null.
            </summary>
        </member>
        <member name="M:VkNet.VkApi.#ctor">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:VkNet.VkApi"/>.
            </summary>
        </member>
        <member name="M:VkNet.VkApi.Authorize(VkNet.ApiAuthParams)">
            <summary>
            Авторизация и получение токена
            </summary>
            <param name="params">Данные авторизации</param>
        </member>
        <member name="M:VkNet.VkApi.Authorize(System.Int32,System.String,System.String,VkNet.Enums.Filters.Settings,System.Func{System.String},System.Nullable{System.Int64},System.String)">
            <summary>
            Авторизация и получение токена
            </summary>
            <param name="appId">Идентификатор приложения</param>
            <param name="emailOrPhone">Email или телефон</param>
            <param name="password">Пароль</param>
            <param name="settings">Права доступа для приложения</param>
            <param name="code">Делегат получения кода для двухфакторной авторизации</param>
            <param name="captchaSid">Идентикикатор капчи</param>
            <param name="captchaKey">Текст капчи</param>
        </member>
        <member name="M:VkNet.VkApi.AuthorizeAsync(VkNet.ApiAuthParams)">
            <summary>
            Авторизация и получение токена в асинхронном режиме
            </summary>
            <param name="params">Данные авторизации</param>
        </member>
        <member name="M:VkNet.VkApi.Authorize(System.String,System.Nullable{System.Int64})">
            <summary>
            Выполняет авторизацию с помощью маркера доступа (access token), полученного извне.
            </summary>
            <param name="accessToken">Маркер доступа, полученный извне.</param>
            <param name="userId">Идентификатор пользователя, установившего приложение (необязательный параметр).</param>
        </member>
        <member name="M:VkNet.VkApi.RefreshToken(System.Func{System.String})">
            <summary>
            Получает новый AccessToken использую логин, пароль, приложение и настройки указанные при последней авторизации.
            </summary>
            <param name="code">Делегат двухфакторной авторизации. Если не указан - будет взят из параметров (если есть)</param>
        </member>
        <member name="M:VkNet.VkApi.RefreshTokenAsync(System.Func{System.String})">
            <summary>
            Получает новый AccessToken использую логин, пароль, приложение и настройки указанные при последней авторизации.
            </summary>
            <param name="code">Делегат двухфакторной авторизации. Если не указан - будет взят из параметров (если есть)</param>
        </member>
        <member name="M:VkNet.VkApi.Authorize(System.UInt64,System.String,System.String,VkNet.Enums.Filters.Settings,System.Func{System.String},System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Авторизация и получение токена
            </summary>
            <param name="appId">Идентификатор приложения</param>
            <param name="emailOrPhone">Email или телефон</param>
            <param name="password">Пароль</param>
            <param name="code">Делегат получения кода для двухфакторной авторизации</param>
            <param name="captchaSid">Идентикикатор капчи</param>
            <param name="captchaKey">Текст капчи</param>
            <param name="settings">Права доступа для приложения</param>
            <param name="host">Имя узла прокси-сервера.</param>
            <param name="port">Номер порта используемого Host.</param>
            <exception cref="T:VkNet.Exception.VkApiAuthorizationException"></exception>
        </member>
        <member name="M:VkNet.VkApi.StopTimer">
            <summary>
            Прекращает работу таймера оповещения
            </summary>
        </member>
        <member name="M:VkNet.VkApi.AlertExpires(System.Object)">
            <summary>
            Создает событие оповещения об окончании времени токена
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:VkNet.VkApi.Call(System.String,VkNet.Utils.VkParameters,System.Boolean)">
            <summary>
            Вызвать метод.
            </summary>
            <param name="methodName">Название метода.</param>
            <param name="parameters">Параметры.</param>
            <param name="skipAuthorization">Если <c>true</c> то пропустить авторизацию.</param>
            <returns></returns>
        </member>
        <member name="M:VkNet.VkApi.Call(System.String,VkNet.Utils.VkParameters,System.Boolean,System.String)">
            <summary>
            Вызвать метод.
            </summary>
            <param name="methodName">Название метода.</param>
            <param name="parameters">Параметры.</param>
            <param name="skipAuthorization">Если <c>true</c> то пропустить авторизацию.</param>
            <param name="apiVersion">Версия API.</param>
            <returns></returns>
        </member>
        <member name="M:VkNet.VkApi.GetApiUrl(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Получить URL для API.
            </summary>
            <param name="methodName">Название метода.</param>
            <param name="parameters">Параметры.</param>
            <returns></returns>
        </member>
        <member name="M:VkNet.VkApi.Invoke(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)">
            <summary>
            Прямой вызов API-метода
            </summary>
            <param name="methodName">Название метода. Например, "wall.get".</param>
            <param name="parameters">Вход. параметры метода.</param>
            <param name="skipAuthorization">Флаг, что метод можно вызывать без авторизации.</param>
            <exception cref="T:VkNet.Exception.AccessTokenInvalidException"></exception>
            <returns>Ответ сервера в формате JSON.</returns>
        </member>
        <member name="M:VkNet.VkApi.InvokeAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)">
            <summary>
            Прямой вызов API-метода в асинхронном режиме
            </summary>
            <param name="methodName">Название метода. Например, "wall.get".</param>
            <param name="parameters">Вход. параметры метода.</param>
            <param name="skipAuthorization">Флаг, что метод можно вызывать без авторизации.</param>
            <returns>Ответ сервера в формате JSON.</returns>
        </member>
        <member name="T:JetBrains.Annotations.LocalizationRequiredAttribute">
            <summary>
            Indicates that marked element should be localized or not.
            </summary>
            <example>
            <code>
            [LocalizationRequiredAttribute(true)]
            public class Foo
            {
              private string str = "my string"; // Warning: Localizable string
            }
            </code>
            </example>
        </member>
        <member name="M:JetBrains.Annotations.LocalizationRequiredAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:JetBrains.Annotations.LocalizationRequiredAttribute"/> class with
            <see cref="P:JetBrains.Annotations.LocalizationRequiredAttribute.Required"/> set to <see langword="true"/>.
            </summary>
        </member>
        <member name="M:JetBrains.Annotations.LocalizationRequiredAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:JetBrains.Annotations.LocalizationRequiredAttribute"/> class.
            </summary>
            <param name="required"><c>true</c> if a element should be localized; otherwise, <c>false</c>.</param>
        </member>
        <member name="P:JetBrains.Annotations.LocalizationRequiredAttribute.Required">
            <summary>
            Gets a value indicating whether a element should be localized.
            <value><c>true</c> if a element should be localized; otherwise, <c>false</c>.</value>
            </summary>
        </member>
        <member name="M:JetBrains.Annotations.LocalizationRequiredAttribute.Equals(System.Object)">
            <summary>
            Returns whether the value of the given object is equal to the current <see cref="T:JetBrains.Annotations.LocalizationRequiredAttribute"/>.
            </summary>
            <param name="obj">The object to test the value equality of. </param>
            <returns>
            <c>true</c> if the value of the given object is equal to that of the current; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:JetBrains.Annotations.LocalizationRequiredAttribute.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A hash code for the current <see cref="T:JetBrains.Annotations.LocalizationRequiredAttribute"/>.</returns>
        </member>
        <member name="T:JetBrains.Annotations.StringFormatMethodAttribute">
            <summary>
            Indicates that the marked method builds string by format pattern and (optional) arguments. 
            Parameter, which contains format string, should be given in constructor.
            The format string should be in <see cref="M:System.String.Format(System.IFormatProvider,System.String,System.Object[])"/> -like form
            </summary>
            <example>
            <code>
            [StringFormatMethod("message")]
            public void ShowError(string message, params object[] args)
            {
              //Do something
            }
            public void Foo()
            {
              ShowError("Failed: {0}"); // Warning: Non-existing argument in format string
            }
            </code>
            </example>
        </member>
        <member name="M:JetBrains.Annotations.StringFormatMethodAttribute.#ctor(System.String)">
            <summary>
            Initializes new instance of StringFormatMethodAttribute
            </summary>
            <param name="formatParameterName">Specifies which parameter of an annotated method should be treated as format-string</param>
        </member>
        <member name="P:JetBrains.Annotations.StringFormatMethodAttribute.FormatParameterName">
            <summary>
            Gets format parameter name
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.InvokerParameterNameAttribute">
            <summary>
            Indicates that the function argument should be string literal and match one of the parameters
            of the caller function.
            For example, ReSharper annotates the parameter of <see cref="T:System.ArgumentNullException"/>.
            </summary>
            <example>
            <code>
            public void Foo(string param)
            {
              if (param == null)
                throw new ArgumentNullException("par"); // Warning: Cannot resolve symbol
            }
            </code>
            </example>
        </member>
        <member name="T:JetBrains.Annotations.NotifyPropertyChangedInvocatorAttribute">
             <summary>
             Indicates that the method is contained in a type that implements
             <see cref="T:System.ComponentModel.INotifyPropertyChanged"/> interface
             and this method is used to notify that some property value changed.
             </summary>
             <remarks>
             The method should be non-static and conform to one of the supported signatures:
             <list>
             <item><c>NotifyChanged(string)</c></item>
             <item><c>NotifyChanged(params string[])</c></item>
             <item><c>NotifyChanged{T}(Expression{Func{T}})</c></item>
             <item><c>NotifyChanged{T,U}(Expression{Func{T,U}})</c></item>
             <item><c>SetProperty{T}(ref T, T, string)</c></item>
             </list>
             </remarks>
             <example>
             <code>
             public class Foo : INotifyPropertyChanged
             {
               public event PropertyChangedEventHandler PropertyChanged;
            
               [NotifyPropertyChangedInvocator]
               protected virtual void NotifyChanged(string propertyName)
               {}
            
               private string _name;
               public string Name
               {
                 get { return _name; }
                 set
                 {
                   _name = value;
                   NotifyChanged("LastName"); // Warning
                 }
               }
             }
             </code>
             Examples of generated notifications:
             <list>
             <item><c>NotifyChanged("Property")</c></item>
             <item><c>NotifyChanged(() => Property)</c></item>
             <item><c>NotifyChanged((VM x) => x.Property)</c></item>
             <item><c>SetProperty(ref myField, value, "Property")</c></item>
             </list>
             </example>
        </member>
        <member name="T:JetBrains.Annotations.CanBeNullAttribute">
            <summary>
            Indicates that the value of the marked element could be <c>null</c> sometimes, 
            so the check for <c>null</c> is necessary before its usage.
            </summary>
            <example>
            <code>
            [CanBeNull]
            public object Test()
            {
              return null;
            }
            
            public void UseTest()
            {
              var p = Test(); 
              var s = p.ToString(); // Warning: Possible 'System.NullReferenceException' 
            }
            </code>
            </example>
        </member>
        <member name="T:JetBrains.Annotations.NotNullAttribute">
            <summary>
            Indicates that the value of the marked element could never be <c>null</c>
            </summary>
            <example>
            <code>
            [NotNull]
            public object Foo()
            {
              return null; // Warning: Possible 'null' assignment
            } 
            </code>
            </example>
        </member>
        <member name="T:JetBrains.Annotations.ContractAnnotationAttribute">
            <summary>
            Describes dependency between method input and output.
            </summary>
            <syntax>
            <p>Function Definition Table syntax:</p>
            <list>
            <item>FDT      ::= FDTRow [;FDTRow]*</item>
            <item>FDTRow   ::= Input =&gt; Output | Output &lt;= Input</item>
            <item>Input    ::= ParameterName: Value [, Input]*</item>
            <item>Output   ::= [ParameterName: Value]* {halt|stop|void|nothing|Value}</item>
            <item>Value    ::= true | false | null | notnull | canbenull</item>
            </list>
            If method has single input parameter, it's name could be omitted. <br/>
            Using <c>halt</c> (or <c>void</c>/<c>nothing</c>, which is the same) for method output means that the methos doesn't return normally. <br/>
            <c>canbenull</c> annotation is only applicable for output parameters. <br/>
            You can use multiple <c>[ContractAnnotation]</c> for each FDT row, or use single attribute with rows separated by semicolon. <br/>
            </syntax>
            <examples>
            <list>
            <item><code>
            [ContractAnnotation("=> halt")]
            public void TerminationMethod()
            </code></item>
            <item><code>
            [ContractAnnotation("halt &lt;= condition: false")]
            public void Assert(bool condition, string text) // Regular Assertion method
            </code></item>
            <item><code>
            [ContractAnnotation("s:null => true")]
            public bool IsNullOrEmpty(string s) // String.IsNullOrEmpty
            </code></item>
            <item><code>
            // A method that returns null if the parameter is null, and not null if the parameter is not null
            [ContractAnnotation("null => null; notnull => notnull")]
            public object Transform(object data) 
            </code></item>
            <item><code>
            [ContractAnnotation("s:null=>false; =>true,result:notnull; =>false, result:null")]
            public bool TryParse(string s, out Person result)
            </code></item>
            </list>
            </examples>
        </member>
        <member name="T:JetBrains.Annotations.CannotApplyEqualityOperatorAttribute">
            <summary>
            Indicates that the value of the marked type (or its derivatives)
            cannot be compared using '==' or '!=' operators and <c>Equals()</c> should be used instead.
            However, using '==' or '!=' for comparison with <c>null</c> is always permitted.
            </summary>
            <example>
            <code>
            [CannotApplyEqualityOperator]
            class NoEquality
            {
            }
            
            class UsesNoEquality
            {
              public void Test()
              {
                var ca1 = new NoEquality();
                var ca2 = new NoEquality();
            
                if (ca1 != null) // OK
                {
                  bool condition = ca1 == ca2; // Warning
                }
              }
            }
            </code>
            </example>
        </member>
        <member name="T:JetBrains.Annotations.BaseTypeRequiredAttribute">
            <summary>
            When applied to a target attribute, specifies a requirement for any type marked with 
            the target attribute to implement or inherit specific type or types.
            </summary>
            <example>
            <code>
            [BaseTypeRequired(typeof(IComponent)] // Specify requirement
            public class ComponentAttribute : Attribute 
            {}
            
            [Component] // ComponentAttribute requires implementing IComponent interface
            public class MyComponent : IComponent
            {}
            </code>
            </example>
        </member>
        <member name="M:JetBrains.Annotations.BaseTypeRequiredAttribute.#ctor(System.Type)">
            <summary>
            Initializes new instance of BaseTypeRequiredAttribute
            </summary>
            <param name="baseType">Specifies which types are required</param>
        </member>
        <member name="P:JetBrains.Annotations.BaseTypeRequiredAttribute.BaseTypes">
            <summary>
            Gets enumerations of specified base types
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.UsedImplicitlyAttribute">
            <summary>
            Indicates that the marked symbol is used implicitly (e.g. via reflection, in external library),
            so this symbol will not be marked as unused (as well as by other usage inspections)
            </summary>
        </member>
        <member name="P:JetBrains.Annotations.UsedImplicitlyAttribute.TargetFlags">
            <summary>
            Gets value indicating what is meant to be used
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.MeansImplicitUseAttribute">
            <summary>
            Should be used on attributes and causes ReSharper
            to not mark symbols marked with such attributes as unused (as well as by other usage inspections)
            </summary>
        </member>
        <member name="P:JetBrains.Annotations.MeansImplicitUseAttribute.TargetFlags">
            <summary>
            Gets value indicating what is meant to be used
            </summary>
        </member>
        <member name="F:JetBrains.Annotations.ImplicitUseKindFlags.Access">
            <summary>
            Only entity marked with attribute considered used
            </summary>
        </member>
        <member name="F:JetBrains.Annotations.ImplicitUseKindFlags.Assign">
            <summary>
            Indicates implicit assignment to a member
            </summary>
        </member>
        <member name="F:JetBrains.Annotations.ImplicitUseKindFlags.InstantiatedWithFixedConstructorSignature">
            <summary>
            Indicates implicit instantiation of a type with fixed constructor signature.
            That means any unused constructor parameters won't be reported as such.
            </summary>
        </member>
        <member name="F:JetBrains.Annotations.ImplicitUseKindFlags.InstantiatedNoFixedConstructorSignature">
            <summary>
            Indicates implicit instantiation of a type
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.ImplicitUseTargetFlags">
            <summary>
            Specify what is considered used implicitly when marked with <see cref="T:JetBrains.Annotations.MeansImplicitUseAttribute"/> or <see cref="T:JetBrains.Annotations.UsedImplicitlyAttribute"/>
            </summary>
        </member>
        <member name="F:JetBrains.Annotations.ImplicitUseTargetFlags.Members">
            <summary>
            Members of entity marked with attribute are considered used
            </summary>
        </member>
        <member name="F:JetBrains.Annotations.ImplicitUseTargetFlags.WithMembers">
            <summary>
            Entity marked with attribute and all its members considered used
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.PublicAPIAttribute">
            <summary>
            This attribute is intended to mark publicly available API which should not be removed and so is treated as used.
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.InstantHandleAttribute">
            <summary>
            Tells code analysis engine if the parameter is completely handled when the invoked method is on stack. 
            If the parameter is a delegate, indicates that delegate is executed while the method is executed.
            If the parameter is an enumerable, indicates that it is enumerated while the method is executed.
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.PureAttribute">
             <summary>
             Indicates that a method does not make any observable state changes.
             The same as <see cref="T:System.Diagnostics.Contracts.PureAttribute"/>
             </summary>
             <example>
             <code>
             [Pure]
             private int Multiply(int x, int y)
             {
               return x*y;
             }
            
             public void Foo()
             {
               const int a=2, b=2;
               Multiply(a, b); // Waring: Return value of pure method is not used
             }
             </code>
             </example>
        </member>
        <member name="T:JetBrains.Annotations.PathReferenceAttribute">
            <summary>
            Indicates that a parameter is a path to a file or a folder within a web project.
            Path can be relative or absolute, starting from web root (~).
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AspMvcActionAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter is an MVC action.
            If applied to a method, the MVC action name is calculated implicitly from the context.
            Use this attribute for custom wrappers similar to 
            <see cref="!:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, string)"/>
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AspMvcAreaAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC araa.
            Use this attribute for custom wrappers similar to 
            <see cref="!:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, string)"/>
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AspMvcControllerAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter is an MVC controller.
            If applied to a method, the MVC controller name is calculated implicitly from the context.
            Use this attribute for custom wrappers similar to 
            <see cref="!:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, string, string)"/> 
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AspMvcMasterAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC Master.
            Use this attribute for custom wrappers similar to 
            <see cref="!:System.Web.Mvc.Controller.View(string, string)"/>
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AspMvcModelTypeAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC model type.
            Use this attribute for custom wrappers similar to 
            <see cref="!:System.Web.Mvc.Controller.View(string, object)"/>
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AspMvcPartialViewAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter is an MVC partial view.
            If applied to a method, the MVC partial view name is calculated implicitly from the context.
            Use this attribute for custom wrappers similar to 
            <see cref="!:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(HtmlHelper, string)"/>
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AspMvcSupressViewErrorAttribute">
            <summary>
            ASP.NET MVC attribute. Allows disabling all inspections for MVC views within a class or a method.
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AspMvcDisplayTemplateAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC display template.
            Use this attribute for custom wrappers similar to 
            <see cref="!:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(HtmlHelper, string)"/>
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AspMvcEditorTemplateAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC editor template.
            Use this attribute for custom wrappers similar to 
            <see cref="!:System.Web.Mvc.Html.EditorExtensions.EditorForModel(HtmlHelper, string)"/>
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AspMvcViewAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter is an MVC view.
            If applied to a method, the MVC view name is calculated implicitly from the context.
            Use this attribute for custom wrappers similar to 
            <see cref="!:System.Web.Mvc.Controller.View(object)"/>
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AspMvcActionSelectorAttribute">
            <summary>
            ASP.NET MVC attribute. When applied to a parameter of an attribute,
            indicates that this parameter is an MVC action name.
            </summary>
            <example>
            <code>
            [ActionName("Foo")]
            public ActionResult Login(string returnUrl)
            {
              ViewBag.ReturnUrl = Url.Action("Foo"); // OK
              return RedirectToAction("Bar"); // Error: Cannot resolve action
            }
            </code>
            </example>
        </member>
        <member name="T:JetBrains.Annotations.RazorSectionAttribute">
            <summary>
            Razor attribute. Indicates that a parameter or a method is a Razor section.
            Use this attribute for custom wrappers similar to 
            <see cref="!:System.Web.WebPages.WebPageBase.RenderSection(string)"/>
            </summary>
        </member>
    </members>
</doc>
